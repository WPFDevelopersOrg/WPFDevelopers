<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" po:Freeze="True" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:controls="clr-namespace:WPFDevelopers.Controls" xmlns:helpers="clr-namespace:WPFDevelopers.Helpers" xmlns:wpfdev="clr-namespace:WPFDevelopers.Net45x" xmlns:converts="clr-namespace:WPFDevelopers.Converts" xmlns:ec="clr-namespace:Microsoft.Expression.Controls" xmlns:drawingControls="clr-namespace:Microsoft.Expression.Drawing.Controls" xmlns:ed="clr-namespace:Microsoft.Expression.Drawing.Shapes" xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore">
	<Color x:Key="SecondaryTextColor" po:Freeze="True">#909399</Color>
	<Color x:Key="PlaceholderTextColor" po:Freeze="True">#C0C4CC</Color>
	<Color x:Key="NormalColor" po:Freeze="True">#409EFF</Color>
	<Color x:Key="SuccessColor" po:Freeze="True">#67C23A</Color>
	<Color x:Key="SuccessMouseOverColor" po:Freeze="True">#85CE61</Color>
	<Color x:Key="SuccessPressedColor" po:Freeze="True">#5DAF34</Color>
	<Color x:Key="WarningColor" po:Freeze="True">#E6A23C</Color>
	<Color x:Key="WarningMouseOverColor" po:Freeze="True">#EBB563</Color>
	<Color x:Key="WarningPressedColor" po:Freeze="True">#CF9236</Color>
	<Color x:Key="DangerColor" po:Freeze="True">#F56C6C</Color>
	<Color x:Key="DangerMouseOverColor" po:Freeze="True">#F78989</Color>
	<Color x:Key="DangerPressedColor" po:Freeze="True">#DD6161</Color>
	<Color x:Key="InfoColor" po:Freeze="True">#909399</Color>
	<Color x:Key="InfoMouseOverColor" po:Freeze="True">#A6A9AD</Color>
	<Color x:Key="InfoPressedColor" po:Freeze="True">#82848A</Color>
	<Color x:Key="ExtralightColor" po:Freeze="True">#F2F6FC</Color>
	<Color x:Key="BlackColor" po:Freeze="True">#000000</Color>
	<Color x:Key="CircularSingularColor" po:Freeze="True">#BAE766</Color>
	<Color x:Key="CircularDualColor" po:Freeze="True">#B0D440</Color>
	<Color x:Key="DrawPrizeSingularColor" po:Freeze="True">#F63C3D</Color>
	<Color x:Key="DrawPrizeDualColor" po:Freeze="True">#E5292A</Color>
	<sys:Double x:Key="NormalFontSize">13</sys:Double>
	<sys:Double x:Key="MediumFontSize">14</sys:Double>
	<sys:Double x:Key="TitleFontSize">16</sys:Double>
	<FontFamily x:Key="NormalFontFamily">
        Helvetica Neue For Number, 
        -apple-system, 
        BlinkMacSystemFont, 
        Segoe UI,
        Roboto, 
        PingFang SC, 
        Hiragino Sans GB, 
        Microsoft YaHei, 
        Helvetica Neue, 
        Helvetica, Arial, 
        sans-serif
    </FontFamily>
	<FontStretch x:Key="NormalFontStretch">Normal</FontStretch>
	<FontStyle x:Key="NormalFontStyle">Normal</FontStyle>
	<FontWeight x:Key="NormalFontWeight">Normal</FontWeight>
	<Geometry x:Key="PathCheckMark" po:Freeze="True">M384 690l452-452 60 60-512 512-238-238 60-60z</Geometry>
	<Geometry x:Key="PathComboBoxToggleButton" po:Freeze="True">M998 352c0 -8 -4 -17 -10 -23l-50 -50c-6 -6 -14 -10 -23 -10c-8 0 -17 4 -23 10l-393 393l-393 -393c-6 -6 -15 -10 -23 -10s-17 4 -23 10l-50 50c-6 6 -10 15 -10 23s4 17 10 23l466 466c6 6 15 10 23 10s17 -4 23 -10l466 -466c6 -6 10 -15 10 -23z</Geometry>
	<Geometry x:Key="PathBlackout" po:Freeze="True">M8.1772461,11.029181 L10.433105,
                  11.029181 L11.700684,12.801641 L12.973633,
                  11.029181 L15.191895,11.029181 L12.844727,
                  13.999395 L15.21875,17.060919 L12.962891,
                  17.060919 L11.673828,15.256231 L10.352539,
                  17.060919 L8.1396484,17.060919 L10.519043,
                  14.042364 z</Geometry>
	<Geometry x:Key="PathPrevious" po:Freeze="True">M658 316l-196 196 196 196-60 60-256-256 256-256z</Geometry>
	<Geometry x:Key="PathNext" po:Freeze="True">M426 256l256 256-256 256-60-60 196-196-196-196z</Geometry>
	<Geometry x:Key="PathDatePickerDropDown" po:Freeze="True">M11.426758,8.4305077 L11.749023,8.4305077 
                    L11.749023,16.331387 L10.674805,16.331387 
                    L10.674805,10.299648 L9.0742188,11.298672
                    L9.0742188,10.294277 C9.4788408,10.090176 
                    9.9094238,9.8090878 10.365967,9.4510155 
                    C10.82251,9.0929432 11.176106,8.7527733 
                    11.426758,8.4305077 z M14.65086,8.4305077 
                    L18.566387,8.4305077 L18.566387,9.3435936 
                    L15.671368,9.3435936 L15.671368,11.255703 
                    C15.936341,11.058764 16.27293,10.960293 
                    16.681133,10.960293 C17.411602,10.960293 
                    17.969301,11.178717 18.354229,11.615566 
                    C18.739157,12.052416 18.931622,12.673672
                    18.931622,13.479336 C18.931622,15.452317 
                    18.052553,16.438808 16.294415,16.438808
                    C15.560365,16.438808 14.951641,16.234707 
                    14.468243,15.826504 L14.881817,14.929531
                    C15.368796,15.326992 15.837872,15.525723 
                    16.289043,15.525723 C17.298809,15.525723 
                    17.803692,14.895514 17.803692,13.635098 
                    C17.803692,12.460618 17.305971,11.873379 
                    16.310528,11.873379 C15.83071,11.873379 
                    15.399232,12.079271 15.016094,12.491055
                    L14.65086,12.238613 z</Geometry>
	<Geometry x:Key="PathMenuItem" po:Freeze="True">M678.4 512l-365.619-379.904c-13.722-13.824-13.722-36.198 0-50.125 13.722-13.824 35.891-13.824 49.613 0l400.896 404.89c13.722 13.875 13.722 36.301 0 50.125l-400.896 404.89c-13.722 13.875-35.891 13.824-49.613 0-13.722-13.773-13.722-36.198 0-50.125l365.619-379.75z</Geometry>
	<Geometry x:Key="PathSortArrow" po:Freeze="True">M854 512l-342 342-342-342 62-60 238 238v-520h84v520l240-238z</Geometry>
	<Geometry x:Key="PathMetroWindowMaximize" po:Freeze="True">M0.99999994,0.99999994 L0.99999994,9 9,9 9,0.99999994 z M0,0 L10,0 10,10 0,10 z</Geometry>
	<Geometry x:Key="PathMetroWindowRestore" po:Freeze="True">M1,3 L1,9 7,9 7,3 z M3,0.99999994 L3,2 8,2 8,7 9,7 9,0.99999994 z M2,0 L10,0 10,8 8,8 8,10 0,10 0,2 2,2 z</Geometry>
	<Geometry x:Key="PathMetroWindowClose" po:Freeze="True">M 1301 69.6875 L 1305.3049 74 L 1300.9375 78.5313 L 1301.6324 79.2263 L 1306 74.735 L 1310.4263 79.2613 L 1311.1563 78.5313 L 1306.7 74 L 1310.9375 69.6875 L 1310.2075 68.9575 L 1306 73.265 L 1301.6949 68.9925 L 1301 69.6875 Z</Geometry>
	<Geometry x:Key="PathInformation" po:Freeze="True">M426 726l384-384-60-62-324 324-152-152-60 60zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z</Geometry>
	<Geometry x:Key="PathWarning" po:Freeze="True">M512 960c-281.6 0-512-230.4-512-512s230.4-512 512-512 512 230.4 512 512-230.4 512-512 512zM576 128h-128v448h128v-448zM576 640h-128v128h128v-128z</Geometry>
	<Geometry x:Key="PathQuestion" po:Freeze="True">M10 20a10 10 0 1 1 0-20 10 10 0 0 1 0 20zm2-13c0 .28-.21.8-.42 1L10 9.58c-.57.58-1 1.6-1 2.42v1h2v-1c0-.29.21-.8.42-1L13 9.42c.57-.58 1-1.6 1-2.42a4 4 0 1 0-8 0h2a2 2 0 1 1 4 0zm-3 8v2h2v-2H9z</Geometry>
	<Geometry x:Key="PathError" po:Freeze="True">M264 456Q210 456 164 429 118 402 91 356 64 310 64 256 64 202 91 156 118 110 164 83 210 56 264 56 318 56 364 83 410 110 437 156 464 202 464 256 464 310 437 356 410 402 364 429 318 456 264 456ZM264 288L328 352 360 320 296 256 360 192 328 160 264 224 200 160 168 192 232 256 168 320 200 352 264 288Z</Geometry>
	<Geometry x:Key="PathSmileyOutline" po:Freeze="True">M14.36,14.23a3.76,3.76,0,0,1-4.72,0,1,1,0,0,0-1.28,1.54,5.68,5.68,0,0,0,7.28,0,1,1,0,1,0-1.28-1.54ZM9,11a1,1,0,1,0-1-1A1,1,0,0,0,9,11Zm6-2a1,1,0,1,0,1,1A1,1,0,0,0,15,9ZM12,2A10,10,0,1,0,22,12,10,10,0,0,0,12,2Zm0,18a8,8,0,1,1,8-8A8,8,0,0,1,12,20Z</Geometry>
	<Geometry x:Key="PathBus" po:Freeze="True">M18,11H6V6H18M16.5,17A1.5,1.5 0 0,1 15,15.5A1.5,1.5 0 0,1 16.5,14A1.5,1.5 0 0,1 18,15.5A1.5,1.5 0 0,1 16.5,17M7.5,17A1.5,1.5 0 0,1 6,15.5A1.5,1.5 0 0,1 7.5,14A1.5,1.5 0 0,1 9,15.5A1.5,1.5 0 0,1 7.5,17M4,16C4,16.88 4.39,17.67 5,18.22V20A1,1 0 0,0 6,21H7A1,1 0 0,0 8,20V19H16V20A1,1 0 0,0 17,21H18A1,1 0 0,0 19,20V18.22C19.61,17.67 20,16.88 20,16V6C20,2.5 16.42,2 12,2C7.58,2 4,2.5 4,6V16Z</Geometry>
	<Geometry x:Key="PathFriend" po:Freeze="True">M12.3,12.22A4.92,4.92,0,0,0,14,8.5a5,5,0,0,0-10,0,4.92,4.92,0,0,0,1.7,3.72A8,8,0,0,0,1,19.5a1,1,0,0,0,2,0,6,6,0,0,1,12,0,1,1,0,0,0,2,0A8,8,0,0,0,12.3,12.22ZM9,11.5a3,3,0,1,1,3-3A3,3,0,0,1,9,11.5Zm9.74.32A5,5,0,0,0,15,3.5a1,1,0,0,0,0,2,3,3,0,0,1,3,3,3,3,0,0,1-1.5,2.59,1,1,0,0,0-.5.84,1,1,0,0,0,.45.86l.39.26.13.07a7,7,0,0,1,4,6.38,1,1,0,0,0,2,0A9,9,0,0,0,18.74,11.82Z</Geometry>
	<Geometry x:Key="PathBuildingRegular" po:Freeze="True">M128 148v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12zm140 12h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm-128 96h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm128 0h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm-76 84v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm76 12h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm180 124v36H0v-36c0-6.6 5.4-12 12-12h19.5V24c0-13.3 10.7-24 24-24h337c13.3 0 24 10.7 24 24v440H436c6.6 0 12 5.4 12 12zM79.5 463H192v-67c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v67h112.5V49L80 48l-.5 415z</Geometry>
	<Geometry x:Key="PathAlarmClock" po:Freeze="True">M470 124.837l-98.443-81.78-27.814 32.931 98.442 81.769L470 124.837zM167.192 74.919L139.366 42 42 124.837l27.814 32.919 97.378-82.837zm99.509 97.709H234.6v127.446l101.649 60.539L352.3 334.06l-85.6-49.917V172.628zM256 87.665c-107 0-192.601 86.021-192.601 191.166C63.399 383.98 149 470 256 470c105.936 0 192.601-86.02 192.601-191.169 0-105.144-86.665-191.166-192.601-191.166zm0 339.855c-82.393 0-149.8-66.906-149.8-148.688 0-81.777 67.407-148.684 149.8-148.684 82.394 0 149.8 66.906 149.8 148.684 0 82.839-67.406 148.688-149.8 148.688z</Geometry>
	<Geometry x:Key="PathFlag" po:Freeze="True">M687.5 125C500 125 375 13.7 187.5 62.5V31.3C187.5 31.3 187.5 0 156.3 0C125 0 125 31.3 125 31.3V1000H187.5V625C375 562.5 500 687.5 687.5 687.5C875 687.5 937.5 625 937.5 625V62.5C937.5 62.5 875 125 687.5 125Z</Geometry>
	<Geometry x:Key="PathCircularItem" po:Freeze="True">M 200,200 0,200 A 200,200 0 0 1 58.6,58.6z</Geometry>
	<Geometry x:Key="PathAdd" po:Freeze="True">M734.618 760.269c-24.013 24.013-62.925 24.013-86.886 0l-135.731-155.136-135.731 155.085c-24.013 24.013-62.925 24.013-86.886 0-24.013-24.013-24.013-62.925 0-86.886l141.21-161.28-141.261-161.382c-24.013-24.013-24.013-62.874 0-86.886s62.874-24.013 86.886 0l135.782 155.187 135.731-155.187c24.013-24.013 62.874-24.013 86.886 0s24.013 62.925 0 86.886l-141.21 161.382 141.21 161.28c24.013 24.013 24.013 62.925 0 86.938z</Geometry>
	<Geometry x:Key="PathChatLeft" po:Freeze="True">M365.714 256v512q0 14.857-10.857 25.714t-25.714 10.857-25.714-10.857l-256-256q-10.857-10.857-10.857-25.714t10.857-25.714l256-256q10.857-10.857 25.714-10.857t25.714 10.857 10.857 25.714z</Geometry>
	<Geometry x:Key="PathChatRight" po:Freeze="True">M329.143 512q0 14.857-10.857 25.714l-256 256q-10.857 10.857-25.714 10.857t-25.714-10.857-10.857-25.714v-512q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857l256 256q10.857 10.857 10.857 25.714z</Geometry>
	<Geometry x:Key="PathStar" po:Freeze="True">M649.714 573.714l174.857-169.714-241.143-35.429-108-218.286-108 218.286-241.143 35.429 174.857 169.714-41.714 240.571 216-113.714 215.429 113.714zM950.857 369.714q0 12.571-14.857 27.429l-207.429 202.286 49.143 285.714q0.571 4 0.571 11.429 0 28.571-23.429 28.571-10.857 0-22.857-6.857l-256.571-134.857-256.571 134.857q-12.571 6.857-22.857 6.857-12 0-18-8.286t-6-20.286q0-3.429 1.143-11.429l49.143-285.714-208-202.286q-14.286-15.429-14.286-27.429 0-21.143 32-26.286l286.857-41.714 128.571-260q10.857-23.429 28-23.429t28 23.429l128.571 260 286.857 41.714q32 5.143 32 26.286z</Geometry>
	<Geometry x:Key="PathComplete" po:Freeze="True">M384 690l452-452 60 60-512 512-238-238 60-60z</Geometry>
	<Geometry x:Key="PathCancel" po:Freeze="True">M810.667 170.667q18.333 0 30.5 12.167t12.167 30.5q0 18-12.333 30.333l-268.667 268.333 268.667 268.333q12.333 12.333 12.333 30.333 0 18.333-12.167 30.5t-30.5 12.167q-18 0-30.333-12.333l-268.333-268.667-268.333 268.667q-12.333 12.333-30.333 12.333-18.333 0-30.5-12.167t-12.167-30.5q0-18 12.333-30.333l268.667-268.333-268.667-268.333q-12.333-12.333-12.333-30.333 0-18.333 12.167-30.5t30.5-12.167q18 0 30.333 12.333l268.333 268.667 268.333-268.667q12.333-12.333 30.333-12.333z</Geometry>
	<Geometry x:Key="PathSave" po:Freeze="True">M512 42.667q17.667 0 30.167 12.5t12.5 30.167v494.333l140.333-140.667q12.333-12.333 30.333-12.333 18.333 0 30.5 12.167t12.167 30.5q0 18-12.333 30.333l-213.333 213.333q-12.333 12.333-30.333 12.333t-30.333-12.333l-213.333-213.333q-12.333-13-12.333-30.333 0-17.667 12.5-30.167t30.167-12.5q18 0 30.333 12.333l140.333 140.667v-494.333q0-17.667 12.5-30.167t30.167-12.5zM938.667 640q17.667 0 30.167 12.5t12.5 30.167v170.667q0 53.333-37 90.333-37.667 37.667-90 37.667h-683.667q-52.333 0-90.667-37.333-37.333-38.333-37.333-90.667v-170.667q0-17.667 12.5-30.167t30.167-12.5 30.167 12.5 12.5 30.167v170.667q0 17.667 12.5 30.167t30.167 12.5h683.667q17.333 0 29.5-12.5t12.167-30.167v-170.667q0-17.667 12.5-30.167t30.167-12.5z</Geometry>
	<Geometry x:Key="PathMenu" po:Freeze="True">M2,15.5L22,15.5 22,17.5 2,17.5 2,15.5z M2,10.5L22,10.5 22,12.5 2,12.5 2,10.5z M2,5.5L22,5.5 22,7.5 2,7.5 2,5.5z</Geometry>
	<Geometry x:Key="PathSector" po:Freeze="True">M 200,200 0,200 A 200,200 0 0 1 58.6,58.6z</Geometry>
	<Geometry x:Key="PathReplace" po:Freeze="True">M282.419 728.269c-115.814-124.518-113.766-319.693 6.554-440.883 49.254-49.613 110.797-79.206 174.797-88.883l-3.533-106.342c-89.856 10.906-176.742 50.995-245.606 120.371-161.229 162.304-163.174 424.397-6.298 590.387l-89.139 89.702 282.112 15.411-0.768-298.701-118.118 118.938zM622.746 115.968l0.768 298.701 118.118-118.886c115.814 124.621 113.766 319.795-6.554 440.883-49.203 49.613-110.797 79.206-174.797 88.883l3.533 106.291c89.856-10.906 176.742-50.995 245.658-120.32 161.178-162.406 163.123-424.499 6.246-590.387l89.139-89.805-282.112-15.36z</Geometry>
	<Geometry x:Key="PathAudioOne" po:Freeze="True">M344.96 362.647l-146.526 150.83L347.89 664.314c79.122-82.808 79.122-218.856-2.93-301.667z</Geometry>
	<Geometry x:Key="PathAudioTwo" po:Freeze="True">M494.413 214.765l-73.263 73.941c123.083 124.215 123.083 325.328 0 449.546l73.263 73.938c164.11-165.625 164.11-431.797 0-597.425z</Geometry>
	<Geometry x:Key="PathAudioThree" po:Freeze="True">M640.944 63.934l-73.266 73.941c205.138 207.023 205.138 541.221 0 748.256l73.266 73.935c246.163-245.478 246.163-647.699 0-896.132z</Geometry>
	<Geometry x:Key="PathRectangle" po:Freeze="True">M640 146.286h-475.429q-37.714 0-64.571 26.857t-26.857 64.571v475.429q0 37.714 26.857 64.571t64.571 26.857h475.429q37.714 0 64.571-26.857t26.857-64.571v-475.429q0-37.714-26.857-64.571t-64.571-26.857zM804.571 237.714v475.429q0 68-48.286 116.286t-116.286 48.286h-475.429q-68 0-116.286-48.286t-48.286-116.286v-475.429q0-68 48.286-116.286t116.286-48.286h475.429q68 0 116.286 48.286t48.286 116.286z</Geometry>
	<Geometry x:Key="PathEllipse" po:Freeze="True">M438.857 201.143q-84.571 0-156 41.714t-113.143 113.143-41.714 156 41.714 156 113.143 113.143 156 41.714 156-41.714 113.143-113.143 41.714-156-41.714-156-113.143-113.143-156-41.714zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z</Geometry>
	<Geometry x:Key="PathUpperTriangle" po:Freeze="True">M768 716.8h-512l256-460.8 256 460.8z</Geometry>
	<Geometry x:Key="PathArrow" po:Freeze="True">M2.8421711E-14,30 L30,15 2.8421711E-14,3.5527137E-15 5.3751788,15 z</Geometry>
	<Geometry x:Key="PathArrowRightTop" po:Freeze="True">M384 214h426v426h-84v-282l-496 496-60-60 496-496h-282v-84z</Geometry>
	<Geometry x:Key="PathArrowBranches" po:Freeze="True">M458.361,207.01328 L574.12778,224.42874 574,184 458.361,204.52536</Geometry>
	<Geometry x:Key="PathText" po:Freeze="True">M8.394,7.3850001 L18,7.3850001 18,8.9495381 14.071471,8.9495381 14.071471,21 12.304952,21 12.304952,8.9495381 8.394,8.9495381 z M5.2364039,2.4000326 C4.4364113,2.4000326 3.7515685,2.6937805 3.1818757,3.2812766 2.612183,3.8687721 2.3273365,4.5750159 2.3273365,5.4000081 L2.3273365,20.999992 C2.3273365,21.824983 2.612183,22.531227 3.1818757,23.118723 3.7515685,23.706219 4.4364113,23.999966 5.2364039,23.999966 L20.363661,23.999966 C21.163652,23.999966 21.848495,23.706219 22.418188,23.118723 22.987883,22.531227 23.272728,21.824983 23.272728,20.999992 L23.272728,5.4000081 C23.272728,4.5750159 22.987883,3.8687721 22.418188,3.2812766 21.848495,2.6937805 21.163652,2.4000326 20.363661,2.4000326 z M5.2363719,0 L20.36363,0 C21.806051,0 23.039387,0.52812719 24.063631,1.5843812 25.087877,2.6406356 25.6,3.912511 25.6,5.4000081 L25.6,20.999992 C25.6,22.487488 25.087877,23.759365 24.063631,24.815618 23.039387,25.871874 21.806051,26.399999 20.36363,26.399999 L5.2363719,26.399999 C3.7939503,26.399999 2.5606164,25.871874 1.5363699,24.815618 0.51212323,23.759365 -5.3697355E-08,22.487488 3.5527137E-15,20.999992 L3.5527137E-15,5.4000081 C-5.3697355E-08,3.912511 0.51212323,2.6406356 1.5363699,1.5843812 2.5606164,0.52812719 3.7939503,0 5.2363719,0 z</Geometry>
	<Geometry x:Key="PathInk" po:Freeze="True">M986.466 37.502c-49.982-49.982-131.004-49.982-180.986 0l-483.984 484.144c43.262 11.264 83.262 32.99 115.74 65.502 32.99 32.99 54.014 73.246 65.246 115.484l483.984-484.144c50.014-49.982 50.014-131.002 0-180.986zM346.742 858.63c49.982-49.982 49.982-131.004 0-180.986s-131.004-49.982-180.986 0l-165.756 346.356 346.742-165.37z</Geometry>
	<Geometry x:Key="PathStarrySky" po:Freeze="True">M16.001007,0L20.944,10.533997 32,12.223022 23.998993,20.421997 25.889008,32 16.001007,26.533997 6.1109924,32 8,20.421997 0,12.223022 11.057007,10.533997z</Geometry>
	<CubicEase x:Key="CubicEaseInOut" EasingMode="EaseInOut" />
	<PowerEase x:Key="PowerEaseInOut" EasingMode="EaseInOut" />
	<ExponentialEase x:Key="ExponentialEaseOut" EasingMode="EaseOut" />
	<SineEase x:Key="SineEaseOut" EasingMode="EaseOut" />
	<SineEase x:Key="SineEaseInOut" EasingMode="EaseInOut" />
	<BackEase x:Key="BackEaseEaseInOut" EasingMode="EaseInOut" />
	<sys:Double x:Key="EnabledOpacity">0.7</sys:Double>
	<sys:Double x:Key="NormalCornerRadius">4</sys:Double>
	<sys:Double x:Key="MinHeight">40</sys:Double>
	<sys:Double x:Key="MinDataGridRowHeight">48</sys:Double>
	<DropShadowEffect x:Key="NormalShadowDepth" BlurRadius="5" ShadowDepth="1" Direction="270" Color="#AA000000" Opacity=".42" RenderingBias="Performance" />
	<BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />
	<converts:ObjectNullToVisibilityConverter x:Key="ObjectNullToVisibilityConverter" />
	<sys:Double x:Key="ThumbWidth">16</sys:Double>
	<sys:Double x:Key="ThumbCornerRadius">8</sys:Double>
	<sys:Double x:Key="RepeatButtonSize">5</sys:Double>
	<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
		<Border Focusable="False" Background="{TemplateBinding Background}">
			<ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Background="Transparent" />
		</Border>
	</ControlTemplate>
	<converts:DoubleMinConverter x:Key="DoubleMinConverter" />
	<Thickness x:Key="BorderThickness">0,0,0,2</Thickness>
	<Style x:Key="TreeViewItemFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="Black" StrokeDashArray="1 2" Opacity="0" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ec:IsArrangedToScaleConverter x:Key="IsArrangedToScaleConverter" />
	<ControlTemplate x:Key="ValidationToolTipTemplate">
		<Grid Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
			<UIElement.RenderTransform>
				<TranslateTransform x:Name="xform" X="-25" />
			</UIElement.RenderTransform>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="OpenStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0" />
						<VisualTransition GeneratedDuration="0:0:0.2" To="Open">
							<Storyboard>
								<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
									<DoubleAnimation.EasingFunction>
										<BackEase Amplitude=".3" EasingMode="EaseOut" />
									</DoubleAnimation.EasingFunction>
								</DoubleAnimation>
								<DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root" />
							</Storyboard>
						</VisualTransition>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Closed">
						<Storyboard>
							<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root" />
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Open">
						<Storyboard>
							<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform" />
							<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root" />
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4" />
			<Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3" />
			<Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2" />
			<Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1" />
			<Border Background="#FFDC000C" CornerRadius="2" />
			<Border CornerRadius="2">
				<TextBlock Foreground="#FFFFFFFF" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" UseLayoutRounding="False" Text="{Binding (Validation.Errors)[0].ErrorContent}" />
			</Border>
		</Grid>
	</ControlTemplate>
	<Style TargetType="{x:Type ec:PathListBoxItem}" x:Key="{x:Type ec:PathListBoxItem}">
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Background" Value="#00FFFFFF" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ec:PathListBoxItem}">
					<Grid Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5">
						<UIElement.RenderTransform>
							<TransformGroup>
								<ScaleTransform ScaleX="{Binding IsArranged, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource IsArrangedToScaleConverter}}" ScaleY="{Binding IsArranged, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource IsArrangedToScaleConverter}}" />
								<SkewTransform />
								<RotateTransform Angle="{Binding OrientationAngle, RelativeSource={RelativeSource TemplatedParent}}" />
								<TranslateTransform />
							</TransformGroup>
						</UIElement.RenderTransform>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To=".35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected" />
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Duration="0" To=".75" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor2" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<ObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle Name="fillColor" Fill="#FFBADDE9" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1" />
						<Rectangle Name="fillColor2" Fill="#FFBADDE9" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1" />
						<ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
						<Rectangle Name="FocusVisualElement" RadiusY="1" RadiusX="1" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type drawingControls:Callout}" x:Key="{x:Type drawingControls:Callout}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type drawingControls:Callout}">
					<Grid>
						<Path Name="PART_Path" Fill="{TemplateBinding Fill}" Stroke="{TemplateBinding Stroke}" StrokeThickness="{TemplateBinding StrokeThickness}" StrokeDashArray="{TemplateBinding StrokeDashArray}" StrokeDashCap="{TemplateBinding StrokeDashCap}" StrokeDashOffset="{TemplateBinding StrokeDashOffset}" StrokeLineJoin="{TemplateBinding StrokeLineJoin}" StrokeMiterLimit="{TemplateBinding StrokeMiterLimit}" StrokeStartLineCap="{TemplateBinding StrokeStartLineCap}" StrokeEndLineCap="{TemplateBinding StrokeEndLineCap}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Fill" UseLayoutRounding="False" />
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding InternalContent}" Margin="{TemplateBinding Padding}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type drawingControls:LineArrow}" x:Key="{x:Type drawingControls:LineArrow}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type drawingControls:LineArrow}">
					<Path Name="PART_Path" Fill="{TemplateBinding Stroke}" Stroke="{TemplateBinding Stroke}" StrokeThickness="{TemplateBinding StrokeThickness}" StrokeDashArray="{TemplateBinding StrokeDashArray}" StrokeDashCap="{TemplateBinding StrokeDashCap}" StrokeDashOffset="{TemplateBinding StrokeDashOffset}" StrokeLineJoin="{TemplateBinding StrokeLineJoin}" StrokeMiterLimit="{TemplateBinding StrokeMiterLimit}" StrokeStartLineCap="{TemplateBinding StrokeStartLineCap}" StrokeEndLineCap="{TemplateBinding StrokeEndLineCap}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Fill" UseLayoutRounding="False" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="LampEffect_Streamer" TargetType="{x:Type controls:BreathLamp}">
		<controls:SmallPanel>
			<Viewbox>
				<controls:SmallPanel Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
					<Border x:Name="PART_LampContainer" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent">
						<Border.BorderBrush>
							<LinearGradientBrush>
								<LinearGradientBrush.GradientStops>
									<GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=GradientStopColor1}" Offset="0" />
									<GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=GradientStopColor2}" Offset="0.3" />
									<GradientStop Color="Transparent" Offset="1" />
								</LinearGradientBrush.GradientStops>
							</LinearGradientBrush>
						</Border.BorderBrush>
					</Border>
				</controls:SmallPanel>
			</Viewbox>
			<Border Padding="{TemplateBinding BorderThickness}">
				<ContentPresenter Margin="{TemplateBinding BorderThickness}" />
			</Border>
		</controls:SmallPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsLampStart" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard x:Name="PART_LampStoryboard">
						<Storyboard RepeatBehavior="Forever">
							<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.StartPoint)" Storyboard.TargetName="PART_LampContainer">
								<EasingPointKeyFrame KeyTime="0:0:0.0" Value="0,1" />
								<EasingPointKeyFrame KeyTime="0:0:0.5" Value="0.855,0.148" />
								<EasingPointKeyFrame KeyTime="0:0:1" Value="0.852,0.855" />
								<EasingPointKeyFrame KeyTime="0:0:1.5" Value="0.148,0.855" />
								<EasingPointKeyFrame KeyTime="0:0:2" Value="0.144,0.149" />
								<EasingPointKeyFrame KeyTime="0:0:2.5" Value="0,0" />
							</PointAnimationUsingKeyFrames>
							<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.EndPoint)" Storyboard.TargetName="PART_LampContainer">
								<EasingPointKeyFrame KeyTime="0:0:0.0" Value="0,1" />
								<EasingPointKeyFrame KeyTime="0:0:0.5" Value="0.145,0.852" />
								<EasingPointKeyFrame KeyTime="0:0:1" Value="0.148,0.145" />
								<EasingPointKeyFrame KeyTime="0:0:1.5" Value="0.852,0.145" />
								<EasingPointKeyFrame KeyTime="0:0:2" Value="0.856,0.851" />
								<EasingPointKeyFrame KeyTime="0:0:2.5" Value="0,1" />
							</PointAnimationUsingKeyFrames>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<StopStoryboard BeginStoryboardName="PART_LampStoryboard" />
				</Trigger.ExitActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Storyboard x:Key="CheckedStoryboard">
		<DoubleAnimation Storyboard.TargetName="PART_EllipseGeometry" Storyboard.TargetProperty="RadiusX" Duration="00:00:0.4" To="200" />
		<DoubleAnimation Storyboard.TargetName="PART_EllipseGeometry" Storyboard.TargetProperty="RadiusY" Duration="00:00:0.4" To="200" />
	</Storyboard>
	<Storyboard x:Key="UncheckedStoryboard">
		<DoubleAnimation Storyboard.TargetName="PART_EllipseGeometry" Storyboard.TargetProperty="RadiusX" Duration="00:00:0.3" To="0" />
		<DoubleAnimation Storyboard.TargetName="PART_EllipseGeometry" Storyboard.TargetProperty="RadiusY" Duration="00:00:0.3" To="0" />
	</Storyboard>
	<converts:IndexToColor x:Key="indexToColor" />
	<converts:AngleToPointConverter x:Key="prConverter" />
	<converts:AngleToIsLargeConverter x:Key="isLargeConverter" />
	<LinearGradientBrush x:Key="NormalBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FF164DA7" />
		<GradientStop Color="#FF19DCF0" Offset="1" />
	</LinearGradientBrush>
	<converts:DrawPrizeIndexToColor x:Key="drawPrizeIndexToColor" />
	<LinearGradientBrush x:Key="RainbowBrush" EndPoint="1,1" MappingMode="RelativeToBoundingBox" StartPoint="0,0">
		<GradientStop Color="#FF9C1031" Offset="0.1" />
		<GradientStop Color="#FFBE0E20" Offset="0.2" />
		<GradientStop Color="#FF9C12AC" Offset="0.7" />
		<GradientStop Color="#FF0A8DC3" Offset="0.8" />
		<GradientStop Color="#FF1AEBCC" Offset="1" />
	</LinearGradientBrush>
	<Style x:Key="ButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle Margin="2" StrokeThickness="1" Stroke="#60000000" StrokeDashArray="1 2" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="DarkBrush" Color="#ddd" po:Freeze="True" />
	<SolidColorBrush x:Key="PressedBrush" Color="#80FFFFFF" po:Freeze="True" />
	<SolidColorBrush x:Key="DisabledForegroundBrush" Color="Transparent" po:Freeze="True" />
	<SolidColorBrush x:Key="DisabledBackgroundBrush" Color="Transparent" po:Freeze="True" />
	<SolidColorBrush x:Key="NormalBorderBrush" Color="Transparent" po:Freeze="True" />
	<SolidColorBrush x:Key="PressedBorderBrush" Color="Transparent" po:Freeze="True" />
	<SolidColorBrush x:Key="DefaultedBorderBrush" Color="Transparent" po:Freeze="True" />
	<SolidColorBrush x:Key="DisabledBorderBrush" Color="Transparent" po:Freeze="True" />
	<SolidColorBrush x:Key="BorderBrushItem">#fe7708</SolidColorBrush>
	<DataTemplate x:Key="NameContent">
		<controls:SmallPanel>
			<Ellipse Fill="{Binding BackgroundColor, RelativeSource={RelativeSource AncestorType={x:Type controls:TimeLineItem}}}" Width="30" Height="30" />
			<TextBlock Text="{Binding Head, RelativeSource={RelativeSource AncestorType={x:Type controls:TimeLineItem}}}" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" />
		</controls:SmallPanel>
	</DataTemplate>
	<DataTemplate x:Key="TextTime">
		<TextBlock Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type controls:TimeLineItem}}}" Text="{Binding Text, RelativeSource={RelativeSource AncestorType={x:Type controls:TimeLineItem}}}" VerticalAlignment="Top" FontWeight="Black" Foreground="Black" FontSize="16" />
	</DataTemplate>
	<DataTemplate x:Key="TextName">
		<TextBlock Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type controls:TimeLineItem}}}" Text="{Binding Text, RelativeSource={RelativeSource AncestorType={x:Type controls:TimeLineItem}}}" VerticalAlignment="Center" FontWeight="Black" Foreground="#005980" FontSize="16" />
	</DataTemplate>
	<RadialGradientBrush x:Key="StarrySkyRadialGradientBrush" GradientOrigin="0.5,0" Center="0.5,0.3" RadiusX="0.7">
		<GradientStop Color="#FF04040E" Offset="0" />
		<GradientStop Color="#FF24315D" Offset="1" />
	</RadialGradientBrush>
	<SolidColorBrush x:Key="SecondaryTextSolidColorBrush" Color="{StaticResource SecondaryTextColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="PlaceholderTextSolidColorBrush" Color="{StaticResource PlaceholderTextColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="NormalSolidColorBrush" Color="{StaticResource NormalColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="SuccessSolidColorBrush" Color="{StaticResource SuccessColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="SuccessMouseOverSolidColorBrush" Color="{StaticResource SuccessMouseOverColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="SuccessPressedSolidColorBrush" Color="{StaticResource SuccessPressedColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="WarningSolidColorBrush" Color="{StaticResource WarningColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="WarningMouseOverSolidColorBrush" Color="{StaticResource WarningMouseOverColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="WarningPressedSolidColorBrush" Color="{StaticResource WarningPressedColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="DangerSolidColorBrush" Color="{StaticResource DangerColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="DangerMouseOverSolidColorBrush" Color="{StaticResource DangerMouseOverColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="DangerPressedSolidColorBrush" Color="{StaticResource DangerPressedColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="InfoSolidColorBrush" Color="{StaticResource InfoColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="InfoMouseOverSolidColorBrush" Color="{StaticResource InfoMouseOverColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="InfoPressedSolidColorBrush" Color="{StaticResource InfoPressedColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="ExtralightSolidColorBrush" Color="{StaticResource ExtralightColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="BlackSolidColorBrush" Color="{StaticResource BlackColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="CircularSingularSolidColorBrush" Color="{StaticResource CircularSingularColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="CircularDualSolidColorBrush" Color="{StaticResource CircularDualColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="DrawPrizeSingularSolidColorBrush" Color="{StaticResource DrawPrizeSingularColor}" po:Freeze="True" />
	<SolidColorBrush x:Key="DrawPrizeDualSolidColorBrush" Color="{StaticResource DrawPrizeDualColor}" po:Freeze="True" />
	<Style x:Key="ControlBasicStyle" TargetType="Control">
		<Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
		<Setter Property="FontFamily" Value="{DynamicResource NormalFontFamily}" />
		<Setter Property="FontStyle" Value="{DynamicResource NormalFontStyle}" />
		<Setter Property="FontWeight" Value="{DynamicResource NormalFontWeight}" />
		<Setter Property="FontStretch" Value="{DynamicResource NormalFontStretch}" />
		<Setter Property="TextElement.FontSize" Value="{DynamicResource NormalFontSize}" />
		<Setter Property="TextElement.FontFamily" Value="{DynamicResource NormalFontFamily}" />
		<Setter Property="TextElement.FontStyle" Value="{DynamicResource NormalFontStyle}" />
		<Setter Property="TextElement.FontWeight" Value="{DynamicResource NormalFontWeight}" />
		<Setter Property="TextElement.FontStretch" Value="{DynamicResource NormalFontStretch}" />
		<Setter Property="TextElement.Foreground" Value="{DynamicResource PrimaryTextSolidColorBrush}" />
		<Setter Property="TextBlock.FontSize" Value="{DynamicResource NormalFontSize}" />
		<Setter Property="TextBlock.FontFamily" Value="{DynamicResource NormalFontFamily}" />
		<Setter Property="TextBlock.FontStyle" Value="{DynamicResource NormalFontStyle}" />
		<Setter Property="TextBlock.FontWeight" Value="{DynamicResource NormalFontWeight}" />
		<Setter Property="TextBlock.FontStretch" Value="{DynamicResource NormalFontStretch}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource PrimaryTextSolidColorBrush}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="{StaticResource EnabledOpacity}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<DropShadowEffect x:Key="PopupShadowDepth" BlurRadius="12" ShadowDepth="2" Color="{StaticResource BlackColor}" Opacity="0.1" />
	<Style x:Key="BaseButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="helpers:ElementHelper.CornerRadius" Value="3" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="20,10" />
		<Setter Property="Cursor" Value="Hand" />
	</Style>
	<Style x:Key="PrimaryButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
		<Setter Property="Foreground" Value="{DynamicResource WindowForegroundColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<controls:SmallPanel>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="00:00:0.3" From="Normal" To="MouseOver" />
									<VisualTransition GeneratedDuration="00:00:0.3" From="Pressed" />
									<VisualTransition GeneratedDuration="00:00:0.3" From="MouseOver" />
									<VisualTransition GeneratedDuration="00:00:0.3" To="Normal" />
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" EasingFunction="{StaticResource ExponentialEaseOut}" To="{DynamicResource PrimaryMouseOverColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" EasingFunction="{StaticResource ExponentialEaseOut}" To="{DynamicResource PrimaryPressedColor}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border Name="PART_Border" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<!--<Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource EnabledOpacity}" />
                        </Trigger>-->
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource PrimaryPressedSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DefaultButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
		<Setter Property="Background" Value="{DynamicResource BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BaseSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<controls:SmallPanel>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.1" From="Normal" To="MouseOver" />
									<VisualTransition GeneratedDuration="0:0:0.1" From="Pressed" />
									<VisualTransition GeneratedDuration="0:0:0.1" From="MouseOver" />
									<VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" EasingFunction="{StaticResource ExponentialEaseOut}" To="{DynamicResource DefaultBorderBrushColor}" />
										<ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" EasingFunction="{StaticResource ExponentialEaseOut}" To="{DynamicResource DefaultBackgroundColor}" />
										<ColorAnimation Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" EasingFunction="{StaticResource ExponentialEaseOut}" To="{DynamicResource PrimaryNormalColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" EasingFunction="{StaticResource ExponentialEaseOut}" To="{DynamicResource DefaultBackgroundPressedColor}" />
										<ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" EasingFunction="{StaticResource ExponentialEaseOut}" To="{DynamicResource DefaultBackgroundColor}" />
										<ColorAnimation Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" EasingFunction="{StaticResource ExponentialEaseOut}" To="{DynamicResource DefaultBackgroundPressedColor}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="PART_Border" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
						<ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" TextElement.Foreground="{DynamicResource RegularTextSolidColorBrush}" />
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource DefaultBorderBrushSolidColorBrush}" />
							<Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource DefaultBackgroundSolidColorBrush}" />
							<Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<!--<Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource EnabledOpacity}" />
                        </Trigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}" />
	<Style x:Key="PathButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
		<Setter Property="Padding" Value="8" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="Transparent">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" x:Name="PART_ContentPresenter" Opacity=".8" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="1" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextSolidColorBrush}" />
		<Setter Property="Padding" Value="3" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="MinWidth" Value="30" />
		<Setter Property="MinHeight" Value="28" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<controls:SmallPanel Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_ContentPresenter" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused" />
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="PART_ContentPresenter" Opacity="0.7" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WPFDevelopersWindow" TargetType="{x:Type wpfdev:Window}" BasedOn="{x:Null}">
		<Setter Property="Foreground" Value="{DynamicResource WindowForegroundColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WindowBorderBrushSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="IsTabStop" Value="False" />
		<!--<Setter Property="ResizeMode" Value="CanResizeWithGrip" />-->
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
		<Setter Property="WindowStyle" Value="None" />
		<Setter Property="MaxHeight" Value="{x:Static SystemParameters.MaximizedPrimaryScreenHeight}" />
		<Setter Property="MaxWidth" Value="{x:Static SystemParameters.MaximizedPrimaryScreenWidth}" />
		<Setter Property="FontFamily" Value="{DynamicResource NormalFontFamily}" />
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<WindowChrome GlassFrameThickness="0,0,0,.1" UseAeroCaptionButtons="False" CaptionHeight="{Binding TitleHeight,RelativeSource={RelativeSource AncestorType=wpfdev:Window}}" />
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type wpfdev:Window}">
					<Border SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid Background="{TemplateBinding Background}" x:Name="LayoutRoot">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid Grid.Row="0" Height="{TemplateBinding TitleHeight}" Background="{TemplateBinding BorderBrush}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" MinWidth="30" />
								</Grid.ColumnDefinitions>
								<Image Source="{TemplateBinding Icon}" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Left" Width="30" Height="30" Margin="14,0,0,0" RenderOptions.BitmapScalingMode="HighQuality" Visibility="{TemplateBinding Icon,Converter={StaticResource ObjectNullToVisibilityConverter}}" />
								<TextBlock Text="{TemplateBinding Title}" x:Name="PART_Title" Margin="6,0" Foreground="{TemplateBinding Foreground}" Grid.Column="1" VerticalAlignment="Center" FontSize="{DynamicResource TitleFontSize}" />
								<WrapPanel Grid.Column="2" WindowChrome.IsHitTestVisibleInChrome="True" Margin="0,6">
									<WrapPanel x:Name="PART_MinAndMax">
										<Button Name="PART_MinimizeButton" IsTabStop="False" Padding="0" Style="{DynamicResource WindowButtonStyle}" Command="SystemCommands.MinimizeWindowCommand">
											<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
												<Rectangle x:Name="MinimizeGlyph" Width="10" Height="1" Margin="0 7 0 0" VerticalAlignment="Bottom" Fill="{TemplateBinding Foreground}" />
											</Grid>
										</Button>
										<Button Name="PART_MaximizeButton" IsTabStop="False" Padding="0" Style="{DynamicResource WindowButtonStyle}" Command="SystemCommands.MaximizeWindowCommand">
											<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
												<Path Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{DynamicResource PathMetroWindowMaximize}" Fill="{TemplateBinding Foreground}" Stretch="Fill" UseLayoutRounding="False" />
											</Grid>
										</Button>
										<Button Name="PART_RestoreButton" IsTabStop="False" Padding="0" Style="{DynamicResource WindowButtonStyle}" Command="SystemCommands.RestoreWindowCommand" Visibility="Collapsed">
											<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
												<Path Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{DynamicResource PathMetroWindowRestore}" Fill="{TemplateBinding Foreground}" Stretch="Fill" UseLayoutRounding="False" />
											</Grid>
										</Button>
									</WrapPanel>
									<Button Name="PART_CloseButton" IsTabStop="False" Style="{DynamicResource WindowButtonStyle}" Command="SystemCommands.CloseWindowCommand">
										<Path Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{DynamicResource PathMetroWindowClose}" Fill="{TemplateBinding Foreground}" Stretch="Fill" />
									</Button>
								</WrapPanel>
							</Grid>
							<AdornerDecorator Grid.Row="1" KeyboardNavigation.IsTabStop="False">
								<ContentPresenter x:Name="MainContentPresenter" ClipToBounds="True" />
							</AdornerDecorator>
							<ResizeGrip x:Name="ResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Row="1" IsTabStop="False" Visibility="Collapsed" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="WindowState" Value="Maximized">
							<Setter Property="Visibility" Value="Visible" TargetName="PART_RestoreButton" />
							<Setter Property="Visibility" Value="Collapsed" TargetName="PART_MaximizeButton" />
							<Setter Property="Margin" TargetName="LayoutRoot" Value="7" />
						</Trigger>
						<Trigger Property="WindowStyle" Value="ToolWindow">
							<Setter TargetName="PART_MinAndMax" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="ResizeMode" Value="CanResizeWithGrip" />
								<Condition Property="WindowState" Value="Normal" />
							</MultiTrigger.Conditions>
							<Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
						</MultiTrigger>
						<!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode"  Value="NoResize" />
                                <Condition Property="WindowStyle"  Value="ToolWindow" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_MinAndMax" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DefaultMenu" TargetType="{x:Type Menu}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Menu}">
					<Border Background="{DynamicResource BackgroundSolidColorBrush}" SnapsToDevicePixels="True">
						<!--<StackPanel ClipToBounds="True"
                      Orientation="Horizontal"
                      IsItemsHost="True" />-->
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type Menu}" BasedOn="{StaticResource DefaultMenu}" />
	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Height" Value="1" />
		<Setter Property="Margin" Value="0,2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border BorderThickness="1" BorderBrush="{DynamicResource BaseSolidColorBrush}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="TopLevelHeaderTemplateKey" TargetType="{x:Type MenuItem}">
		<Border x:Name="Border" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderThickness="1,1,1,0" BorderBrush="{TemplateBinding BorderBrush}">
			<controls:SmallPanel Background="Transparent">
				<ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" x:Name="PART_ContentPresenter" />
				<Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" PlacementTarget="{Binding ElementName=Border}" AllowsTransparency="True" Focusable="False">
					<Grid Margin="10,0,10,10">
						<Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1" Background="{DynamicResource BackgroundSolidColorBrush}" Effect="{DynamicResource PopupShadowDepth}" BorderBrush="{DynamicResource BaseSolidColorBrush}" CornerRadius="0,0,3,3">
							<ScrollViewer CanContentScroll="True" Margin="0,4">
								<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
							</ScrollViewer>
						</Border>
						<Border Height="1.2" Background="{DynamicResource BackgroundSolidColorBrush}" VerticalAlignment="Top" HorizontalAlignment="Left" BorderThickness="1,0,0,0" Width="{Binding ElementName=Border,Path=ActualWidth}" />
					</Grid>
				</Popup>
			</controls:SmallPanel>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="True">
				<Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" Value="{DynamicResource BaseSolidColorBrush}" />
			</Trigger>
			<Trigger Property="IsSubmenuOpen" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource BaseSolidColorBrush}" />
				<Setter Property="Background" Value="{DynamicResource BackgroundSolidColorBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="TopLevelItemTemplateKey" TargetType="{x:Type MenuItem}">
		<Border x:Name="Border" SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
			<controls:SmallPanel Background="Transparent">
				<ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" x:Name="PART_ContentPresenter" />
			</controls:SmallPanel>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" Value="{DynamicResource BaseSolidColorBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SubmenuItemTemplateKey" TargetType="{x:Type MenuItem}">
		<Border x:Name="Border" SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
			<Grid Background="Transparent">
				<Grid.ColumnDefinitions>
					<ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="Icon" />
					<ColumnDefinition Width="4" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="37" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
					<ColumnDefinition Width="20" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<Path x:Name="CheckMark" Width="12" Height="10" Visibility="Hidden" FlowDirection="LeftToRight" Data="{StaticResource PathCheckMark}" Fill="{TemplateBinding Foreground}" Stretch="Fill" />
				<ContentPresenter x:Name="HeaderHost" Grid.Column="2" ContentSource="Header" VerticalAlignment="Center" RecognizesAccessKey="True" />
				<TextBlock x:Name="InputGestureText" Grid.Column="4" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="ButtonBase.Command" Value="{x:Null}" />
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" Value="{DynamicResource BaseSolidColorBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SubmenuHeaderTemplateKey" TargetType="{x:Type MenuItem}">
		<Border x:Name="Border" SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
			<Grid Background="Transparent">
				<Grid.ColumnDefinitions>
					<ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="Icon" />
					<ColumnDefinition Width="4" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
					<ColumnDefinition Width="20" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
				<ContentPresenter x:Name="HeaderHost" Grid.Column="2" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" />
				<TextBlock x:Name="InputGestureText" Grid.Column="3" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right" />
				<Path Grid.Column="4" x:Name="PART_Path" Stretch="Fill" FlowDirection="LeftToRight" Height="12" Width="10" VerticalAlignment="Center" Data="{StaticResource PathMenuItem}" Fill="{TemplateBinding Foreground}" />
				<Popup x:Name="Popup" Placement="Right" HorizontalOffset="2" VerticalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
					<Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{DynamicResource BackgroundSolidColorBrush}" Effect="{DynamicResource PopupShadowDepth}" BorderBrush="{DynamicResource BaseSolidColorBrush}" BorderThickness="1" Margin="10,0,10,10" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}">
						<ScrollViewer CanContentScroll="True" Margin="0,4">
							<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" Value="{DynamicResource BaseSolidColorBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="DefaultMenuItem" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="MinHeight" Value="34" />
		<Setter Property="Padding" Value="10,0" />
		<Setter Property="Cursor" Value="Hand" />
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="MinWidth" Value="44" />
				<Setter Property="Template" Value="{StaticResource TopLevelHeaderTemplateKey}" />
				<Setter Property="Grid.IsSharedSizeScope" Value="True" />
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Template" Value="{StaticResource TopLevelItemTemplateKey}" />
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="MinWidth" Value="240" />
				<Setter Property="Template" Value="{StaticResource SubmenuHeaderTemplateKey}" />
			</Trigger>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="MinWidth" Value="240" />
				<Setter Property="Template" Value="{StaticResource SubmenuItemTemplateKey}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource DefaultMenuItem}" />
	<Style x:Key="DefaultContextMenu" TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Background" Value="{DynamicResource BackgroundSolidColorBrush}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ContextMenu">
					<Border Effect="{StaticResource PopupShadowDepth}" Margin="10" Background="{TemplateBinding Background}" CornerRadius="3" BorderThickness="1" BorderBrush="{DynamicResource BaseSolidColorBrush}">
						<ScrollViewer Padding="0,6">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource DefaultContextMenu}" />
	<Style x:Key="DefaultRadioButton" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Background" Value="{DynamicResource WindowForegroundColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="2,1" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<controls:SmallPanel MinWidth="16" MinHeight="16">
								<Ellipse x:Name="PART_Border" StrokeThickness="{TemplateBinding BorderThickness}" Fill="{TemplateBinding Background}" Stroke="{DynamicResource BaseSolidColorBrush}" />
								<Ellipse x:Name="PART_Ellipse" Fill="{DynamicResource WindowForegroundColorBrush}" MinWidth="6" MinHeight="6" RenderTransformOrigin=".5,.5">
									<Ellipse.RenderTransform>
										<ScaleTransform ScaleX="0" ScaleY="0" />
									</Ellipse.RenderTransform>
								</Ellipse>
							</controls:SmallPanel>
						</BulletDecorator.Bullet>
						<ContentPresenter x:Name="PART_ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{DynamicResource PrimaryTextSolidColorBrush}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(Ellipse.RenderTransform).(ScaleTransform.ScaleX)" To=".4" Duration="00:00:.3" EasingFunction="{StaticResource ExponentialEaseOut}" />
										<DoubleAnimation Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(Ellipse.RenderTransform).(ScaleTransform.ScaleY)" To=".4" Duration="00:00:.3" EasingFunction="{StaticResource ExponentialEaseOut}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<!--<Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource PrimaryNormalSolidColorBrush}"/>
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource PrimaryNormalSolidColorBrush}"/>-->
							<Setter Property="Fill" TargetName="PART_Border" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
							<Setter Property="Stroke" TargetName="PART_Border" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
							<Setter Property="TextElement.Foreground" TargetName="PART_ContentPresenter" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Stroke" TargetName="PART_Border" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
							<!--<Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource PrimaryNormalSolidColorBrush}"/>-->
							<!--<MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="PART_BeginStoryboard">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                        Storyboard.TargetName="PART_Border"
                                                        To="{StaticResource PrimaryNormalColor}" 
                                                        Duration="00:00:.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="PART_BeginStoryboard"></RemoveStoryboard>
                            </MultiTrigger.ExitActions>-->
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="PathRadioButton" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="8" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Border Background="Transparent">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" x:Name="PART_ContentPresenter" Opacity=".8" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="1" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="1" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ColorRadioButton" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="8" />
		<Setter Property="Width" Value="15" />
		<Setter Property="Height" Value="15" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Border Background="{TemplateBinding Background}" BorderThickness="0" x:Name="PART_Border" CornerRadius="7" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_Ellipse">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Ellipse x:Name="PART_Ellipse" Width="7" Height="7" Fill="{DynamicResource BackgroundSolidColorBrush}" Visibility="Collapsed" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" Value=".8" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource DefaultRadioButton}" />
	<Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border x:Name="PART_Thumbborder">
						<Rectangle x:Name="PART_Rectangle" Height="{TemplateBinding Height}" Fill="{DynamicResource InfoPressedSolidColorBrush}" RadiusX="1" RadiusY="1" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border x:Name="PART_Thumbborder">
						<Rectangle x:Name="PART_Rectangle" Height="{TemplateBinding Height}" Fill="{DynamicResource InfoPressedSolidColorBrush}" RadiusX="1" RadiusY="1" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DefaultScrollBar" TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ControlBasicStyle}">
		<Style.Resources>
			<Storyboard x:Key="ScrollMouseOut">
				<DoubleAnimation Storyboard.TargetName="PART_Track" Duration="00:00:0.1" Storyboard.TargetProperty="Width" To="2" />
			</Storyboard>
			<Storyboard x:Key="ScrollMouseOver">
				<DoubleAnimation Storyboard.TargetName="PART_Track" Duration="00:00:0.1" Storyboard.TargetProperty="Width" To="10" />
			</Storyboard>
		</Style.Resources>
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Width" Value="12" />
		<Setter Property="MinWidth" Value="8" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<controls:SmallPanel Background="Transparent" x:Name="Bg" Width="{TemplateBinding Width}" SnapsToDevicePixels="True">
						<Track x:Name="PART_Track" Margin="0,0,1,0" IsDirectionReversed="True" Width="2" HorizontalAlignment="Right" IsEnabled="{TemplateBinding IsMouseOver}">
							<Track.DecreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb Style="{StaticResource ScrollBarThumbVertical}" />
							</Track.Thumb>
						</Track>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource ScrollMouseOut}" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource ScrollMouseOver}" />
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto" />
				<Setter Property="MinWidth" Value="0" />
				<Setter Property="Height" Value="12" />
				<Setter Property="MinHeight" Value="8" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<ControlTemplate.Resources>
								<Storyboard x:Key="ScrollMouseOutHeight">
									<DoubleAnimation Storyboard.TargetName="PART_Track" Duration="00:00:0.1" Storyboard.TargetProperty="Height" To="2" />
								</Storyboard>
								<Storyboard x:Key="ScrollMouseOverHeight">
									<DoubleAnimation Storyboard.TargetName="PART_Track" Duration="00:00:0.1" Storyboard.TargetProperty="Height" To="10" />
								</Storyboard>
							</ControlTemplate.Resources>
							<controls:SmallPanel Height="{TemplateBinding Height}" Background="Transparent" SnapsToDevicePixels="True">
								<Track x:Name="PART_Track" Margin="0,0,0,1" IsEnabled="{TemplateBinding IsMouseOver}" Height="2" VerticalAlignment="Bottom" Visibility="Hidden">
									<Track.DecreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}" />
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}" />
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
									</Track.Thumb>
								</Track>
							</controls:SmallPanel>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Trigger.ExitActions>
										<BeginStoryboard Storyboard="{StaticResource ScrollMouseOutHeight}" />
									</Trigger.ExitActions>
									<Trigger.EnterActions>
										<BeginStoryboard Storyboard="{StaticResource ScrollMouseOverHeight}" />
									</Trigger.EnterActions>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ScrollBarHideStyle" TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ControlBasicStyle}">
		<Style.Resources>
			<Storyboard x:Key="ScrollMouseOut">
				<DoubleAnimation Storyboard.TargetName="PART_Track" Duration="00:00:0.1" Storyboard.TargetProperty="Width" To="2" />
			</Storyboard>
			<Storyboard x:Key="ScrollMouseOver">
				<DoubleAnimation Storyboard.TargetName="PART_Track" Duration="00:00:0.1" Storyboard.TargetProperty="Width" To="10" />
			</Storyboard>
		</Style.Resources>
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Width" Value="12" />
		<Setter Property="MinWidth" Value="8" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<controls:SmallPanel Background="Transparent" Width="{TemplateBinding Width}" SnapsToDevicePixels="True">
						<Track x:Name="PART_Track" Margin="0,0,1,0" IsDirectionReversed="True" Width="2" HorizontalAlignment="Right" IsEnabled="{TemplateBinding IsMouseOver}">
							<Track.DecreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb Style="{StaticResource ScrollBarThumbVertical}" />
							</Track.Thumb>
						</Track>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource ScrollMouseOut}" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource ScrollMouseOver}" />
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto" />
				<Setter Property="MinWidth" Value="0" />
				<Setter Property="Height" Value="12" />
				<Setter Property="MinHeight" Value="8" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<ControlTemplate.Resources>
								<Storyboard x:Key="ScrollMouseOutHeight">
									<DoubleAnimation Storyboard.TargetName="PART_Track" Duration="00:00:0.1" Storyboard.TargetProperty="Height" To="2" />
								</Storyboard>
								<Storyboard x:Key="ScrollMouseOverHeight">
									<DoubleAnimation Storyboard.TargetName="PART_Track" Duration="00:00:0.1" Storyboard.TargetProperty="Height" To="10" />
								</Storyboard>
							</ControlTemplate.Resources>
							<controls:SmallPanel Height="{TemplateBinding Height}" Background="Transparent" SnapsToDevicePixels="True">
								<Track x:Name="PART_Track" Margin="0,0,0,1" IsEnabled="{TemplateBinding IsMouseOver}" Height="2" VerticalAlignment="Bottom" Visibility="Hidden">
									<Track.DecreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}" />
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}" />
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
									</Track.Thumb>
								</Track>
							</controls:SmallPanel>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Trigger.ExitActions>
										<BeginStoryboard Storyboard="{StaticResource ScrollMouseOutHeight}" />
									</Trigger.ExitActions>
									<Trigger.EnterActions>
										<BeginStoryboard Storyboard="{StaticResource ScrollMouseOverHeight}" />
									</Trigger.EnterActions>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="DefaultScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
						<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
						<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource DefaultScrollBar}" />
	<Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource DefaultScrollViewer}" />
	<ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
		<controls:SmallPanel HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
			<Border BorderBrush="{DynamicResource PrimaryPressedSolidColorBrush}" BorderThickness="2" Background="{DynamicResource BackgroundSolidColorBrush}" SnapsToDevicePixels="True" Height="{StaticResource ThumbWidth}" Width="{StaticResource ThumbWidth}" CornerRadius="8" Margin="-1,0,0,0" Name="PART_Border" RenderTransformOrigin=".5,.5" />
		</controls:SmallPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="RenderTransform" TargetName="PART_Border">
					<Setter.Value>
						<ScaleTransform ScaleX="1.2" ScaleY="1.2" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
		<controls:SmallPanel HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
			<Border BorderBrush="{DynamicResource PrimaryNormalSolidColorBrush}" BorderThickness="2" Background="{DynamicResource BackgroundSolidColorBrush}" SnapsToDevicePixels="True" Height="{StaticResource ThumbWidth}" Width="{StaticResource ThumbWidth}" CornerRadius="8" Margin="-1,0,0,0" Name="PART_Border" RenderTransformOrigin=".5,.5" />
		</controls:SmallPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="RenderTransform" TargetName="PART_Border">
					<Setter.Value>
						<ScaleTransform ScaleX="1.2" ScaleY="1.2" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbHorizontal" TargetType="{x:Type Thumb}">
		<ControlTemplate.Resources>
			<!--<Storyboard x:Key="ThumbMouseOut">
                <DoubleAnimation Storyboard.TargetName="PART_Border"
                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                 To="1" Duration="00:00:0.1"/>
                <DoubleAnimation Storyboard.TargetName="PART_Border"
                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                 To="1" Duration="00:00:0.1"/>
            </Storyboard>-->
			<Storyboard x:Key="ThumbMouseOver">
				<DoubleAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="1.2" Duration="00:00:0.1" />
				<DoubleAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="1.2" Duration="00:00:0.1" />
			</Storyboard>
		</ControlTemplate.Resources>
		<controls:SmallPanel HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
			<Border BorderBrush="{DynamicResource PrimaryNormalSolidColorBrush}" BorderThickness="2" Background="{DynamicResource WindowForegroundColorBrush}" SnapsToDevicePixels="True" Height="{StaticResource ThumbWidth}" Width="{StaticResource ThumbWidth}" CornerRadius="8" Margin="-1,0,0,0" Name="PART_Border" RenderTransformOrigin=".5,.5">
				<Border.RenderTransform>
					<ScaleTransform />
				</Border.RenderTransform>
			</Border>
		</controls:SmallPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard x:Name="BeginStoryboard" Storyboard="{StaticResource ThumbMouseOver}" />
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<StopStoryboard BeginStoryboardName="BeginStoryboard" />
					<!--<BeginStoryboard Storyboard="{StaticResource ThumbMouseOut}" />-->
				</Trigger.ExitActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
		<controls:SmallPanel HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
			<Border BorderBrush="{DynamicResource PrimaryNormalSolidColorBrush}" BorderThickness="2" Background="{DynamicResource BackgroundSolidColorBrush}" SnapsToDevicePixels="True" Height="{StaticResource ThumbWidth}" Width="{StaticResource ThumbWidth}" CornerRadius="8" Margin="-1,0,0,0" Name="PART_Border" RenderTransformOrigin=".5,.5" />
		</controls:SmallPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="RenderTransform" TargetName="PART_Border">
					<Setter.Value>
						<ScaleTransform ScaleX="1.2" ScaleY="1.2" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
		<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Padding="2">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed" />
				<TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" />
				<Border x:Name="TrackBackground" Height="6.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
					<Canvas Margin="-6,-1">
						<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden" />
					</Canvas>
				</Border>
				<Track x:Name="PART_Track" Grid.Row="1">
					<Track.DecreaseRepeatButton>
						<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{DynamicResource RepeatButtonTransparent}" Background="{DynamicResource PrimaryNormalSolidColorBrush}" Height="{StaticResource RepeatButtonSize}" />
					</Track.DecreaseRepeatButton>
					<Track.IncreaseRepeatButton>
						<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" Background="{DynamicResource LightSolidColorBrush}" Height="{StaticResource RepeatButtonSize}" />
					</Track.IncreaseRepeatButton>
					<Track.Thumb>
						<Thumb x:Name="Thumb" Focusable="False" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontal}" VerticalAlignment="Center" />
					</Track.Thumb>
				</Track>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="TickPlacement" Value="TopLeft">
				<Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
				<Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontal}" />
				<Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="BottomRight">
				<Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
				<Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontal}" />
				<Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="Both">
				<Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
				<Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
			</Trigger>
			<Trigger Property="IsSelectionRangeEnabled" Value="True">
				<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
			</Trigger>
			<Trigger Property="IsKeyboardFocused" Value="True">
				<Setter Property="Foreground" TargetName="Thumb" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
		<controls:SmallPanel HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
			<Border BorderBrush="{DynamicResource PrimaryNormalSolidColorBrush}" BorderThickness="2" Background="{DynamicResource BackgroundSolidColorBrush}" SnapsToDevicePixels="True" UseLayoutRounding="True" Height="{StaticResource ThumbWidth}" Width="{StaticResource ThumbWidth}" CornerRadius="8" Name="PART_Border" RenderTransformOrigin=".5,.5" />
		</controls:SmallPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="RenderTransform" TargetName="PART_Border">
					<Setter.Value>
						<ScaleTransform ScaleX="1.2" ScaleY="1.2" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
		<controls:SmallPanel HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
			<Border BorderBrush="{DynamicResource PrimaryNormalSolidColorBrush}" BorderThickness="2" Background="{DynamicResource BackgroundSolidColorBrush}" SnapsToDevicePixels="True" Height="{StaticResource ThumbWidth}" Width="{StaticResource ThumbWidth}" CornerRadius="8" Name="PART_Border" RenderTransformOrigin=".5,.5" />
		</controls:SmallPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="RenderTransform" TargetName="PART_Border">
					<Setter.Value>
						<ScaleTransform ScaleX="1.2" ScaleY="1.2" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
		<controls:SmallPanel HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
			<Border BorderBrush="{DynamicResource PrimaryNormalSolidColorBrush}" BorderThickness="2" Background="{DynamicResource BackgroundSolidColorBrush}" SnapsToDevicePixels="True" UseLayoutRounding="True" Height="{StaticResource ThumbWidth}" Width="{StaticResource ThumbWidth}" CornerRadius="8" Margin="0,0,0,-1" Name="PART_Border" RenderTransformOrigin=".5,.5" />
		</controls:SmallPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="RenderTransform" TargetName="PART_Border">
					<Setter.Value>
						<ScaleTransform ScaleX="1.2" ScaleY="1.2" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbVertical" TargetType="{x:Type Thumb}">
		<ControlTemplate.Resources>
			<!--<Storyboard x:Key="ThumbMouseOut">
                <DoubleAnimation Storyboard.TargetName="PART_Border"
                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                 To="1" Duration="00:00:0.1"/>
                <DoubleAnimation Storyboard.TargetName="PART_Border"
                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                 To="1" Duration="00:00:0.1"/>
            </Storyboard>-->
			<Storyboard x:Key="ThumbMouseOver">
				<DoubleAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="1.2" Duration="00:00:0.1" />
				<DoubleAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="1.2" Duration="00:00:0.1" />
			</Storyboard>
		</ControlTemplate.Resources>
		<controls:SmallPanel HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
			<Border BorderBrush="{DynamicResource PrimaryNormalSolidColorBrush}" BorderThickness="2" Background="{DynamicResource BackgroundSolidColorBrush}" SnapsToDevicePixels="True" UseLayoutRounding="True" Height="{StaticResource ThumbWidth}" Width="{StaticResource ThumbWidth}" CornerRadius="8" Margin="0,0,0,-1" Name="PART_Border" RenderTransformOrigin=".5,.5">
				<Border.RenderTransform>
					<ScaleTransform />
				</Border.RenderTransform>
			</Border>
		</controls:SmallPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard x:Name="BeginStoryboard" Storyboard="{StaticResource ThumbMouseOver}" />
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<StopStoryboard BeginStoryboardName="BeginStoryboard" />
					<!--<BeginStoryboard Storyboard="{StaticResource ThumbMouseOut}" />-->
				</Trigger.ExitActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
		<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Padding="2">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4" />
				<TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4" />
				<Border x:Name="TrackBackground" HorizontalAlignment="center" Margin="0,5" Width="6.0">
					<Canvas Margin="-1,-6">
						<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4.0" />
					</Canvas>
				</Border>
				<Track x:Name="PART_Track" Grid.Column="1">
					<Track.DecreaseRepeatButton>
						<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" Background="{DynamicResource PrimaryNormalSolidColorBrush}" Width="{StaticResource RepeatButtonSize}" />
					</Track.DecreaseRepeatButton>
					<Track.IncreaseRepeatButton>
						<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" Background="{DynamicResource LightSolidColorBrush}" Width="{StaticResource RepeatButtonSize}" />
					</Track.IncreaseRepeatButton>
					<Track.Thumb>
						<Thumb x:Name="Thumb" Focusable="False" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbVertical}" VerticalAlignment="Top" />
					</Track.Thumb>
				</Track>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="TickPlacement" Value="TopLeft">
				<Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
				<Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVertical}" />
				<Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="BottomRight">
				<Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
				<Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVertical}" />
				<Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="Both">
				<Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
				<Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
			</Trigger>
			<Trigger Property="IsSelectionRangeEnabled" Value="True">
				<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="DefaultSlider" TargetType="{x:Type Slider}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
		<Setter Property="Template" Value="{StaticResource SliderHorizontal}" />
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Template" Value="{StaticResource SliderVertical}" />
			</Trigger>
			<!--<Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource EnabledOpacity}" />
            </Trigger>-->
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type Slider}" BasedOn="{StaticResource DefaultSlider}" />
	<Style x:Key="DefaultTextBlock" TargetType="{x:Type TextBlock}">
		<Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
		<Setter Property="FontFamily" Value="{DynamicResource NormalFontFamily}" />
		<Setter Property="FontStyle" Value="{DynamicResource NormalFontStyle}" />
		<Setter Property="FontStretch" Value="{DynamicResource NormalFontStretch}" />
	</Style>
	<Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DefaultTextBlock}" />
	<Style x:Key="DefaultHyperlink" TargetType="{x:Type Hyperlink}">
		<Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
		<Setter Property="FontFamily" Value="{DynamicResource NormalFontFamily}" />
		<Setter Property="FontStyle" Value="{DynamicResource NormalFontStyle}" />
		<Setter Property="FontWeight" Value="{DynamicResource NormalFontWeight}" />
		<Setter Property="FontStretch" Value="{DynamicResource NormalFontStretch}" />
		<!--<Setter Property="Foreground" Value="{DynamicResource PrimaryTextSolidColorBrush}"/>-->
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
		<!--<Setter Property="Foreground" Value="{DynamicResource PrimaryNormalSolidColorBrush}"/>-->
		<Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="TextBlock.TextDecorations">
					<Setter.Value>
						<TextDecorationCollection>
							<TextDecoration Location="Underline" />
						</TextDecorationCollection>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type Hyperlink}" BasedOn="{StaticResource DefaultHyperlink}" />
	<Style x:Key="DefaultCheckBox" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ControlBasicStyle}">
		<!--<Setter Property="FocusVisualStyle" Value="{x:Null}" />-->
		<Setter Property="Padding" Value="2,0,0,0" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<Border CornerRadius="{Binding ElementName=PART_Border,Path=CornerRadius}">
								<Border x:Name="PART_Border" Width="16" Height="16" CornerRadius="3" BorderThickness="1" BorderBrush="{DynamicResource BaseSolidColorBrush}" Background="{DynamicResource WindowForegroundColorBrush}">
									<controls:SmallPanel>
										<Path x:Name="PART_CheckMark" SnapsToDevicePixels="False" VerticalAlignment="Center" HorizontalAlignment="Center" Data="{StaticResource PathCheckMark}" RenderTransformOrigin=".5,.5" Stretch="Fill" Fill="{DynamicResource WindowForegroundColorBrush}">
											<Path.RenderTransform>
												<ScaleTransform ScaleX="0" ScaleY="0" />
											</Path.RenderTransform>
										</Path>
										<Rectangle Width="6" Height="2" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="PART_InderminateMark" RenderTransformOrigin=".5,.5" Fill="{DynamicResource PrimaryNormalSolidColorBrush}">
											<Rectangle.RenderTransform>
												<ScaleTransform ScaleX="0" />
											</Rectangle.RenderTransform>
										</Rectangle>
									</controls:SmallPanel>
								</Border>
							</Border>
						</BulletDecorator.Bullet>
						<ContentPresenter x:Name="PART_ContentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{DynamicResource PrimaryTextSolidColorBrush}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_CheckMark" Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleX)" To=".7" Duration="00:00:.2" EasingFunction="{StaticResource ExponentialEaseOut}" />
										<DoubleAnimation Storyboard.TargetName="PART_CheckMark" Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleY)" To=".5" Duration="00:00:.2" EasingFunction="{StaticResource ExponentialEaseOut}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
							<Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
							<Setter Property="TextElement.Foreground" TargetName="PART_ContentPresenter" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsChecked" Value="{x:Null}">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="PART_BeginStoryboardIsCheckedNull">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_InderminateMark" Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="00:00:.2" EasingFunction="{StaticResource ExponentialEaseOut}" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<RemoveStoryboard BeginStoryboardName="PART_BeginStoryboardIsCheckedNull" />
							</Trigger.ExitActions>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
							<!--本来使用动画，但是动画会导致无法修改主题颜色-->
							<!--<MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="PART_BeginStoryboard">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                        Storyboard.TargetName="PART_Border"
                                                        To="{StaticResource PrimaryNormalColor}" 
                                                        Duration="00:00:.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="PART_BeginStoryboard"></RemoveStoryboard>
                            </MultiTrigger.ExitActions>-->
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource DefaultCheckBox}" />
	<Style x:Key="DefaultTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="6,0" />
		<Setter Property="AllowDrop" Value="true" />
		<Setter Property="MinHeight" Value="{StaticResource MinHeight}" />
		<Setter Property="MinWidth" Value="180" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="SelectionBrush" Value="{DynamicResource WindowBorderBrushSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Border Name="PART_Border" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderBrush="{DynamicResource BaseSolidColorBrush}">
						<Border.Background>
							<SolidColorBrush Color="{DynamicResource BackgroundColor}" />
						</Border.Background>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Disabled" />
								<VisualState x:Name="ReadOnly" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Duration="00:00:0.3" Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{DynamicResource PrimaryNormalColor}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<controls:SmallPanel Margin="{TemplateBinding Padding}">
							<TextBlock x:Name="PART_TextBlockWatermark" Text="{Binding Path=(helpers:ElementHelper.Watermark),RelativeSource={RelativeSource TemplatedParent}}" Foreground="{DynamicResource RegularTextSolidColorBrush}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FontSize="{StaticResource NormalFontSize}" Margin="7.5,0" Visibility="Collapsed" />
							<ScrollViewer x:Name="PART_ContentHost" />
						</controls:SmallPanel>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Text" Value="" />
								<Condition Property="helpers:ElementHelper.IsWatermark" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Visibility" TargetName="PART_TextBlockWatermark" Value="Visible" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Text" Value="{x:Null}" />
								<Condition Property="helpers:ElementHelper.IsWatermark" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Visibility" TargetName="PART_TextBlockWatermark" Value="Visible" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
	<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Border x:Name="PART_Border" Padding="6,0" BorderThickness="0" SnapsToDevicePixels="true">
			<Grid Background="Transparent">
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="30" />
				</Grid.ColumnDefinitions>
				<Rectangle Grid.Column="1" Cursor="Hand" Fill="Transparent" Height="Auto" Width="30" />
				<Path x:Name="PART_Arrow" Grid.Column="1" Stretch="Fill" Height="6" Width="10" HorizontalAlignment="Center" VerticalAlignment="Center" Cursor="Hand" Data="{StaticResource PathComboBoxToggleButton}" RenderTransformOrigin=".5,.5">
					<Path.Fill>
						<SolidColorBrush Color="{DynamicResource PlaceholderTextColor}" />
					</Path.Fill>
					<Path.RenderTransform>
						<RotateTransform Angle="0" />
					</Path.RenderTransform>
				</Path>
			</Grid>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="MouseOver" />
					<VisualState x:Name="Pressed" />
					<VisualState x:Name="Disabled" />
				</VisualStateGroup>
				<VisualStateGroup x:Name="CheckStates">
					<VisualState x:Name="Checked">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="PART_Arrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="-180" Duration="00:00:.3" EasingFunction="{StaticResource ExponentialEaseOut}" />
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Unchecked">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="PART_Arrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="0" Duration="00:00:.3" EasingFunction="{StaticResource ExponentialEaseOut}" />
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Indeterminate" />
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
		</Border>
	</ControlTemplate>
	<Style x:Key="DefaultComboBox" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="MinWidth" Value="120" />
		<Setter Property="MinHeight" Value="{StaticResource MinHeight}" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderBrush" Value="{DynamicResource BaseSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Background" Value="{DynamicResource BackgroundSolidColorBrush}" />
		<Setter Property="Padding" Value="14.5,3,30,3" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OpenStoryboard">
							<DoubleAnimation Storyboard.TargetName="PART_DropDown" Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="00:00:.2" EasingFunction="{StaticResource ExponentialEaseOut}" />
						</Storyboard>
						<Storyboard x:Key="CloseStoryboard">
							<DoubleAnimation Storyboard.TargetName="PART_DropDown" Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="00:00:.2" EasingFunction="{StaticResource ExponentialEaseOut}" />
						</Storyboard>
					</ControlTemplate.Resources>
					<controls:SmallPanel Width="{TemplateBinding Width}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" EasingFunction="{StaticResource ExponentialEaseOut}" Duration="00:00:.1" To="{DynamicResource PrimaryNormalColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="EditStates">
								<VisualState x:Name="Editable" />
								<VisualState x:Name="Uneditable" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="PART_Border" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" />
						<ToggleButton x:Name="PART_ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Style="{x:Null}" Focusable="False" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
						<ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
						<TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="True" Background="{TemplateBinding Background}" Visibility="Hidden" SelectionBrush="{DynamicResource WindowBorderBrushSolidColorBrush}" IsReadOnly="{TemplateBinding IsReadOnly}" />
						<Popup x:Name="PART_Popup" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" StaysOpen="False">
							<controls:SmallPanel x:Name="PART_DropDown" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" Margin="24,2,24,24" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" RenderTransformOrigin=".5,0" SnapsToDevicePixels="True">
								<controls:SmallPanel.RenderTransform>
									<ScaleTransform ScaleY="0" />
								</controls:SmallPanel.RenderTransform>
								<Border Name="PART_DropDownBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True" UseLayoutRounding="True" />
								<ScrollViewer Padding="0,8" ScrollViewer.VerticalScrollBarVisibility="Auto">
									<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</controls:SmallPanel>
						</Popup>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger SourceName="PART_ToggleButton" Property="IsChecked" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="BeginStoryboardOpenStoryboard" Storyboard="{StaticResource OpenStoryboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="BeginStoryboardOpenStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger SourceName="PART_ToggleButton" Property="IsChecked" Value="False">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="BeginStoryboardCloseStoryboard" Storyboard="{StaticResource CloseStoryboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="BeginStoryboardCloseStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="HasItems" Value="False">
							<Setter TargetName="PART_DropDownBorder" Property="MinHeight" Value="95" />
						</Trigger>
						<Trigger Property="IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="AllowsTransparency" Value="True">
							<Setter TargetName="PART_DropDownBorder" Property="CornerRadius" Value="{Binding Path=(helpers:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter TargetName="PART_DropDownBorder" Property="Margin" Value="0,2,0,0" />
						</Trigger>
						<Trigger Property="ComboBox.IsEditable" Value="True">
							<Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
							<Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
							<Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Padding" Value="20,0" />
		<Setter Property="Height" Value="34" />
		<Setter Property="Margin" Value="1,0" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<controls:SmallPanel>
						<Rectangle x:Name="PART_RectangleMouseOver" Fill="{TemplateBinding Background}" SnapsToDevicePixels="True" UseLayoutRounding="True" />
						<Rectangle x:Name="PART_RectangleSelected" Fill="{DynamicResource BaseSolidColorBrush}" Visibility="Collapsed" SnapsToDevicePixels="True" UseLayoutRounding="True" />
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" x:Name="PART_ContentPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.Foreground="{DynamicResource RegularTextSolidColorBrush}" />
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="PART_RectangleMouseOver" Property="Fill" Value="{DynamicResource DefaultBackgroundSolidColorBrush}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_RectangleSelected" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
							<Setter TargetName="PART_ContentPresenter" Property="TextElement.FontWeight" Value="Bold" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True" />
								<Condition Property="IsMouseOver" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
							<Setter TargetName="PART_RectangleSelected" Property="Visibility" Value="Visible" />
							<Setter TargetName="PART_ContentPresenter" Property="TextElement.FontWeight" Value="Bold" />
						</MultiTrigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="PART_RectangleMouseOver" Property="Fill" Value="{DynamicResource DefaultBackgroundSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DefaultComboBox}" />
	<Style x:Key="DefaultToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="PART_Border" Width="40" Height="20" Background="{DynamicResource BaseSolidColorBrush}" CornerRadius="10">
						<Ellipse x:Name="PART_Ellipse" Width="16" Height="16" Margin="2,0" VerticalAlignment="Center" HorizontalAlignment="Left" Fill="{DynamicResource WindowForegroundColorBrush}">
							<Ellipse.RenderTransform>
								<TranslateTransform />
							</Ellipse.RenderTransform>
						</Ellipse>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" To="20" Duration="00:00:.3" EasingFunction="{StaticResource CubicEaseInOut}" />
										<!--<ColorAnimation Duration="00:00:0.3"
                                                        Storyboard.TargetName="PART_Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="{DynamicResource PrimaryNormalColor}"
                                                        EasingFunction="{StaticResource CubicEaseInOut}"/>-->
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:.3" EasingFunction="{StaticResource CubicEaseInOut}" />
										<!--<ColorAnimation Duration="00:00:0.3" 
                                                        Storyboard.TargetName="PART_Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="{DynamicResource BaseColor}"
                                                        EasingFunction="{StaticResource CubicEaseInOut}"/>-->
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource DefaultToggleButton}" />
	<Style TargetType="{x:Type CalendarDayButton}" x:Key="CalendarDayButtonStyle" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Width" Value="32" />
		<Setter Property="Height" Value="32" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CalendarDayButton">
					<controls:SmallPanel>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.1" />
								</VisualStateGroup.Transitions>
								<VisualState Name="Normal" />
								<VisualState Name="MouseOver" />
								<VisualState Name="Pressed" />
								<VisualState Name="Disabled" />
							</VisualStateGroup>
							<VisualStateGroup Name="SelectionStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState Name="Unselected" />
								<VisualState Name="Selected" />
							</VisualStateGroup>
							<VisualStateGroup Name="CalendarButtonFocusStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState Name="CalendarButtonFocused" />
								<VisualState Name="CalendarButtonUnfocused" />
							</VisualStateGroup>
							<VisualStateGroup Name="ActiveStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState Name="Active" />
								<VisualState Name="Inactive" />
							</VisualStateGroup>
							<VisualStateGroup Name="DayStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState Name="RegularDay" />
								<VisualState Name="Today" />
							</VisualStateGroup>
							<VisualStateGroup Name="BlackoutDayStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState Name="NormalDay" />
								<VisualState Name="BlackoutDay" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Ellipse x:Name="SelectedBackground" Opacity="0">
							<Ellipse.Fill>
								<SolidColorBrush Color="{DynamicResource PrimaryMouseOverColor}" />
							</Ellipse.Fill>
						</Ellipse>
						<Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />
						<Ellipse x:Name="DayButtonFocusVisual" Visibility="Collapsed" IsHitTestVisible="False">
							<Ellipse.Fill>
								<SolidColorBrush Color="{DynamicResource PrimaryNormalColor}" />
							</Ellipse.Fill>
						</Ellipse>
						<ContentPresenter x:Name="NormalText" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<TextElement.Foreground>
								<SolidColorBrush Color="{DynamicResource RegularTextColor}" />
							</TextElement.Foreground>
						</ContentPresenter>
						<Path x:Name="Blackout" Opacity="0" Margin="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{DynamicResource WindowForegroundColorBrush}" Stretch="Fill" Data="{StaticResource PathBlackout}" />
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{DynamicResource PrimaryMouseOverSolidColorBrush}" />
						</MultiTrigger>
						<Trigger Property="IsToday" Value="True">
							<Setter TargetName="NormalText" Property="TextElement.FontWeight" Value="Bold" />
							<Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{DynamicResource WindowForegroundColorBrush}" />
							<Setter TargetName="SelectedBackground" Property="Opacity" Value="1" />
						</Trigger>
						<Trigger Property="IsInactive" Value="True">
							<Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{DynamicResource BaseSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsBlackedOut" Value="True">
							<Setter TargetName="Blackout" Property="Opacity" Value=".2" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type CalendarButton}" x:Key="CalendarButtonStyle" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="MinWidth" Value="48" />
		<Setter Property="MinHeight" Value="32" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CalendarButton">
					<controls:SmallPanel>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.1" />
								</VisualStateGroup.Transitions>
								<VisualState Name="Normal" />
								<VisualState Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{DynamicResource PrimaryMouseOverColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState Name="Pressed" />
							</VisualStateGroup>
							<VisualStateGroup Name="SelectionStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState Name="Unselected" />
								<VisualState Name="Selected">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{DynamicResource PrimaryNormalColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup Name="ActiveStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState Name="Active" />
								<VisualState Name="Inactive" />
							</VisualStateGroup>
							<VisualStateGroup Name="CalendarButtonFocusStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState Name="CalendarButtonFocused">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{DynamicResource PrimaryNormalColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState Name="CalendarButtonUnfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="NormalText" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="3,20">
							<TextElement.Foreground>
								<SolidColorBrush Color="{DynamicResource RegularTextColor}" />
							</TextElement.Foreground>
						</ContentPresenter>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsInactive" Value="True">
							<Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{DynamicResource BaseSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
		<Grid Cursor="Hand">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<ColorAnimation Duration="0" Storyboard.TargetName="PART_Path" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="{DynamicResource PrimaryMouseOverColor}" />
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="PART_Path" />
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<controls:SmallPanel Background="Transparent">
				<Path x:Name="PART_Path" Margin="14,-6,0,0" Stretch="Fill" HorizontalAlignment="Left" Height="10" VerticalAlignment="Center" Width="6" Data="{StaticResource PathPrevious}">
					<Path.Fill>
						<SolidColorBrush Color="{DynamicResource RegularTextColor}" />
					</Path.Fill>
				</Path>
			</controls:SmallPanel>
		</Grid>
	</ControlTemplate>
	<ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
		<controls:SmallPanel Cursor="Hand">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<ColorAnimation Duration="0" To="{StaticResource PrimaryMouseOverColor}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="PART_Path" />
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="PART_Path" />
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<controls:SmallPanel Background="Transparent">
				<Path x:Name="PART_Path" Data="{StaticResource PathNext}" HorizontalAlignment="Right" Height="10" Margin="0,-6,14,0" Stretch="Fill" VerticalAlignment="Center" Width="6">
					<Path.Fill>
						<SolidColorBrush Color="{DynamicResource RegularTextColor}" />
					</Path.Fill>
				</Path>
			</controls:SmallPanel>
		</controls:SmallPanel>
	</ControlTemplate>
	<ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
		<controls:SmallPanel Cursor="Hand">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="MouseOver" />
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_ButtonContent" />
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<ContentPresenter x:Name="PART_ButtonContent" Margin="1,4,1,9" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" TextElement.Foreground="{DynamicResource RegularTextSolidColorBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
		</controls:SmallPanel>
	</ControlTemplate>
	<Style x:Key="CalendarItemStyle" TargetType="{x:Type CalendarItem}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Margin" Value="24,4,24,24" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CalendarItem}">
					<ControlTemplate.Resources>
						<DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
							<StackPanel>
								<TextBlock Foreground="{DynamicResource PrimaryTextSolidColorBrush}" FontSize="12" Margin="0,6" Text="{Binding}" HorizontalAlignment="Center" VerticalAlignment="Center" />
								<Rectangle Fill="{DynamicResource BaseSolidColorBrush}" Height="1" VerticalAlignment="Bottom" />
							</StackPanel>
						</DataTemplate>
					</ControlTemplate.Resources>
					<Grid x:Name="PART_Root" Margin="{TemplateBinding Margin}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border Background="{DynamicResource BackgroundSolidColorBrush}" BorderBrush="{DynamicResource BaseSolidColorBrush}" BorderThickness="1" CornerRadius="3" SnapsToDevicePixels="True" UseLayoutRounding="True">
							<Border.Effect>
								<DropShadowEffect BlurRadius="12" Opacity="0.1" ShadowDepth="2" Color="Black" />
							</Border.Effect>
							<Grid Margin="0,20,0,0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Button x:Name="PART_PreviousButton" Template="{StaticResource PreviousButtonTemplate}" Focusable="False" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="0" Height="20" Width="28" />
								<Button x:Name="PART_HeaderButton" Focusable="False" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="0" Template="{StaticResource HeaderButtonTemplate}" />
								<Button x:Name="PART_NextButton" Focusable="False" HorizontalAlignment="Right" Grid.Column="2" Grid.Row="0" Template="{StaticResource NextButtonTemplate}" Height="20" Width="28" />
								<Grid x:Name="PART_MonthView" Visibility="Visible" Grid.ColumnSpan="3" Grid.Row="1" Margin="6,10" VerticalAlignment="Center" HorizontalAlignment="Center">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
								</Grid>
								<Grid x:Name="PART_YearView" Visibility="Hidden" Grid.ColumnSpan="3" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="6,-3,7,6">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
								</Grid>
							</Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding DisplayMode, &#xD;&#xA;              RelativeSource={RelativeSource FindAncestor, &#xD;&#xA;              AncestorType={x:Type Calendar}}}" Value="Year">
							<Setter Property="Visibility" TargetName="PART_MonthView" Value="Collapsed" />
							<Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
						</DataTrigger>
						<DataTrigger Binding="{Binding DisplayMode, &#xD;&#xA;              RelativeSource={RelativeSource FindAncestor, &#xD;&#xA;              AncestorType={x:Type Calendar}}}" Value="Decade">
							<Setter Property="Visibility" TargetName="PART_MonthView" Value="Collapsed" />
							<Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DefaultCalendar" TargetType="{x:Type Calendar}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="CalendarButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
		<Setter Property="CalendarDayButtonStyle" Value="{StaticResource CalendarDayButtonStyle}" />
		<Setter Property="CalendarItemStyle" Value="{StaticResource CalendarItemStyle}" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource BackgroundSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Calendar}">
					<StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
						<CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Style="{TemplateBinding CalendarItemStyle}" />
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DropDownButtonStyle" TargetType="Button" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="30" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Border x:Name="Border" Grid.ColumnSpan="2" BorderThickness="1" Background="{DynamicResource BackgroundSolidColorBrush}" />
						<Grid FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="18" VerticalAlignment="Center" Width="19">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="20*" />
								<ColumnDefinition Width="20*" />
								<ColumnDefinition Width="20*" />
								<ColumnDefinition Width="20*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="23*" />
								<RowDefinition Height="19*" />
								<RowDefinition Height="19*" />
								<RowDefinition Height="19*" />
							</Grid.RowDefinitions>
							<Border x:Name="Highlight" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-1" Opacity="1" Grid.Row="0" BorderBrush="{DynamicResource RegularTextSolidColorBrush}" Grid.RowSpan="4" />
							<Border x:Name="Background" BorderBrush="{DynamicResource RegularTextSolidColorBrush}" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3" Background="{DynamicResource BackgroundSolidColorBrush}" />
							<Border x:Name="BackgroundGradient" BorderBrush="{DynamicResource RegularTextSolidColorBrush}" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3" Background="{DynamicResource BackgroundSolidColorBrush}" />
							<Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1" Fill="{DynamicResource RegularTextSolidColorBrush}" Stroke="{DynamicResource RegularTextSolidColorBrush}" />
							<Path Fill="{DynamicResource RegularTextSolidColorBrush}" Grid.Row="1" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="4" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Margin="4,3,4,3" Stretch="Fill" Data="{StaticResource PathDatePickerDropDown}" />
							<Ellipse Grid.ColumnSpan="4" Fill="{DynamicResource BackgroundSolidColorBrush}" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center" Width="3" />
							<Border x:Name="DisabledVisual" BorderBrush="{DynamicResource BackgroundSolidColorBrush}" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DefaultDatePickerTextBox" TargetType="{x:Type DatePickerTextBox}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
		<!--<Setter Property="SelectionBrush" Value="{DynamicResource PrimaryNormalSolidColorBrush}"/>-->
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="DatePickerTextBox">
					<Grid>
						<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="1" Opacity="1">
							<Grid x:Name="WatermarkContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="{x:Null}">
								<ScrollViewer x:Name="PART_ContentHost" Margin="0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type Calendar}" BasedOn="{StaticResource DefaultCalendar}" />
	<Style TargetType="{x:Type DatePickerTextBox}" BasedOn="{StaticResource DefaultDatePickerTextBox}" />
	<Style x:Key="DefaultDataGridSelectAllButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="BorderBrush" Value="{DynamicResource BaseSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource BackgroundSolidColorBrush}" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Pressed" />
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Polygon x:Name="Arrow" Margin="0,2,0,0" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
							<Polygon.Fill>
								<SolidColorBrush Color="{DynamicResource PrimaryTextColor}" />
							</Polygon.Fill>
						</Polygon>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" Value="{DynamicResource PrimaryMouseOverSolidColorBrush}" TargetName="Arrow" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DefaultDataGrid" TargetType="{x:Type DataGrid}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1,1,1,0" />
		<Setter Property="BorderBrush" Value="{DynamicResource BaseSolidColorBrush}" />
		<Setter Property="Background" Value="{x:Null}" />
		<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="HorizontalGridLinesBrush" Value="{x:Null}" />
		<Setter Property="VerticalGridLinesBrush" Value="{x:Null}" />
		<Setter Property="MinRowHeight" Value="{DynamicResource MinDataGridRowHeight}" />
		<Setter Property="CanUserAddRows" Value="False" />
		<Setter Property="AutoGenerateColumns" Value="False" />
		<Setter Property="RowHeaderWidth" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGrid}">
					<Border x:Name="DGR_Border" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled" />
								<VisualState x:Name="Normal" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
							<ScrollViewer.Template>
								<ControlTemplate TargetType="{x:Type ScrollViewer}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="*" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<Button Focusable="False" Command="{x:Static DataGrid.SelectAllCommand}" Style="{StaticResource DefaultDataGridSelectAllButtonStyle}" Visibility="{Binding HeadersVisibility, &#xD;&#xA;                      ConverterParameter={x:Static DataGridHeadersVisibility.All}, &#xD;&#xA;                      Converter={x:Static DataGrid.HeadersVisibilityConverter}, &#xD;&#xA;                      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType=DataGrid},Converter={StaticResource DoubleMinConverter}}" />
										<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, &#xD;&#xA;                      ConverterParameter={x:Static DataGridHeadersVisibility.Column}, &#xD;&#xA;                      Converter={x:Static DataGrid.HeadersVisibilityConverter}, &#xD;&#xA;                      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
										<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" Grid.Row="1" CanContentScroll="{TemplateBinding CanContentScroll}" />
										<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="1" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, &#xD;&#xA;                      RelativeSource={RelativeSource TemplatedParent}}" />
										<Grid Grid.Column="1" Grid.Row="2">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, &#xD;&#xA;                          RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, &#xD;&#xA;                        RelativeSource={RelativeSource TemplatedParent}}" />
										</Grid>
									</Grid>
								</ControlTemplate>
							</ScrollViewer.Template>
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsGrouping" Value="True">
				<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="DefaultDataGridCell" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridCell}">
					<Border x:Name="PART_Border" BorderBrush="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" SnapsToDevicePixels="True">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="Focused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="CurrentStates">
								<VisualState x:Name="Regular" />
								<VisualState x:Name="Current" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected" Value="True" />
					<Condition Property="Selector.IsSelectionActive" Value="True" />
				</MultiTrigger.Conditions>
				<Setter Property="Foreground" Value="{DynamicResource PrimaryTextSolidColorBrush}" />
				<Setter Property="Background" Value="{DynamicResource BaseSolidColorBrush}" />
			</MultiTrigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="DefaultDataGridRow" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="BorderBrush" Value="{DynamicResource BaseSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="ValidationErrorTemplate">
			<Setter.Value>
				<ControlTemplate>
					<TextBlock Foreground="{DynamicResource DangerPressedSolidColorBrush}" Margin="2,0,0,0" Text="!" VerticalAlignment="Center" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridRow}">
					<Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
						<Border.Background>
							<SolidColorBrush Color="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow},Path=Background}" />
						</Border.Background>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Normal_AlternatingRow" />
								<VisualState x:Name="Normal_Selected" />
								<VisualState x:Name="Unfocused_Selected" />
								<VisualState x:Name="Normal_Editing" />
								<VisualState x:Name="MouseOver_Editing">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" To="{DynamicResource DefaultBackgroundColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver_Unfocused_Editing" />
								<VisualState x:Name="Unfocused_Editing" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="DGR_Border" Duration="0:0:0.2" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" To="{DynamicResource BaseMoveColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver_Selected">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="DGR_Border" Duration="0:0:0.2" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" To="{DynamicResource BaseMoveColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver_Unfocused_Selected" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<SelectiveScrollingGrid>
							<SelectiveScrollingGrid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</SelectiveScrollingGrid.ColumnDefinitions>
							<SelectiveScrollingGrid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</SelectiveScrollingGrid.RowDefinitions>
							<DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							<DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" Visibility="{TemplateBinding DetailsVisibility}" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, &#xD;&#xA;                ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},&#xD;&#xA;                Converter={x:Static DataGrid.RowDetailsScrollingConverter}, &#xD;&#xA;                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
							<DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, &#xD;&#xA;                ConverterParameter={x:Static DataGridHeadersVisibility.Row}, &#xD;&#xA;                Converter={x:Static DataGrid.HeadersVisibilityConverter}, &#xD;&#xA;                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
						</SelectiveScrollingGrid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Height" Value="8" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Cursor" Value="SizeNS" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DefaultDataGridRowHeader" TargetType="{x:Type DataGridRowHeader}">
		<Setter Property="FontWeight" Value="ExtraBlack" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridRowHeader}">
					<Grid HorizontalAlignment="Center">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Normal_CurrentRow" />
								<VisualState x:Name="Unfocused_EditingRow" />
								<VisualState x:Name="Normal_EditingRow" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="MouseOver_CurrentRow" />
								<VisualState x:Name="MouseOver_Unfocused_EditingRow" />
								<VisualState x:Name="MouseOver_EditingRow" />
								<VisualState x:Name="MouseOver_Unfocused_Selected" />
								<VisualState x:Name="MouseOver_Selected" />
								<VisualState x:Name="MouseOver_Unfocused_CurrentRow_Selected" />
								<VisualState x:Name="MouseOver_CurrentRow_Selected" />
								<VisualState x:Name="Unfocused_Selected" />
								<VisualState x:Name="Unfocused_CurrentRow_Selected" />
								<VisualState x:Name="Normal_CurrentRow_Selected" />
								<VisualState x:Name="Normal_Selected" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="rowHeaderBorder" Background="{TemplateBinding Background}">
							<StackPanel Orientation="Horizontal">
								<ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.FontWeight="{TemplateBinding FontWeight}" />
								<Control SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, &#xD;&#xA;                  RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Visibility="{Binding (Validation.HasError), &#xD;&#xA;                  Converter={StaticResource bool2VisibilityConverter}, &#xD;&#xA;                  RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
							</StackPanel>
						</Border>
						<Thumb x:Name="PART_TopHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Top" />
						<Thumb x:Name="PART_BottomHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Bottom" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Width" Value="8" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Cursor" Value="SizeWE" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" Width="{TemplateBinding Width}" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource BaseSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DefaultDataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="FontWeight" Value="ExtraBlack" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="Background" Value="{DynamicResource BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BaseSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="StoryboardAscending">
							<DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="SortArrow" Duration="00:00:.2" To="180" />
						</Storyboard>
						<Storyboard x:Key="StoryboardDescending">
							<DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="SortArrow" Duration="00:00:.2" To="0" />
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Border x:Name="columnHeaderBorder" Background="{TemplateBinding Background}" Padding="10" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
							<Grid Name="HedearGrid">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.FontWeight="{TemplateBinding FontWeight}" TextElement.Foreground="{TemplateBinding Foreground}" />
								<Path x:Name="SortArrow" Visibility="Collapsed" Data="{StaticResource PathSortArrow}" Stretch="Fill" Grid.Column="1" Width="10" Height="10" Fill="{DynamicResource PrimaryPressedSolidColorBrush}" Margin="4,0,0,0" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
									<Path.RenderTransform>
										<RotateTransform />
									</Path.RenderTransform>
								</Path>
							</Grid>
						</Border>
						<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" />
						<Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="SortDirection" Value="Ascending">
							<Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="StoryboardAscendingBeginStoryboard" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="StoryboardAscendingBeginStoryboard" Storyboard="{StaticResource StoryboardAscending}" />
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="SortDirection" Value="Descending">
							<Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="StoryboardDescendingBeginStoryboard" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="StoryboardDescendingBeginStoryboard" Storyboard="{StaticResource StoryboardDescending}" />
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DefaultDataGridColumnHeadersPresenter" TargetType="{x:Type DataGridColumnHeadersPresenter}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
					<controls:SmallPanel>
						<DataGridColumnHeader x:Name="PART_FillerColumnHeader" IsHitTestVisible="False" />
						<ItemsPresenter />
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type DataGridColumnHeadersPresenter}" BasedOn="{StaticResource DefaultDataGridColumnHeadersPresenter}" />
	<Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DefaultDataGridColumnHeader}" />
	<Style TargetType="{x:Type DataGridRowHeader}" BasedOn="{StaticResource DefaultDataGridRowHeader}" />
	<Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DefaultDataGridRow}" />
	<Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DefaultDataGridCell}" />
	<Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource DefaultDataGrid}" />
	<Style x:Key="BaseTAndBTabItem" TargetType="{x:Type TabItem}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="MinHeight" Value="48" />
		<Setter Property="MinWidth" Value="100" />
		<Setter Property="BorderThickness" Value="{StaticResource BorderThickness}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<controls:SmallPanel Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected" />
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Duration="00:00:.2" To="1" Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="PART_Border" BorderThickness="{TemplateBinding BorderThickness}" RenderTransformOrigin=".5,.5">
							<Border.RenderTransform>
								<ScaleTransform ScaleX="0" ScaleY="1" />
							</Border.RenderTransform>
						</Border>
						<ContentPresenter ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Center" />
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
							<Setter Property="Background" Value="{DynamicResource DefaultBackgroundSolidColorBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="BaseLAndRTabItem" TargetType="{x:Type TabItem}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="MinHeight" Value="48" />
		<Setter Property="MinWidth" Value="100" />
		<Setter Property="BorderThickness" Value="{StaticResource BorderThickness}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<controls:SmallPanel Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected" />
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Duration="00:00:.2" To="1" Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="PART_Border" BorderThickness="{TemplateBinding BorderThickness}" RenderTransformOrigin=".5,.5">
							<Border.RenderTransform>
								<ScaleTransform ScaleX="1" ScaleY="0" />
							</Border.RenderTransform>
						</Border>
						<ContentPresenter ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Center" />
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
							<Setter Property="Background" Value="{DynamicResource DefaultBackgroundSolidColorBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="LeftTabItem" TargetType="{x:Type TabItem}" BasedOn="{StaticResource BaseLAndRTabItem}">
		<Setter Property="BorderThickness" Value="0,0,2,0" />
	</Style>
	<Style x:Key="RightTabItem" TargetType="{x:Type TabItem}" BasedOn="{StaticResource BaseLAndRTabItem}">
		<Setter Property="BorderThickness" Value="2,0,0,0" />
	</Style>
	<Style x:Key="TopTabItem" TargetType="{x:Type TabItem}" BasedOn="{StaticResource BaseTAndBTabItem}">
		<Setter Property="BorderThickness" Value="0,0,0,2" />
	</Style>
	<Style x:Key="BottomTabItem" TargetType="{x:Type TabItem}" BasedOn="{StaticResource BaseTAndBTabItem}">
		<Setter Property="BorderThickness" Value="0,2,0,0" />
	</Style>
	<Style x:Key="DefaultTabControl" TargetType="{x:Type TabControl}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="TabStripPlacement" Value="Top" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="Background" Value="{DynamicResource BackgroundSolidColorBrush}" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource TopTabItem}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local" Margin="{TemplateBinding Margin}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Name="ColumnDefinition0" />
							<ColumnDefinition Width="0" Name="ColumnDefinition1" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" Name="RowDefinition0" />
							<RowDefinition Height="*" Name="RowDefinition1" />
						</Grid.RowDefinitions>
						<Border x:Name="HeaderBorder" BorderBrush="{DynamicResource BaseSolidColorBrush}" BorderThickness="0,0,0,1" Grid.Row="0" Background="{DynamicResource BackgroundSolidColorBrush}">
							<TabPanel IsItemsHost="True" Name="HeaderPanel" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" />
						</Border>
						<controls:SmallPanel Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Column="0" Grid.Row="1">
							<ContentPresenter Content="{TemplateBinding SelectedContent}" ContentTemplate="{TemplateBinding SelectedContentTemplate}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
						</controls:SmallPanel>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
							<Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
							<Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
							<Setter TargetName="HeaderBorder" Property="Grid.Row" Value="1" />
							<Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
							<Setter TargetName="HeaderBorder" Property="BorderThickness" Value="0,1,0,0" />
							<Setter Property="ItemContainerStyle" Value="{StaticResource BottomTabItem}" />
						</Trigger>
						<Trigger Property="TabControl.TabStripPlacement" Value="Left">
							<Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
							<Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
							<Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
							<Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
							<Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
							<Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
							<Setter TargetName="HeaderBorder" Property="BorderThickness" Value="0,0,1,0" />
							<Setter Property="ItemContainerStyle" Value="{StaticResource LeftTabItem}" />
						</Trigger>
						<Trigger Property="TabControl.TabStripPlacement" Value="Right">
							<Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
							<Setter TargetName="HeaderBorder" Property="Grid.Column" Value="1" />
							<Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
							<Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
							<Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
							<Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
							<Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
							<Setter TargetName="HeaderBorder" Property="BorderThickness" Value="1,0,0,0" />
							<Setter Property="ItemContainerStyle" Value="{StaticResource RightTabItem}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource DefaultTabControl}" />
	<Style x:Key="DefaultPasswordBox" TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="PasswordChar" Value="●" />
		<Setter Property="MinHeight" Value="{StaticResource MinHeight}" />
		<Setter Property="MinWidth" Value="180" />
		<Setter Property="AllowDrop" Value="True" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Padding" Value="6,0" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="helpers:PasswordBoxHelper.IsMonitoring" Value="True" />
		<Setter Property="SelectionBrush" Value="{DynamicResource WindowBorderBrushSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type PasswordBox}">
					<Border x:Name="PART_Border" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderBrush="{DynamicResource BaseSolidColorBrush}">
						<Border.Background>
							<SolidColorBrush Color="{DynamicResource BackgroundColor}" />
						</Border.Background>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Disabled" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Duration="00:00:0.3" Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{DynamicResource PrimaryNormalColor}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<controls:SmallPanel Margin="{TemplateBinding Padding}">
							<TextBlock x:Name="PART_TextBlockWatermark" Text="{Binding Path=(helpers:ElementHelper.Watermark),RelativeSource={RelativeSource TemplatedParent}}" Foreground="{DynamicResource RegularTextSolidColorBrush}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FontSize="{StaticResource NormalFontSize}" Margin="7.5,0" Visibility="Collapsed" />
							<ScrollViewer x:Name="PART_ContentHost" />
						</controls:SmallPanel>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="helpers:PasswordBoxHelper.PasswordLength" Value="0" />
								<Condition Property="helpers:ElementHelper.IsWatermark" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Visibility" TargetName="PART_TextBlockWatermark" Value="Visible" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource DefaultPasswordBox}" />
	<Style x:Key="DefaultExpander" TargetType="{x:Type Expander}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Background" Value="{DynamicResource BackgroundSolidColorBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="BorderBrush" Value="{DynamicResource LighterSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Border Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<DockPanel>
							<ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
								<ToggleButton.Style>
									<Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ControlBasicStyle}">
										<Setter Property="Cursor" Value="Hand" />
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Border Padding="2,10" BorderThickness="1" BorderBrush="{DynamicResource BaseSolidColorBrush}" Background="{DynamicResource LighterSolidColorBrush}">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CheckStates">
																<VisualState x:Name="Checked">
																	<Storyboard>
																		<DoubleAnimation Duration="00:00:.2" To="90" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="ExpandededArrow" />
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Unchecked">
																	<Storyboard>
																		<DoubleAnimation Duration="00:00:.2" To="0" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="ExpandededArrow" />
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Indeterminate" />
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Grid Background="Transparent" SnapsToDevicePixels="False" Margin="{TemplateBinding Padding}">
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="19" />
																<ColumnDefinition Width="*" />
															</Grid.ColumnDefinitions>
															<Path x:Name="ExpandededArrow" Stretch="Fill" Height="10" Width="6" Data="{StaticResource PathNext}" RenderTransformOrigin=".5,.5">
																<Path.Fill>
																	<SolidColorBrush Color="{DynamicResource PrimaryTextColor}" />
																</Path.Fill>
																<Path.RenderTransform>
																	<RotateTransform />
																</Path.RenderTransform>
															</Path>
															<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
														</Grid>
													</Border>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</ToggleButton.Style>
							</ToggleButton>
							<Border x:Name="PART_Content" DockPanel.Dock="Bottom" BorderBrush="{DynamicResource BaseSolidColorBrush}" BorderThickness="0" SnapsToDevicePixels="True">
								<ContentPresenter x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Border>
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="True">
							<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Right">
							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
							<Setter Property="Style" TargetName="HeaderSite">
								<Setter.Value>
									<Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ControlBasicStyle}">
										<Setter Property="Cursor" Value="Hand" />
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Border Padding="10,2" BorderThickness="1" BorderBrush="{DynamicResource BaseSolidColorBrush}" Background="{DynamicResource LighterSolidColorBrush}">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CheckStates">
																<VisualState x:Name="Checked">
																	<Storyboard>
																		<DoubleAnimation Duration="00:00:.2" To="-90" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="ExpandededArrow" />
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Unchecked">
																	<Storyboard>
																		<DoubleAnimation Duration="00:00:.2" To="0" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="ExpandededArrow" />
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Indeterminate" />
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Grid Background="Transparent" SnapsToDevicePixels="False" Margin="{TemplateBinding Padding}">
															<Grid.RowDefinitions>
																<RowDefinition Height="19" />
																<RowDefinition Height="*" />
															</Grid.RowDefinitions>
															<controls:SmallPanel>
																<controls:SmallPanel.LayoutTransform>
																	<TransformGroup>
																		<RotateTransform Angle="90" />
																	</TransformGroup>
																</controls:SmallPanel.LayoutTransform>
																<Path x:Name="ExpandededArrow" Stretch="Fill" Height="10" Width="6" Data="{StaticResource PathNext}" RenderTransformOrigin=".5,.5">
																	<Path.Fill>
																		<SolidColorBrush Color="{DynamicResource PrimaryTextColor}" />
																	</Path.Fill>
																	<Path.RenderTransform>
																		<RotateTransform />
																	</Path.RenderTransform>
																</Path>
															</controls:SmallPanel>
															<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top" />
														</Grid>
													</Border>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Up">
							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
							<Setter Property="Style" TargetName="HeaderSite">
								<Setter.Value>
									<Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ControlBasicStyle}">
										<Setter Property="Cursor" Value="Hand" />
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Border Padding="2,10" BorderThickness="1" BorderBrush="{DynamicResource BaseSolidColorBrush}" Background="{DynamicResource LighterSolidColorBrush}">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CheckStates">
																<VisualState x:Name="Checked">
																	<Storyboard>
																		<DoubleAnimation Duration="00:00:.2" To="-90" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="ExpandededArrow" />
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Unchecked">
																	<Storyboard>
																		<DoubleAnimation Duration="00:00:.2" To="0" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="ExpandededArrow" />
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Indeterminate" />
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Grid Background="Transparent" SnapsToDevicePixels="False" Margin="{TemplateBinding Padding}">
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="19" />
																<ColumnDefinition Width="*" />
															</Grid.ColumnDefinitions>
															<controls:SmallPanel>
																<Path x:Name="ExpandededArrow" Stretch="Fill" Height="10" Width="6" Data="{StaticResource PathNext}" RenderTransformOrigin=".5,.5">
																	<Path.Fill>
																		<SolidColorBrush Color="{DynamicResource PrimaryTextColor}" />
																	</Path.Fill>
																	<Path.RenderTransform>
																		<RotateTransform />
																	</Path.RenderTransform>
																</Path>
															</controls:SmallPanel>
															<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
														</Grid>
													</Border>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Left">
							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
							<Setter Property="Style" TargetName="HeaderSite">
								<Setter.Value>
									<Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ControlBasicStyle}">
										<Setter Property="Cursor" Value="Hand" />
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Border Padding="10,2" BorderThickness="1" BorderBrush="{DynamicResource BaseSolidColorBrush}" Background="{DynamicResource LighterSolidColorBrush}">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CheckStates">
																<VisualState x:Name="Checked">
																	<Storyboard>
																		<DoubleAnimation Duration="00:00:.2" To="90" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="ExpandededArrow" />
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Unchecked">
																	<Storyboard>
																		<DoubleAnimation Duration="00:00:.2" To="0" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="ExpandededArrow" />
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Indeterminate" />
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Grid Background="Transparent" SnapsToDevicePixels="False" Margin="{TemplateBinding Padding}">
															<Grid.RowDefinitions>
																<RowDefinition Height="19" />
																<RowDefinition Height="*" />
															</Grid.RowDefinitions>
															<controls:SmallPanel>
																<controls:SmallPanel.LayoutTransform>
																	<TransformGroup>
																		<RotateTransform Angle="90" />
																	</TransformGroup>
																</controls:SmallPanel.LayoutTransform>
																<Path x:Name="ExpandededArrow" Stretch="Fill" Height="10" Width="6" Data="{StaticResource PathNext}" RenderTransformOrigin=".5,.5">
																	<Path.Fill>
																		<SolidColorBrush Color="{DynamicResource PrimaryTextColor}" />
																	</Path.Fill>
																	<Path.RenderTransform>
																		<RotateTransform />
																	</Path.RenderTransform>
																</Path>
															</controls:SmallPanel>
															<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top" />
														</Grid>
													</Border>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsExpanded" Value="True" />
								<Condition Property="ExpandDirection" Value="Down" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Content" Property="BorderThickness" Value="1,0,1,1" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsExpanded" Value="True" />
								<Condition Property="ExpandDirection" Value="Right" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Content" Property="BorderThickness" Value="0,1,1,1" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsExpanded" Value="True" />
								<Condition Property="ExpandDirection" Value="Up" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Content" Property="BorderThickness" Value="1,1,1,0" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsExpanded" Value="True" />
								<Condition Property="ExpandDirection" Value="Left" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Content" Property="BorderThickness" Value="1,1,0,1" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type Expander}" BasedOn="{StaticResource DefaultExpander}" />
	<Style x:Key="DefaultGroupBox" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Padding" Value="4" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<Border Grid.Row="0" BorderThickness="1" BorderBrush="{DynamicResource BaseSolidColorBrush}">
							<Border.Background>
								<SolidColorBrush Color="{DynamicResource BackgroundColor}" />
							</Border.Background>
							<ContentPresenter Margin="10" ContentSource="Header" RecognizesAccessKey="True" />
						</Border>
						<Border Grid.Row="1" BorderThickness="1,0,1,1" SnapsToDevicePixels="True" BorderBrush="{DynamicResource BaseSolidColorBrush}">
							<Border.Background>
								<SolidColorBrush Color="{DynamicResource BackgroundColor}" />
							</Border.Background>
							<ContentPresenter Margin="{TemplateBinding Padding}" />
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource DefaultGroupBox}" />
	<Style x:Key="DefaultListBox" TargetType="{x:Type ListBox}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="MinWidth" Value="120" />
		<Setter Property="MinHeight" Value="95" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border Name="Border" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource BaseSolidColorBrush}">
						<ScrollViewer Focusable="False">
							<VirtualizingStackPanel IsItemsHost="True" />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DefaultListBoxItem" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextSolidColorBrush}" />
		<Setter Property="MinHeight" Value="48" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<controls:SmallPanel>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected" />
								<VisualState x:Name="Selected" />
								<VisualState x:Name="SelectedUnfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="PART_Border" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource BaseSolidColorBrush}">
							<Border.Background>
								<SolidColorBrush Color="{DynamicResource WhiteColor}" />
							</Border.Background>
							<ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
						</Border>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource BaseMoveColorSolidColorBrush}" />
						</MultiTrigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="{DynamicResource BaseSolidColorBrush}" TargetName="PART_Border" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource DefaultListBox}" />
	<Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource DefaultListBoxItem}" />
	<Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid Background="{TemplateBinding Background}">
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<DockPanel Margin="{TemplateBinding Padding}">
							<ScrollViewer DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Focusable="False">
								<GridViewHeaderRowPresenter Columns="{Binding Path=TemplatedParent.View.Columns,&#xD;&#xA;                RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContainerStyle="{Binding&#xD;&#xA;                Path=TemplatedParent.View.ColumnHeaderContainerStyle,&#xD;&#xA;                RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplate="{Binding&#xD;&#xA;                Path=TemplatedParent.View.ColumnHeaderTemplate,&#xD;&#xA;                RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplateSelector="{Binding &#xD;&#xA;                Path=TemplatedParent.View.ColumnHeaderTemplateSelector,&#xD;&#xA;                RelativeSource={RelativeSource TemplatedParent}}" AllowsColumnReorder="{Binding&#xD;&#xA;                Path=TemplatedParent.View.AllowsColumnReorder,&#xD;&#xA;                RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContextMenu="{Binding&#xD;&#xA;                Path=TemplatedParent.View.ColumnHeaderContextMenu,&#xD;&#xA;                RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderToolTip="{Binding&#xD;&#xA;                Path=TemplatedParent.View.ColumnHeaderToolTip,&#xD;&#xA;                RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding&#xD;&#xA;                SnapsToDevicePixels}" />
							</ScrollViewer>
							<ScrollContentPresenter Name="PART_ScrollContentPresenter" KeyboardNavigation.DirectionalNavigation="Local" CanContentScroll="True" CanHorizontallyScroll="False" CanVerticallyScroll="False" />
						</DockPanel>
						<ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Value="{TemplateBinding HorizontalOffset}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
						<ScrollBar Name="PART_VerticalScrollBar" HorizontalAlignment="Right" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Value="{TemplateBinding VerticalOffset}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Width" Value="18" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}" Background="Transparent">
						<Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource PrimaryMouseOverSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DefaultGridViewColumnHeader" TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="FontWeight" Value="ExtraBlack" />
		<Setter Property="Background" Value="{DynamicResource BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BaseSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="Padding" Value="10" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
					<controls:SmallPanel>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Pressed" />
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="HeaderBorder" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
							<ContentPresenter x:Name="HeaderContent" Margin="0,0,0,1" TextElement.FontWeight="{TemplateBinding FontWeight}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
						<Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0,0,-9,0" Style="{StaticResource GridViewColumnHeaderGripper}" />
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DefaultListView" TargetType="{x:Type ListView}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListView}">
					<Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource BaseSolidColorBrush}">
						<ScrollViewer Style="{DynamicResource&#xD;&#xA;                        {x:Static GridView.GridViewScrollViewerStyleKey}}">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DefaultListViewItem" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="MinHeight" Value="48" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource BaseSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Border x:Name="Border" Padding="2" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="{DynamicResource BaseMoveColorSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource DefaultListViewItem}" />
	<Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource DefaultGridViewColumnHeader}" />
	<Style TargetType="{x:Type ListView}" BasedOn="{StaticResource DefaultListView}" />
	<Style x:Key="DefaultProgressBar" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Foreground">
			<Setter.Value>
				<DrawingBrush Viewport="0,0,20,6" TileMode="Tile" ViewportUnits="Absolute" Stretch="None">
					<DrawingBrush.Transform>
						<TransformGroup>
							<RotateTransform Angle="20" />
							<TranslateTransform X="0" />
						</TransformGroup>
					</DrawingBrush.Transform>
					<DrawingBrush.Drawing>
						<GeometryDrawing>
							<GeometryDrawing.Brush>
								<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
									<GradientStop Color="{DynamicResource PrimaryNormalColor}" Offset="0" />
									<GradientStop Color="{DynamicResource PrimaryNormalColor}" Offset="0.5" />
									<GradientStop Color="Transparent" Offset="0.5" />
									<GradientStop Color="Transparent" Offset="1" />
								</LinearGradientBrush>
							</GeometryDrawing.Brush>
							<GeometryDrawing.Geometry>
								<RectangleGeometry Rect="0,0,20,6" />
							</GeometryDrawing.Geometry>
						</GeometryDrawing>
					</DrawingBrush.Drawing>
				</DrawingBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Height" Value="6" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ProgressBar}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="LoadedStoryboard" RepeatBehavior="Forever">
							<DoubleAnimation Storyboard.TargetProperty="(Border.Background).(Brush.Transform).(TransformGroup.Children)[1].(TranslateTransform.X)" Storyboard.TargetName="Indicator" From="0" To="21" Duration="00:00:0.45" />
						</Storyboard>
						<Storyboard x:Key="IsIndeterminate" RepeatBehavior="Forever">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="ScaleXBorder">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
								<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.3" />
								<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.3" />
							</DoubleAnimationUsingKeyFrames>
							<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="ScaleXBorder">
								<EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" EasingFunction="{StaticResource SineEaseOut}" />
								<EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
								<EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" EasingFunction="{StaticResource SineEaseOut}" />
							</PointAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Border x:Name="PART_Border" Background="{DynamicResource BaseSolidColorBrush}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}">
						<controls:SmallPanel ClipToBounds="True">
							<Border x:Name="PART_Track" />
							<Decorator x:Name="PART_Indicator" HorizontalAlignment="Left">
								<Border x:Name="Indicator" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" Background="{TemplateBinding Foreground}" />
							</Decorator>
							<Rectangle x:Name="ScaleXBorder" Visibility="Collapsed" Fill="{DynamicResource PrimaryNormalSolidColorBrush}">
								<Rectangle.RenderTransform>
									<ScaleTransform />
								</Rectangle.RenderTransform>
							</Rectangle>
						</controls:SmallPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Orientation" Value="Vertical">
							<Setter Property="Height" Value="{x:Static sys:Double.NaN}" />
							<Setter Property="LayoutTransform" TargetName="PART_Border">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsIndeterminate" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource IsIndeterminate}" />
							</Trigger.EnterActions>
							<Setter Property="Visibility" TargetName="PART_Indicator" Value="Collapsed" />
							<Setter Property="Visibility" TargetName="ScaleXBorder" Value="Visible" />
							<Setter Property="CornerRadius" TargetName="PART_Border" Value="0" />
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="LoadedBeginStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
						<EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="Indicator">
							<BeginStoryboard x:Name="LoadedBeginStoryboard" Storyboard="{StaticResource LoadedStoryboard}" />
						</EventTrigger>
						<EventTrigger RoutedEvent="FrameworkElement.Unloaded" SourceName="Indicator">
							<StopStoryboard BeginStoryboardName="LoadedBeginStoryboard" />
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource DefaultProgressBar}" />
	<Style x:Key="DefaultTreeView" TargetType="{x:Type TreeView}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="4" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TreeView">
					<Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource BaseSolidColorBrush}" Background="{DynamicResource BackgroundSolidColorBrush}">
						<ScrollViewer Focusable="False" CanContentScroll="False" Padding="{TemplateBinding Padding}">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<controls:SmallPanel Width="15" Height="13" Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Duration="00:00:.2" To="90" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="Expanded" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimation Duration="00:00:.2" To="0" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="Expanded" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Path x:Name="Expanded" Stretch="Fill" Height="10" Width="6" Data="{StaticResource PathNext}" RenderTransformOrigin=".5,.5">
							<Path.Fill>
								<SolidColorBrush Color="{DynamicResource PrimaryTextColor}" />
							</Path.Fill>
							<Path.RenderTransform>
								<RotateTransform />
							</Path.RenderTransform>
						</Path>
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DefaultTreeViewItem" TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Padding" Value="10" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ExpansionStates">
								<VisualState x:Name="Expanded">
									<Storyboard>
										<DoubleAnimation Duration="00:00:.2" To="1" Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="PART_ItemsHost" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Collapsed" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition />
						</Grid.RowDefinitions>
						<Border x:Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
							<DockPanel LastChildFill="True">
								<ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}" />
								<ContentPresenter VerticalAlignment="Center" x:Name="PART_Header" ContentSource="Header" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</DockPanel>
						</Border>
						<Border Grid.Row="1" RenderTransformOrigin=".5,0" x:Name="PART_ItemsHost">
							<Border.RenderTransform>
								<ScaleTransform ScaleY="0" />
							</Border.RenderTransform>
							<ItemsPresenter x:Name="ItemsHost" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" SourceName="PART_Border" Value="True">
							<Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource BaseMoveColorSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsExpanded" Value="False">
							<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems" Value="False">
							<Setter Property="Visibility" TargetName="Expander" Value="Hidden" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource BaseSolidColorBrush}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True" />
								<Condition Property="IsSelectionActive" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource BackgroundSolidColorBrush}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource DefaultTreeView}" />
	<Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource DefaultTreeViewItem}" />
	<Style TargetType="{x:Type controls:WPFMessageBox}">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
		<Setter Property="SizeToContent" Value="WidthAndHeight" />
		<Setter Property="ResizeMode" Value="NoResize" />
		<Setter Property="ShowInTaskbar" Value="False" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="TextOptions.TextFormattingMode" Value="Display" />
		<Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
		<Setter Property="WindowStyle" Value="None" />
		<Setter Property="FontFamily" Value="{DynamicResource NormalFontFamily}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:WPFMessageBox}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition />
								<RowDefinition />
								<RowDefinition />
							</Grid.RowDefinitions>
							<controls:SmallPanel Grid.Row="0">
								<DockPanel Margin="20,0,0,0">
									<TextBlock x:Name="PART_Title" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{DynamicResource TitleFontSize}" Foreground="{DynamicResource PrimaryTextSolidColorBrush}" />
									<Button Name="PART_CloseButton" Margin="0,6" ToolTip="Close" HorizontalAlignment="Right" IsTabStop="False" Style="{DynamicResource WindowButtonStyle}">
										<Path Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{DynamicResource PathMetroWindowClose}" Fill="{DynamicResource PrimaryTextSolidColorBrush}" Stretch="Fill" />
									</Button>
								</DockPanel>
							</controls:SmallPanel>
							<controls:SmallPanel Grid.Row="1" Margin="20">
								<DockPanel>
									<Path x:Name="PART_Path" Data="{DynamicResource PathInformation}" Fill="{DynamicResource PrimaryNormalSolidColorBrush}" Height="25" Width="25" Stretch="Fill" />
									<TextBox x:Name="PART_Message" TextWrapping="Wrap" MaxWidth="500" Width="Auto" VerticalAlignment="Center" FontSize="{DynamicResource NormalFontSize}" Padding="10,0" IsReadOnly="True" BorderThickness="0" Foreground="{DynamicResource RegularTextSolidColorBrush}" />
								</DockPanel>
							</controls:SmallPanel>
							<controls:SmallPanel Grid.Row="2" Margin="140,20,10,10">
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
									<Button x:Name="PART_ButtonCancel" Content="取消" Visibility="Collapsed" />
									<Button x:Name="PART_ButtonOK" Style="{DynamicResource PrimaryButton}" Margin="10,0,0,0" Content="确认" />
								</StackPanel>
							</controls:SmallPanel>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:WPFLoading}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Background" Value="{x:Null}" />
		<Setter Property="FontFamily" Value="{DynamicResource NormalFontFamily}" />
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
		<Setter Property="Width" Value="40" />
		<Setter Property="Height" Value="40" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:WPFLoading}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="StarStoryboard" RepeatBehavior="Forever">
							<DoubleAnimation Duration="0:0:1.5" To="360" Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" />
						</Storyboard>
					</ControlTemplate.Resources>
					<controls:SmallPanel Background="{TemplateBinding Background}">
						<Ellipse Stroke="{TemplateBinding BorderBrush}" x:Name="PART_Ellipse" StrokeThickness="2" StrokeDashArray="{TemplateBinding StrokeArray}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" RenderTransformOrigin=".5,.5">
							<Ellipse.RenderTransform>
								<RotateTransform Angle="-90" />
							</Ellipse.RenderTransform>
						</Ellipse>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsAnimation" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="StarBeginStoryboard" Storyboard="{StaticResource StarStoryboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="StarBeginStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:ThemeControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ThemeControl}">
					<ItemsControl ItemsSource="{Binding ItemsSource,RelativeSource={RelativeSource AncestorType=controls:ThemeControl}}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<RadioButton Height="40" Width="40" Margin="4,0" Cursor="Hand" IsChecked="{Binding IsChecked}">
									<RadioButton.Style>
										<Style TargetType="{x:Type RadioButton}">
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type RadioButton}">
														<Border x:Name="PART_Border" Padding="2" BorderThickness="0" BorderBrush="{Binding Color}">
															<controls:SmallPanel Background="{x:Null}">
																<Rectangle x:Name="PART_Rectangle" Fill="{Binding Color}" />
																<Path Data="{StaticResource PathCheckMark}" Stretch="Fill" Fill="{DynamicResource BackgroundSolidColorBrush}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Height="10" Width="12" Margin="0,0,4,4" Visibility="{Binding IsChecked,Converter={StaticResource bool2VisibilityConverter}}" />
															</controls:SmallPanel>
														</Border>
														<ControlTemplate.Triggers>
															<Trigger Property="IsMouseOver" Value="True">
																<Setter Property="Opacity" Value=".8" TargetName="PART_Rectangle" />
																<Setter Property="BorderThickness" Value="1" TargetName="PART_Border" />
															</Trigger>
															<Trigger Property="IsChecked" Value="True">
																<Setter Property="BorderThickness" Value="1" TargetName="PART_Border" />
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</RadioButton.Style>
								</RadioButton>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<WrapPanel />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
					</ItemsControl>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ec:PathListBox}" x:Key="{x:Type ec:PathListBox}">
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="FrameworkElement.UseLayoutRounding" Value="False" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<ec:PathPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ec:PathListBox}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid" />
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<ObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<ObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
											<DiscreteObjectKeyFrame KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Boolean>True</sys:Boolean>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" CornerRadius="2">
							<ItemsPresenter />
						</Border>
						<Border Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed">
							<ToolTipService.ToolTip>
								<ToolTip Name="validationTooltip" Placement="Right" Template="{StaticResource ValidationToolTipTemplate}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
									<FrameworkElement.Triggers>
										<EventTrigger RoutedEvent="Canvas.Loaded">
											<BeginStoryboard>
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
														<DiscreteObjectKeyFrame KeyTime="0">
															<ObjectKeyFrame.Value>
																<sys:Boolean>true</sys:Boolean>
															</ObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
									</FrameworkElement.Triggers>
								</ToolTip>
							</ToolTipService.ToolTip>
							<Grid Background="#00FFFFFF" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
								<Path Data="M1,0 L6,0 A2,2 0 0 1 8,2L8,7" Fill="#FFDC000C" Margin="-1,3,0,0" />
								<Path Data="M0,0 L2,0 L8,6 L8,8" Fill="#ffffff" Margin="-1,3,0,0" />
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:AnimationAudio}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Width" Value="80" />
		<Setter Property="Height" Value="35" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Foreground" Value="{DynamicResource BackgroundSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:AnimationAudio}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="PlayStoryboard" RepeatBehavior="Forever">
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PathAudioTwo" Storyboard.TargetProperty="(Path.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Hidden}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PathAudioThree" Storyboard.TargetProperty="(Path.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Hidden}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames BeginTime="0:0:.3" Duration="0:0:.4" Storyboard.TargetName="PathAudioTwo" Storyboard.TargetProperty="(Path.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames BeginTime="0:0:.7" Duration="0:0:.4" Storyboard.TargetName="PathAudioThree" Storyboard.TargetProperty="(Path.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Border x:Name="PART_Border" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding helpers:ControlsHelper.CornerRadius}" SnapsToDevicePixels="True" UseLayoutRounding="True">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<StackPanel Width="20" Height="30" HorizontalAlignment="Left" Orientation="Horizontal" Margin="10,0" RenderTransformOrigin=".5,.5" x:Name="PART_StackPanel">
								<Path Data="{StaticResource PathAudioOne}" Width="4" Height="6" Stretch="Fill" Fill="{TemplateBinding Foreground}" />
								<Path x:Name="PathAudioTwo" Data="{StaticResource PathAudioTwo}" Width="6" StrokeThickness="1.5" Stroke="Transparent" Margin="0,7" Stretch="Fill" Fill="{TemplateBinding Foreground}" />
								<Path x:Name="PathAudioThree" Data="{StaticResource PathAudioThree}" Width="8" Margin="-3,4" Stretch="Fill" Fill="{TemplateBinding Foreground}" StrokeThickness="2" Stroke="Transparent" />
							</StackPanel>
							<TextBlock VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" FontSize="{DynamicResource TitleFontSize}" Grid.Column="1" x:Name="PART_TextBlock">
								<Run x:Name="PART_RunTimeLength" />
							</TextBlock>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPlay" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="PlayBeginStoryboard" Storyboard="{StaticResource PlayStoryboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="PlayBeginStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsRight" Value="True">
							<Setter Property="Grid.Column" TargetName="PART_TextBlock" Value="0" />
							<Setter Property="HorizontalAlignment" TargetName="PART_TextBlock" Value="Right" />
							<Setter Property="Grid.Column" TargetName="PART_StackPanel" Value="1" />
							<Setter Property="HorizontalAlignment" TargetName="PART_StackPanel" Value="Right" />
							<Setter Property="RenderTransform" TargetName="PART_StackPanel">
								<Setter.Value>
									<TransformGroup>
										<RotateTransform Angle="180" />
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:AnimationNavigationBar3DItem}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Width" Value="80" />
		<Setter Property="Height" Value="80" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:AnimationNavigationBar3DItem}">
					<Viewport3D Height="{TemplateBinding Width}" Width="{TemplateBinding Height}">
						<Viewport3D.Triggers>
							<EventTrigger RoutedEvent="MouseEnter">
								<BeginStoryboard>
									<Storyboard Storyboard.TargetProperty="Angle" Storyboard.TargetName="axis3d">
										<DoubleAnimation Duration="00:00:1" To="90" EasingFunction="{StaticResource CubicEaseInOut}" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
							<EventTrigger RoutedEvent="MouseLeave">
								<BeginStoryboard>
									<Storyboard Storyboard.TargetProperty="Angle" Storyboard.TargetName="axis3d">
										<DoubleAnimation Duration="00:00:1" To="0" EasingFunction="{StaticResource CubicEaseInOut}" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
						</Viewport3D.Triggers>
						<Viewport3D.Camera>
							<OrthographicCamera LookDirection="0,0,-100" Position="0,0,100" UpDirection="0,1,0" />
						</Viewport3D.Camera>
						<Viewport3D.Children>
							<ModelVisual3D>
								<ModelVisual3D.Content>
									<AmbientLight Color="White" />
								</ModelVisual3D.Content>
							</ModelVisual3D>
							<ContainerUIElement3D>
								<ContainerUIElement3D.Transform>
									<RotateTransform3D>
										<RotateTransform3D.Rotation>
											<AxisAngleRotation3D x:Name="axis3d" Angle="0" Axis="1 0 0" />
										</RotateTransform3D.Rotation>
									</RotateTransform3D>
								</ContainerUIElement3D.Transform>
								<Viewport2DVisual3D>
									<Viewport2DVisual3D.Material>
										<DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" />
									</Viewport2DVisual3D.Material>
									<Viewport2DVisual3D.Geometry>
										<MeshGeometry3D Positions="-1,1,1    -1,-1,1   1,-1,1    1,1,1" TextureCoordinates="0,0   0,1     1,1  1,0" TriangleIndices="0 1 2 0 2 3" />
									</Viewport2DVisual3D.Geometry>
									<Border Background="{TemplateBinding FileBackground}" Height="110" Width="110" CornerRadius="0,0,0,0">
										<Path Data="{TemplateBinding PathDate}" Fill="#FFFF" Stretch="Fill" Width="40" Height="40" />
									</Border>
								</Viewport2DVisual3D>
								<Viewport2DVisual3D>
									<Viewport2DVisual3D.Material>
										<DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" />
									</Viewport2DVisual3D.Material>
									<Viewport2DVisual3D.Geometry>
										<MeshGeometry3D Positions="-1,1,1  1,1,1   1,1,-1   -1,1,-1" TextureCoordinates="0,0   0,1   1,1  1,0" TriangleIndices="0 1 2 0 2 3" />
									</Viewport2DVisual3D.Geometry>
									<Border Background="{TemplateBinding BackFileBackground}" Height="110" Width="110" CornerRadius="0,0,0,0" RenderTransformOrigin="0.5,0.5">
										<Border.RenderTransform>
											<TransformGroup>
												<RotateTransform Angle="90" />
											</TransformGroup>
										</Border.RenderTransform>
										<StackPanel VerticalAlignment="Center">
											<Path Data="{TemplateBinding PathDate}" Fill="#FFFF" Stretch="Fill" Width="40" Height="40" />
											<TextBlock Text="{TemplateBinding Text}" HorizontalAlignment="Center" FontSize="{TemplateBinding FontSize}" Foreground="{StaticResource BackgroundSolidColorBrush}" />
										</StackPanel>
									</Border>
								</Viewport2DVisual3D>
							</ContainerUIElement3D>
						</Viewport3D.Children>
					</Viewport3D>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:AnimationNavigationBar3D}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:AnimationNavigationBar3D}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
						<ScrollViewer VerticalScrollBarVisibility="Auto">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<UniformGrid Columns="{Binding Columns,RelativeSource={RelativeSource AncestorType={x:Type controls:AnimationNavigationBar3D}}}" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:BallLoading}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:BallLoading}">
					<Viewbox>
						<controls:SmallPanel x:Name="Part_BackGrid" Width="400" Height="140">
							<controls:SmallPanel.Effect>
								<DropShadowEffect BlurRadius="10" ShadowDepth="5" Color="#ff6a27" Opacity="0.8" />
							</controls:SmallPanel.Effect>
							<Canvas>
								<Ellipse x:Name="Part_Eillipse" Canvas.Left="20" Canvas.Top="50" Width="40" Height="40">
									<Ellipse.Fill>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<GradientStop Color="#ff9303" Offset="0" />
											<GradientStop Color="#ff8c09" Offset="1" />
										</LinearGradientBrush>
									</Ellipse.Fill>
								</Ellipse>
							</Canvas>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<controls:SmallPanel x:Name="Part_EillpseDock1" Grid.Column="1" RenderTransformOrigin="0,0.5">
									<Ellipse x:Name="Part_Eillipse1" HorizontalAlignment="Center" Width="40" Height="40">
										<Ellipse.Fill>
											<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
												<GradientStop Color="#ff781a" Offset="0" />
												<GradientStop Color="#ff6a27" Offset="1" />
											</LinearGradientBrush>
										</Ellipse.Fill>
									</Ellipse>
								</controls:SmallPanel>
								<controls:SmallPanel x:Name="Part_EillpseDock2" Grid.Column="2" RenderTransformOrigin="0,0.5">
									<Ellipse x:Name="Part_Eillipse2" HorizontalAlignment="Center" Width="40" Height="40">
										<Ellipse.Fill>
											<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
												<GradientStop Color="#ff5539" Offset="0" />
												<GradientStop Color="#ff4845" Offset="1" />
											</LinearGradientBrush>
										</Ellipse.Fill>
									</Ellipse>
								</controls:SmallPanel>
								<controls:SmallPanel x:Name="Part_EillpseDock3" Grid.Column="3" RenderTransformOrigin="0,0.5">
									<Ellipse x:Name="Part_Eillipse3" HorizontalAlignment="Center" Width="40" Height="40">
										<Ellipse.Fill>
											<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
												<GradientStop Color="#ff3357" Offset="0" />
												<GradientStop Color="#ff2465" Offset="1" />
											</LinearGradientBrush>
										</Ellipse.Fill>
									</Ellipse>
								</controls:SmallPanel>
								<controls:SmallPanel x:Name="Part_EillpseDock4" Grid.Column="4" RenderTransformOrigin="0,0.5">
									<Ellipse x:Name="Part_Eillipse4" HorizontalAlignment="Center" Width="40" Height="40">
										<Ellipse.Fill>
											<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
												<GradientStop Color="#ff097c" Offset="0" />
												<GradientStop Color="#ff0382" Offset="1" />
											</LinearGradientBrush>
										</Ellipse.Fill>
									</Ellipse>
								</controls:SmallPanel>
							</Grid>
						</controls:SmallPanel>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="LampEffect_Eclipse" TargetType="{x:Type controls:BreathLamp}">
		<controls:SmallPanel>
			<Viewbox>
				<controls:SmallPanel Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
					<Border x:Name="PART_LampEclipse" BorderThickness="0" BorderBrush="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5">
						<Border.RenderTransform>
							<ScaleTransform CenterX="0" CenterY="0" ScaleX="0.8" ScaleY="0.8" />
						</Border.RenderTransform>
					</Border>
				</controls:SmallPanel>
			</Viewbox>
			<ContentPresenter />
		</controls:SmallPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsLampStart" Value="True">
				<Setter Property="Effect" TargetName="PART_LampEclipse">
					<Setter.Value>
						<DropShadowEffect BlurRadius="25" ShadowDepth="0" Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EffectColor}" />
					</Setter.Value>
				</Setter>
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard RepeatBehavior="Forever" AutoReverse="True">
							<DoubleAnimation Duration="0:0:1" BeginTime="0" From="0.8" To="1.1" Storyboard.TargetName="PART_LampEclipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" EasingFunction="{StaticResource SineEaseOut}" />
							<DoubleAnimation Duration="0:0:1" BeginTime="0" From="0.8" To="1.1" Storyboard.TargetName="PART_LampEclipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" EasingFunction="{StaticResource SineEaseOut}" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="LampEffect_Ripple" TargetType="{x:Type controls:BreathLamp}">
		<controls:SmallPanel>
			<Viewbox>
				<controls:SmallPanel Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
					<Border x:Name="PART_LampRipple_1" RenderTransformOrigin="0.5,0.5" Background="Transparent" BorderThickness="1" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{TemplateBinding Background}">
						<Border.RenderTransform>
							<ScaleTransform CenterX="0" CenterY="0" ScaleX="0.8" ScaleY="0.8" />
						</Border.RenderTransform>
					</Border>
					<Border x:Name="PART_LampRipple_2" RenderTransformOrigin="0.5,0.5" Background="Transparent" BorderThickness="1" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{TemplateBinding Background}">
						<Border.RenderTransform>
							<ScaleTransform ScaleX="0.8" ScaleY="0.8" />
						</Border.RenderTransform>
					</Border>
					<Border CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
				</controls:SmallPanel>
			</Viewbox>
			<ContentPresenter />
		</controls:SmallPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsLampStart" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard RepeatBehavior="Forever" AutoReverse="True">
							<DoubleAnimation Duration="0:0:1" BeginTime="0" From="0.8" To="1.3" Storyboard.TargetName="PART_LampRipple_1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" EasingFunction="{StaticResource SineEaseOut}" />
							<DoubleAnimation Duration="0:0:1" BeginTime="0" From="0.8" To="1.3" Storyboard.TargetName="PART_LampRipple_1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" EasingFunction="{StaticResource SineEaseOut}" />
							<DoubleAnimation Duration="0:0:1" BeginTime="0:0:0.4" From="0.8" To="1.3" Storyboard.TargetName="PART_LampRipple_2" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" EasingFunction="{StaticResource SineEaseOut}" />
							<DoubleAnimation Duration="0:0:1" BeginTime="0:0:0.4" From="0.8" To="1.3" Storyboard.TargetName="PART_LampRipple_2" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" EasingFunction="{StaticResource SineEaseOut}" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="LampEffect_OuterGlow" TargetType="{x:Type controls:BreathLamp}">
		<controls:SmallPanel>
			<Viewbox>
				<controls:SmallPanel Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
					<Border x:Name="PART_LampOuterGlow" Margin="1" BorderThickness="0" BorderBrush="Transparent" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5">
						<Border.Effect>
							<DropShadowEffect x:Name="PART_LampOuterGlow_Effect" BlurRadius="0" ShadowDepth="0" Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EffectColor}" />
						</Border.Effect>
					</Border>
					<Border CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
				</controls:SmallPanel>
			</Viewbox>
			<ContentPresenter />
		</controls:SmallPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsLampStart" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard RepeatBehavior="Forever">
							<DoubleAnimation Duration="0:0:0.6" AutoReverse="True" BeginTime="0" From="0" To="40" Storyboard.TargetName="PART_LampOuterGlow_Effect" Storyboard.TargetProperty="BlurRadius" EasingFunction="{StaticResource SineEaseInOut}" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type controls:BreathLamp}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Height" Value="60" />
		<Setter Property="Width" Value="60" />
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
		<Setter Property="EffectColor" Value="{StaticResource PrimaryNormalColor}" />
		<Style.Triggers>
			<Trigger Property="LampEffect" Value="Eclipse">
				<Setter Property="Template" Value="{StaticResource LampEffect_Eclipse}" />
			</Trigger>
			<Trigger Property="LampEffect" Value="Ripple">
				<Setter Property="Template" Value="{StaticResource LampEffect_Ripple}" />
			</Trigger>
			<Trigger Property="LampEffect" Value="OuterGlow">
				<Setter Property="Template" Value="{StaticResource LampEffect_OuterGlow}" />
			</Trigger>
			<Trigger Property="LampEffect" Value="Streamer">
				<Setter Property="Template" Value="{StaticResource LampEffect_Streamer}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type controls:MasterCarousel}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:MasterCarousel}">
					<controls:SmallPanel Background="{TemplateBinding Background}">
						<!--<Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Viewbox>
                            <Canvas x:Name="PART_ContentDock" Grid.Row="0" Width="900" Height="400"/>
                        </Viewbox>
                        <StackPanel x:Name="PART_ButtonDock" Grid.Row="1" Orientation="Horizontal" 
                                    VerticalAlignment="Center" HorizontalAlignment="Center"/>-->
						<Viewbox>
							<Canvas x:Name="PART_ContentDock" Width="900" Height="400" />
						</Viewbox>
						<StackPanel x:Name="PART_ButtonDock" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,210,0,0" />
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:EmphasizerCarousel}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:EmphasizerCarousel}">
					<controls:SmallPanel Background="{TemplateBinding Background}">
						<Canvas x:Name="PART_BackCanvas" />
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:ChatEmoji}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ChatEmoji}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<WrapPanel Grid.Column="0" Name="PART_Left" Visibility="Collapsed">
							<Border Width="35" Height="35" VerticalAlignment="Top" Margin="0,10" CornerRadius="4" UseLayoutRounding="True">
								<Border.Background>
									<ImageBrush x:Name="LeftUser" ImageSource="{TemplateBinding LeftImageSource}" RenderOptions.BitmapScalingMode="LowQuality " Stretch="Uniform" />
								</Border.Background>
							</Border>
							<Path Data="{StaticResource PathChatLeft}" Fill="{DynamicResource BackgroundSolidColorBrush}" Width="10" Height="10" Stretch="Fill" StrokeThickness="0" Grid.Column="1" VerticalAlignment="Top" Margin="0,20,-14,0" UseLayoutRounding="True" SnapsToDevicePixels="True" />
						</WrapPanel>
						<Border CornerRadius="4" Background="#9EEA6A" UseLayoutRounding="True" SnapsToDevicePixels="True" Grid.Column="1" Margin="10" Name="PART_Border">
							<TextBlock Name="PART_TextBlock" FontSize="15" Text="{TemplateBinding Text}" Padding="6" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="Black" />
						</Border>
						<WrapPanel Grid.Column="2" Name="PART_Right">
							<Path Data="{StaticResource PathChatRight}" Fill="#9EEA6A" Width="10" Height="10" Stretch="Fill" StrokeThickness="0" VerticalAlignment="Top" Margin="-14,20,0,0" UseLayoutRounding="True" SnapsToDevicePixels="True" />
							<Border Width="35" Height="35" VerticalAlignment="Top" Margin="0,10" CornerRadius="4" UseLayoutRounding="True">
								<Border.Background>
									<ImageBrush x:Name="RightUser" ImageSource="{TemplateBinding RightImageSource}" RenderOptions.BitmapScalingMode="LowQuality" Stretch="Uniform" />
								</Border.Background>
							</Border>
						</WrapPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:VerifyCode}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Background" Value="{x:Null}" />
		<Setter Property="Width" Value="100" />
		<Setter Property="Height" Value="40" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:VerifyCode}">
					<Image x:Name="PART_Image" Stretch="Fill" Source="{TemplateBinding ImageSource}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:CircularMenuItem}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:CircularMenuItem}">
					<controls:SmallPanel VerticalAlignment="Top">
						<controls:SmallPanel.RenderTransform>
							<RotateTransform x:Name="PART_RotateTransform" Angle="{TemplateBinding Angle}" CenterX="200" CenterY="200" />
						</controls:SmallPanel.RenderTransform>
						<Path x:Name="PART_Path" Data="{StaticResource PathCircularItem}" Fill="{TemplateBinding BackgroundColor}" VerticalAlignment="Center" />
						<Image Source="{TemplateBinding IconImage}" RenderTransformOrigin="0.5,0.5" Margin="60,100,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Width="40" Height="40">
							<Image.RenderTransform>
								<RotateTransform Angle="-70" />
							</Image.RenderTransform>
						</Image>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="PART_Path" Property="Fill" Value="{StaticResource PrimaryNormalSolidColorBrush}" />
							<Setter Property="Cursor" Value="Hand" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:CircularMenu}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Width" Value="400" />
		<Setter Property="Height" Value="400" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:CircularMenu}">
					<controls:SmallPanel>
						<ItemsControl x:Name="PART_ItemsControl" ItemsSource="{TemplateBinding ItemsSource}" AlternationCount="{TemplateBinding AlternationCount}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
							<ItemsControl.Clip>
								<EllipseGeometry x:Name="PART_EllipseGeometry" RadiusX="0" RadiusY="0" Center="200,200" />
							</ItemsControl.Clip>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<controls:CircularMenuItem Angle="{Binding Angle}" BackgroundColor="{Binding Path=(ItemsControl.AlternationIndex),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource indexToColor}}" MenuTxt="{Binding MenuTxt}" IconImage="{Binding IconImage}" />
								</DataTemplate>
							</ItemsControl.ItemTemplate>
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<controls:SmallPanel />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
						</ItemsControl>
						<ToggleButton x:Name="PART_ToggleButton" Cursor="Hand">
							<ToggleButton.Template>
								<ControlTemplate TargetType="ToggleButton">
									<controls:SmallPanel>
										<Ellipse x:Name="PART_Ellipse" Width="100" Height="100" Fill="{StaticResource PrimaryNormalSolidColorBrush}" ToolTip="关闭" />
										<Path x:Name="PART_Path" Data="{StaticResource PathAdd}" Fill="{StaticResource BackgroundSolidColorBrush}" Stretch="Fill" Width="20" Height="20" RenderTransformOrigin="0.5,0.5" IsHitTestVisible="False" />
									</controls:SmallPanel>
									<ControlTemplate.Triggers>
										<Trigger Property="IsChecked" Value="false">
											<Setter TargetName="PART_Path" Property="RenderTransform">
												<Setter.Value>
													<RotateTransform Angle="45" />
												</Setter.Value>
											</Setter>
											<Setter Property="ToolTip" TargetName="PART_Ellipse" Value="展开" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</ToggleButton.Template>
						</ToggleButton>
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:CircularProgressBar}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Maximum" Value="100" />
		<Setter Property="StrokeThickness" Value="10" />
		<Setter Property="Foreground" Value="{DynamicResource InfoSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<!--<Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="100"/>-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:CircularProgressBar}">
					<controls:SmallPanel Width="{Binding ElementName=PART_Path,Path=ActualWidth}" Height="{Binding ElementName=PART_Path,Path=ActualHeight}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
						<Canvas>
							<Path Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BrushStrokeThickness}" x:Name="PART_Path">
								<Path.Data>
									<PathGeometry>
										<PathFigure x:Name="PART_PathFigure">
											<ArcSegment SweepDirection="Clockwise" IsLargeArc="True" x:Name="PART_ArcSegment" />
										</PathFigure>
									</PathGeometry>
								</Path.Data>
							</Path>
							<Path Stroke="{TemplateBinding Background}" StrokeThickness="{TemplateBinding StrokeThickness}">
								<Path.Data>
									<PathGeometry>
										<PathFigure x:Name="PART_PathFigureAngle">
											<ArcSegment SweepDirection="Clockwise" IsLargeArc="{Binding Path=Angle, Converter={StaticResource isLargeConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=ProgressBar}}" x:Name="PART_ArcSegmentAngle">
												<ArcSegment.Point>
													<MultiBinding Converter="{StaticResource prConverter}">
														<Binding Path="Angle" RelativeSource="{RelativeSource FindAncestor, AncestorType=ProgressBar}" />
														<Binding Path="Size" RelativeSource="{RelativeSource FindAncestor, AncestorType=ProgressBar}" />
													</MultiBinding>
												</ArcSegment.Point>
											</ArcSegment>
										</PathFigure>
									</PathGeometry>
								</Path.Data>
							</Path>
						</Canvas>
						<TextBlock Foreground="{TemplateBinding Foreground}" Text="{Binding Path=Value, StringFormat={}{0}%, &#xD;&#xA;                                RelativeSource={RelativeSource TemplatedParent}}" FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="PART_TextBlock" />
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:CropControl}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:CropControl}">
					<UniformGrid Rows="{TemplateBinding RowColumn}" Columns="{TemplateBinding RowColumn}" x:Name="PART_UniformGrid" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="BottomThumbStyle" TargetType="Thumb" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Thumb">
					<Ellipse Height="10" Width="10" Fill="{StaticResource PrimaryNormalSolidColorBrush}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:DragDrop}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:DragDrop}">
					<DockPanel>
						<Canvas DockPanel.Dock="Bottom">
							<Thumb x:Name="PART_RectRightBottom" Width="20" Height="20" Style="{StaticResource BottomThumbStyle}" Canvas.Right="-10" Canvas.Bottom="-10" Cursor="SizeNWSE" />
						</Canvas>
						<Thumb x:Name="PART_Rect" Opacity=".4" Background="#45000000" Cursor="SizeAll" />
					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:CutImage}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:CutImage}">
					<controls:SmallPanel>
						<Border x:Name="PART_BorderPanel">
							<Canvas x:Name="DrawCanvas" VerticalAlignment="Center" Background="Transparent" Width="{Binding ElementName=PART_BorderPanel,Path=ActualWidth}" Height="{Binding ElementName=PART_BorderPanel,Path=ActualHeight}">
								<Rectangle x:Name="PART_RectImage" VerticalAlignment="Center" HorizontalAlignment="Center" Width="{Binding ElementName=PART_BorderPanel,Path=ActualWidth}" Height="{Binding ElementName=PART_BorderPanel,Path=ActualHeight}">
									<Rectangle.Fill>
										<ImageBrush ImageSource="{Binding ImageSource,RelativeSource={RelativeSource AncestorType={x:Type controls:CutImage}}}" />
									</Rectangle.Fill>
								</Rectangle>
								<Rectangle VerticalAlignment="Center" HorizontalAlignment="Center" Width="{Binding ElementName=PART_RectImage,Path=ActualWidth}" Height="{Binding ElementName=PART_RectImage,Path=ActualHeight}" Fill="#99000000" />
								<Rectangle VerticalAlignment="Center" HorizontalAlignment="Center" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
									<Rectangle.Fill>
										<ImageBrush ImageSource="{Binding ImageSource,RelativeSource={RelativeSource AncestorType={x:Type controls:CutImage}}}" />
									</Rectangle.Fill>
									<Rectangle.Clip>
										<RectangleGeometry x:Name="PART_RectangleGeometry" Rect="{TemplateBinding CutRect}" />
									</Rectangle.Clip>
								</Rectangle>
								<controls:DragDrop x:Name="PART_DragDrop" Width="{Binding CutRect.Width,RelativeSource={RelativeSource AncestorType={x:Type controls:CutImage}}}" Height="{Binding CutRect.Height,RelativeSource={RelativeSource AncestorType={x:Type controls:CutImage}}}" Canvas.Left="{Binding CutRect.X,RelativeSource={RelativeSource AncestorType={x:Type controls:CutImage}}}" Canvas.Top="{Binding CutRect.Y,RelativeSource={RelativeSource AncestorType={x:Type controls:CutImage}}}" ParentMaxHeight="{Binding ElementName=DrawCanvas,Path=ActualHeight}" ParentMaxWidth="{Binding ElementName=DrawCanvas,Path=ActualWidth}" Visibility="Collapsed" />
							</Canvas>
						</Border>
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:Dashboard}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Maximum" Value="100" />
		<Setter Property="Background" Value="#252525" />
		<Setter Property="Width" Value="200" />
		<Setter Property="Height" Value="200" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:Dashboard}">
					<Viewbox>
						<controls:SmallPanel Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5">
							<controls:SmallPanel.RenderTransform>
								<TransformGroup>
									<RotateTransform Angle="-90" />
								</TransformGroup>
							</controls:SmallPanel.RenderTransform>
							<ed:Arc ArcThickness="8" ArcThicknessUnit="Pixel" Fill="White" RenderTransformOrigin="0.5,0.5" StartAngle="0" EndAngle="180" Stretch="None" Margin="10" />
							<ed:Arc x:Name="PART_PathBackground" Margin="24" ArcThickness="0" ArcThicknessUnit="Pixel" EndAngle="180" StartAngle="0" Stretch="None" />
							<ed:Arc ArcThickness="8" ArcThicknessUnit="Pixel" Fill="{StaticResource NormalBrush}" StartAngle="0" EndAngle="{Binding Angle, RelativeSource={RelativeSource FindAncestor, AncestorType=ProgressBar}}" Stretch="None" Margin="10" />
							<ec:PathListBox IsHitTestVisible="False" ItemsSource="{Binding ScaleArray,RelativeSource={RelativeSource FindAncestor,AncestorType=ProgressBar}}">
								<ec:PathListBox.ItemTemplate>
									<DataTemplate>
										<Border Width="2" Height="8" Background="{Binding Background}" SnapsToDevicePixels="True" UseLayoutRounding="True" />
									</DataTemplate>
								</ec:PathListBox.ItemTemplate>
								<ec:PathListBox.LayoutPaths>
									<ec:LayoutPath Distribution="Even" Orientation="OrientToPath" SourceElement="{Binding ElementName=PART_PathBackground}" />
								</ec:PathListBox.LayoutPaths>
							</ec:PathListBox>
							<Border RenderTransformOrigin="0.5,0.5" Margin="30,0,0,0">
								<Border.RenderTransform>
									<TransformGroup>
										<RotateTransform Angle="90" />
									</TransformGroup>
								</Border.RenderTransform>
								<TextBlock Foreground="{StaticResource NormalBrush}" FontSize="40" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Path=Value, StringFormat={}{0}%, &#xD;&#xA;                                                    RelativeSource={RelativeSource TemplatedParent}}" FontWeight="Bold" FontFamily="Agency FB" />
							</Border>
						</controls:SmallPanel>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DrawingControlItem" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Border SnapsToDevicePixels="True">
						<ContentPresenter />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{x:Null}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="controls:DrawingControl" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{x:Null}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Foreground" Value="{StaticResource PrimaryTextSolidColorBrush}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource DrawingControlItem}" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<controls:DrawingPanel x:Name="PART_DrawingPanel" Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:DrawingControl}, Path=PanelBackground, Mode=TwoWay}" CornerRadius="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:DrawingControl}, Path=PanelCornerRadius, Mode=TwoWay}" BorderThickness="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:DrawingControl}, Path=PanelBorderThinckness, Mode=TwoWay}" BorderBrush="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:DrawingControl}, Path=PanelBorderBrush, Mode=TwoWay}" Offset="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:DrawingControl}, Path=ItemOffset, Mode=TwoWay}" Mode="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:DrawingControl}, Path=PanelDrawingMode, Mode=TwoWay}" StartOffsetAngle="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:DrawingControl}, Path=PanelStartAngleOffset, Mode=TwoWay}" MultipleArrayDescription="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:DrawingControl}, Path=PanelMultipleDescription, Mode=TwoWay}" LayerSpace="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:DrawingControl}, Path=PanelMultipleSpace, Mode=TwoWay}" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<!--<Setter Property="ItemContainerStyle" Value="{StaticResource DrawingElementStyle}"/>-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:DrawingControl}">
					<Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="0" SnapsToDevicePixels="true">
						<controls:SmallPanel>
							<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</ScrollViewer>
							<Border x:Name="PART_InnerBorder" VerticalAlignment="Center" HorizontalAlignment="Center" Background="{TemplateBinding InnerBackground}" BorderBrush="{TemplateBinding InnerBorderBrush}" BorderThickness="{TemplateBinding InnerBorderThickness}" CornerRadius="{TemplateBinding InnerCornerRadius}" Padding="3">
								<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
							</Border>
						</controls:SmallPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" Value="0.4" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsGrouping" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:EdgeLight}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Padding" Value="20" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:EdgeLight}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="EdgeLightStoryboard">
							<DoubleAnimation Duration="00:00:0.5" To="1" Storyboard.TargetName="PART_Top" Storyboard.TargetProperty="ScaleX" />
							<DoubleAnimation Duration="00:00:0.5" BeginTime="00:00:0.5" To="1" Storyboard.TargetName="PART_Right" Storyboard.TargetProperty="ScaleY" />
							<DoubleAnimation Duration="00:00:.5" BeginTime="00:00:01" To="1" Storyboard.TargetName="PART_Bottom" Storyboard.TargetProperty="ScaleX" />
							<DoubleAnimation Duration="00:00:.5" BeginTime="00:00:01.5" To="1" Storyboard.TargetName="PART_Left" Storyboard.TargetProperty="ScaleY" />
						</Storyboard>
					</ControlTemplate.Resources>
					<controls:SmallPanel>
						<DockPanel LastChildFill="False">
							<Rectangle DockPanel.Dock="Top" Height="{TemplateBinding LineSize}" Fill="{TemplateBinding BorderBrush}">
								<Rectangle.RenderTransform>
									<ScaleTransform x:Name="PART_Top" ScaleX="0" />
								</Rectangle.RenderTransform>
							</Rectangle>
							<Rectangle DockPanel.Dock="Right" Width="{TemplateBinding LineSize}" Fill="{TemplateBinding BorderBrush}">
								<Rectangle.RenderTransform>
									<ScaleTransform x:Name="PART_Right" ScaleY="0" />
								</Rectangle.RenderTransform>
							</Rectangle>
							<Rectangle DockPanel.Dock="Bottom" Height="{TemplateBinding LineSize}" Fill="{TemplateBinding BorderBrush}" RenderTransformOrigin="1,1">
								<Rectangle.RenderTransform>
									<ScaleTransform x:Name="PART_Bottom" ScaleX="0" />
								</Rectangle.RenderTransform>
							</Rectangle>
							<Rectangle DockPanel.Dock="Left" Width="{TemplateBinding LineSize}" Fill="{TemplateBinding BorderBrush}" RenderTransformOrigin="1,1">
								<Rectangle.RenderTransform>
									<ScaleTransform x:Name="PART_Left" ScaleY="0" />
								</Rectangle.RenderTransform>
							</Rectangle>
						</DockPanel>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsAnimation" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="beginAnimation" Storyboard="{StaticResource EdgeLightStoryboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="beginAnimation" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:StreamerLoading}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Width" Value="100" />
		<Setter Property="Height" Value="100" />
		<Setter Property="Background">
			<Setter.Value>
				<SolidColorBrush Color="{DynamicResource PrimaryNormalColor}" />
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:StreamerLoading}">
					<Rectangle x:Name="PART_Rectangle" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="3">
						<Rectangle.Stroke>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity=".6">
								<GradientStop Color="Transparent" Offset="0" />
								<GradientStop Color="{Binding Path=Background.Color, RelativeSource={RelativeSource TemplatedParent}}" Offset="1" />
							</LinearGradientBrush>
						</Rectangle.Stroke>
					</Rectangle>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Loaded">
							<BeginStoryboard>
								<Storyboard RepeatBehavior="Forever">
									<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(LinearGradientBrush.StartPoint)" Storyboard.TargetName="PART_Rectangle">
										<EasingPointKeyFrame KeyTime="0:0:0.5" Value="0.855,0.148" />
										<EasingPointKeyFrame KeyTime="0:0:1" Value="0.852,0.855" />
										<EasingPointKeyFrame KeyTime="0:0:1.5" Value="0.148,0.855" />
										<EasingPointKeyFrame KeyTime="0:0:2" Value="0.144,0.149" />
										<EasingPointKeyFrame KeyTime="0:0:2.5" Value="0,0" />
									</PointAnimationUsingKeyFrames>
									<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(LinearGradientBrush.EndPoint)" Storyboard.TargetName="PART_Rectangle">
										<EasingPointKeyFrame KeyTime="0:0:0.5" Value="0.145,0.852" />
										<EasingPointKeyFrame KeyTime="0:0:1" Value="0.148,0.145" />
										<EasingPointKeyFrame KeyTime="0:0:1.5" Value="0.852,0.145" />
										<EasingPointKeyFrame KeyTime="0:0:2" Value="0.856,0.851" />
										<EasingPointKeyFrame KeyTime="0:0:2.5" Value="0,1" />
									</PointAnimationUsingKeyFrames>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:WaitLoading}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:WaitLoading}">
					<Canvas Width="100" Height="20">
						<Ellipse x:Name="PART_RedEllipase" Canvas.Left="0" Height="20" Width="20" Fill="{StaticResource DangerSolidColorBrush}" />
						<Ellipse x:Name="PART_GreenEllipase" Canvas.Left="50" Height="20" Width="20" Fill="{StaticResource SuccessSolidColorBrush}" />
						<Ellipse x:Name="PART_OrangeEllipase" Canvas.Left="100" Height="20" Width="20" Fill="{StaticResource WarningSolidColorBrush}" />
					</Canvas>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Loaded">
							<BeginStoryboard>
								<Storyboard RepeatBehavior="Forever">
									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Left)" Storyboard.TargetName="PART_RedEllipase">
										<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="50" EasingFunction="{StaticResource PowerEaseInOut}" />
										<EasingDoubleKeyFrame KeyTime="0:0:1" Value="100" EasingFunction="{StaticResource PowerEaseInOut}" />
										<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="50" EasingFunction="{StaticResource PowerEaseInOut}" />
										<EasingDoubleKeyFrame KeyTime="0:0:2" Value="50" />
										<EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="50" />
										<EasingDoubleKeyFrame KeyTime="0:0:3" Value="0" EasingFunction="{StaticResource PowerEaseInOut}" />
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Left)" Storyboard.TargetName="PART_GreenEllipase">
										<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="50" />
										<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0" EasingFunction="{StaticResource PowerEaseInOut}" />
										<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="50" EasingFunction="{StaticResource PowerEaseInOut}" />
										<EasingDoubleKeyFrame KeyTime="0:0:2" Value="50" EasingFunction="{StaticResource PowerEaseInOut}" />
										<EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="50" EasingFunction="{StaticResource PowerEaseInOut}" />
										<EasingDoubleKeyFrame KeyTime="0:0:3" Value="50" />
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Left)" Storyboard.TargetName="PART_OrangeEllipase">
										<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="50" EasingFunction="{StaticResource PowerEaseInOut}" />
										<EasingDoubleKeyFrame KeyTime="0:0:1" Value="50" />
										<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="50" />
										<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0" EasingFunction="{StaticResource PowerEaseInOut}" />
										<EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="50" EasingFunction="{StaticResource PowerEaseInOut}" />
										<EasingDoubleKeyFrame KeyTime="0:0:3" Value="100" EasingFunction="{StaticResource PowerEaseInOut}" />
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:CycleLoading}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Foreground" Value="White" />
		<Setter Property="FontSize" Value="30" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:CycleLoading}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard_LoadRunning" RepeatBehavior="Forever" SpeedRatio="2">
							<DoubleAnimation Duration="0:0:5" BeginTime="0" From="0" To="360" Storyboard.TargetName="Part_Cycle_Rotate" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" />
							<DoubleAnimation Duration="0:0:5" BeginTime="0" From="0" To="360" Storyboard.TargetName="Part_Cycle_Rotate1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" />
						</Storyboard>
					</ControlTemplate.Resources>
					<controls:SmallPanel>
						<Viewbox>
							<controls:SmallPanel Width="400" Height="400">
								<controls:SmallPanel x:Name="Part_Cycle_Rotate1" RenderTransformOrigin="0.5,0.5">
									<controls:SmallPanel.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform />
											<TranslateTransform />
										</TransformGroup>
									</controls:SmallPanel.RenderTransform>
									<Ellipse Margin="0,50,0,50">
										<Ellipse.Fill>
											<LinearGradientBrush>
												<GradientStop Color="White" Offset="0" />
												<GradientStop Color="White" Offset="1" />
											</LinearGradientBrush>
										</Ellipse.Fill>
										<Ellipse.Effect>
											<BlurEffect Radius="40" />
										</Ellipse.Effect>
									</Ellipse>
									<Ellipse Margin="50,0,50,0">
										<Ellipse.Fill>
											<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
												<GradientStop Color="White" Offset="0.4" />
												<GradientStop Color="White" Offset="1" />
											</LinearGradientBrush>
										</Ellipse.Fill>
										<Ellipse.Effect>
											<BlurEffect Radius="40" />
										</Ellipse.Effect>
									</Ellipse>
								</controls:SmallPanel>
								<controls:SmallPanel x:Name="Part_Cycle_Rotate" RenderTransformOrigin="0.5,0.5">
									<controls:SmallPanel.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform />
											<TranslateTransform />
										</TransformGroup>
									</controls:SmallPanel.RenderTransform>
									<Ellipse Margin="0,50,0,50">
										<Ellipse.Fill>
											<LinearGradientBrush>
												<GradientStop Color="#d495f1" Offset="0" />
												<GradientStop Color="#87d3f7" Offset="1" />
											</LinearGradientBrush>
										</Ellipse.Fill>
										<Ellipse.Effect>
											<BlurEffect Radius="15" />
										</Ellipse.Effect>
									</Ellipse>
									<Ellipse Margin="50,0,50,0">
										<Ellipse.Fill>
											<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
												<GradientStop Color="#f173ac" Offset="0" />
												<GradientStop Color="#33a3dc" Offset="1" />
											</LinearGradientBrush>
										</Ellipse.Fill>
										<Ellipse.Effect>
											<BlurEffect Radius="15" />
										</Ellipse.Effect>
									</Ellipse>
								</controls:SmallPanel>
								<Ellipse Margin="33" Fill="Black">
									<Ellipse.Effect>
										<DropShadowEffect BlurRadius="20" ShadowDepth="0" Color="White" />
									</Ellipse.Effect>
								</Ellipse>
							</controls:SmallPanel>
						</Viewbox>
						<Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<TextBlock Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" Text="{TemplateBinding LoadTitle}" />
							<ContentPresenter Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentStringFormat="{TemplateBinding ContentStringFormat}" />
							<TextBlock Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="15" Text="{TemplateBinding ValueDescription}" />
						</Grid>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsStart" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource Storyboard_LoadRunning}" x:Name="Storyboard_LoadRunning" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="Storyboard_LoadRunning" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:RollLoading}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="ForegroundColor" Value="{StaticResource DangerColor}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:RollLoading}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="RollKey" RepeatBehavior="Forever">
							<DoubleAnimation Duration="0:0:5" BeginTime="0" From="0" To="360" RepeatBehavior="Forever" SpeedRatio="2" Storyboard.TargetName="PART_Border1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" />
							<DoubleAnimation Duration="0:0:5" BeginTime="0" From="0" To="360" RepeatBehavior="Forever" SpeedRatio="4" Storyboard.TargetName="PART_Border2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" />
							<DoubleAnimation Duration="0:0:5" BeginTime="0" From="0" To="360" RepeatBehavior="Forever" SpeedRatio="6" Storyboard.TargetName="PART_Border3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" />
							<DoubleAnimation Duration="0:0:5" BeginTime="0" From="0" To="360" RepeatBehavior="Forever" SpeedRatio="8" Storyboard.TargetName="PART_Border4" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" />
							<DoubleAnimation Duration="0:0:5" BeginTime="0" From="0" To="360" RepeatBehavior="Forever" SpeedRatio="10" Storyboard.TargetName="PART_Border5" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" />
							<DoubleAnimation Duration="0:0:5" BeginTime="0" From="0" To="360" RepeatBehavior="Forever" SpeedRatio="12" Storyboard.TargetName="PART_Border6" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" />
							<DoubleAnimation Duration="0:0:5" BeginTime="0" From="0" To="360" RepeatBehavior="Forever" SpeedRatio="14" Storyboard.TargetName="PART_Border7" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" />
							<DoubleAnimation Duration="0:0:5" BeginTime="0" From="0" To="360" RepeatBehavior="Forever" SpeedRatio="16" Storyboard.TargetName="PART_Border8" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" />
							<ColorAnimationUsingKeyFrames Duration="0:0:5" Storyboard.TargetProperty="ForegroundColor" RepeatBehavior="Forever">
								<EasingColorKeyFrame KeyTime="0:0:0" Value="Red" EasingFunction="{StaticResource PowerEaseInOut}" />
								<EasingColorKeyFrame KeyTime="0:0:1" Value="Blue" EasingFunction="{StaticResource PowerEaseInOut}" />
								<EasingColorKeyFrame KeyTime="0:0:2" Value="Yellow" EasingFunction="{StaticResource PowerEaseInOut}" />
								<EasingColorKeyFrame KeyTime="0:0:3" Value="Green" EasingFunction="{StaticResource PowerEaseInOut}" />
								<EasingColorKeyFrame KeyTime="0:0:4" Value="Aqua" EasingFunction="{StaticResource PowerEaseInOut}" />
								<EasingColorKeyFrame KeyTime="0:0:5" Value="Red" EasingFunction="{StaticResource PowerEaseInOut}" />
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Viewbox>
							<controls:SmallPanel>
								<Border x:Name="PART_Border1" Width="160" Height="160" BorderThickness="0,5,0,0" CornerRadius="80" RenderTransformOrigin="0.5,0.5">
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<LinearGradientBrush.GradientStops>
												<GradientStop Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundColor}" Offset="0.5" />
												<GradientStop Color="Transparent" Offset="0.5" />
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.BorderBrush>
									<Border.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform />
											<TranslateTransform />
										</TransformGroup>
									</Border.RenderTransform>
								</Border>
								<Border x:Name="PART_Border2" Width="140" Height="140" BorderThickness="0,5,0,0" CornerRadius="70" RenderTransformOrigin="0.5,0.5">
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<LinearGradientBrush.GradientStops>
												<GradientStop Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundColor}" Offset="0.5" />
												<GradientStop Color="Transparent" Offset="0.5" />
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.BorderBrush>
									<Border.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform />
											<TranslateTransform />
										</TransformGroup>
									</Border.RenderTransform>
								</Border>
								<Border x:Name="PART_Border3" Width="120" Height="120" BorderThickness="0,5,0,0" CornerRadius="60" RenderTransformOrigin="0.5,0.5">
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<LinearGradientBrush.GradientStops>
												<GradientStop Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundColor}" Offset="0.5" />
												<GradientStop Color="Transparent" Offset="0.5" />
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.BorderBrush>
									<Border.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform />
											<TranslateTransform />
										</TransformGroup>
									</Border.RenderTransform>
								</Border>
								<Border x:Name="PART_Border4" Width="100" Height="100" BorderThickness="0,5,0,0" CornerRadius="50" RenderTransformOrigin="0.5,0.5">
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<LinearGradientBrush.GradientStops>
												<GradientStop Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundColor}" Offset="0.5" />
												<GradientStop Color="Transparent" Offset="0.5" />
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.BorderBrush>
									<Border.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform />
											<TranslateTransform />
										</TransformGroup>
									</Border.RenderTransform>
								</Border>
								<Border x:Name="PART_Border5" Width="80" Height="80" BorderThickness="0,5,0,0" CornerRadius="40" RenderTransformOrigin="0.5,0.5">
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<LinearGradientBrush.GradientStops>
												<GradientStop Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundColor}" Offset="0.5" />
												<GradientStop Color="Transparent" Offset="0.5" />
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.BorderBrush>
									<Border.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform />
											<TranslateTransform />
										</TransformGroup>
									</Border.RenderTransform>
								</Border>
								<Border x:Name="PART_Border6" Width="60" Height="60" BorderThickness="0,5,0,0" CornerRadius="30" RenderTransformOrigin="0.5,0.5">
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<LinearGradientBrush.GradientStops>
												<GradientStop Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundColor}" Offset="0.5" />
												<GradientStop Color="Transparent" Offset="0.5" />
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.BorderBrush>
									<Border.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform />
											<TranslateTransform />
										</TransformGroup>
									</Border.RenderTransform>
								</Border>
								<Border x:Name="PART_Border7" Width="40" Height="40" BorderThickness="0,5,0,0" CornerRadius="20" RenderTransformOrigin="0.5,0.5">
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<LinearGradientBrush.GradientStops>
												<GradientStop Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundColor}" Offset="0.5" />
												<GradientStop Color="Transparent" Offset="0.5" />
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.BorderBrush>
									<Border.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform />
											<TranslateTransform />
										</TransformGroup>
									</Border.RenderTransform>
								</Border>
								<Border x:Name="PART_Border8" Width="20" Height="20" BorderThickness="0,5,0,0" CornerRadius="10" RenderTransformOrigin="0.5,0.5">
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<LinearGradientBrush.GradientStops>
												<GradientStop Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundColor}" Offset="0.5" />
												<GradientStop Color="Transparent" Offset="0.5" />
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.BorderBrush>
									<Border.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform />
											<TranslateTransform />
										</TransformGroup>
									</Border.RenderTransform>
								</Border>
							</controls:SmallPanel>
						</Viewbox>
						<ContentPresenter Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsStart" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="Roll_Storyboard" Storyboard="{StaticResource RollKey}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="Roll_Storyboard" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="controls:RingLoading" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:RingLoading">
					<ControlTemplate.Resources>
						<Storyboard x:Key="PART_Resource_Storyboard" RepeatBehavior="Forever">
							<DoubleAnimation To="-495" Duration="0:0:1.5" Storyboard.TargetName="PART_Ring1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" />
							<DoubleAnimation To="585" Duration="0:0:1.5" Storyboard.TargetName="PART_Ring2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" />
							<DoubleAnimation To="-315" Duration="0:0:1.5" Storyboard.TargetName="PART_Ring3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" />
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Viewbox HorizontalAlignment="Center" VerticalAlignment="Center">
							<Border Padding="10" Width="100" Height="100">
								<controls:SmallPanel>
									<controls:SmallPanel x:Name="PART_Ring1" Width="60" Height="60" HorizontalAlignment="Center" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
										<controls:SmallPanel.RenderTransform>
											<TransformGroup>
												<ScaleTransform />
												<SkewTransform />
												<RotateTransform Angle="-135" />
												<TranslateTransform />
											</TransformGroup>
										</controls:SmallPanel.RenderTransform>
										<Ellipse Stroke="Red" StrokeThickness="2" StrokeDashArray="23 100" RenderTransformOrigin="0.5,0.5" />
										<Border Width="10" Height="10" CornerRadius="10" Background="Red" HorizontalAlignment="Right" Margin="0,0,-4,0">
											<Border.Effect>
												<DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="Red" />
											</Border.Effect>
										</Border>
									</controls:SmallPanel>
									<controls:SmallPanel x:Name="PART_Ring2" Width="60" Height="60" HorizontalAlignment="Left" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5">
										<controls:SmallPanel.RenderTransform>
											<TransformGroup>
												<ScaleTransform />
												<SkewTransform />
												<RotateTransform Angle="225" />
												<TranslateTransform />
											</TransformGroup>
										</controls:SmallPanel.RenderTransform>
										<Ellipse Stroke="Purple" StrokeThickness="2" StrokeDashArray="23 100" />
										<Border Width="10" Height="10" CornerRadius="10" Background="Purple" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,-4">
											<Border.Effect>
												<DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="Purple" />
											</Border.Effect>
										</Border>
									</controls:SmallPanel>
									<controls:SmallPanel x:Name="PART_Ring3" Width="60" Height="60" HorizontalAlignment="Right" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5">
										<controls:SmallPanel.RenderTransform>
											<TransformGroup>
												<ScaleTransform />
												<SkewTransform />
												<RotateTransform Angle="45" />
												<TranslateTransform />
											</TransformGroup>
										</controls:SmallPanel.RenderTransform>
										<Ellipse Stroke="#0fb8b2" StrokeThickness="2" StrokeDashArray="23 100" />
										<Border Width="10" Height="10" CornerRadius="10" Background="#0fb8b2" HorizontalAlignment="Right" Margin="0,0,-4,0">
											<Border.Effect>
												<DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="#0fb8b2" />
											</Border.Effect>
										</Border>
									</controls:SmallPanel>
								</controls:SmallPanel>
							</Border>
						</Viewbox>
						<StackPanel Grid.Row="1" Grid.ColumnSpan="2" Margin="10">
							<TextBlock HorizontalAlignment="Center" Text="Loading..." Margin="0,0,0,15" />
							<TextBlock HorizontalAlignment="Center" Text="{TemplateBinding Description}" Margin="0,0,0,15" />
							<TextBlock HorizontalAlignment="Center" Text="{TemplateBinding Progress}" FontSize="{StaticResource TitleFontSize}" FontWeight="Bold" />
						</StackPanel>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsStart" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource PART_Resource_Storyboard}" x:Name="PART_BeginStoryboard" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="PART_BeginStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="NavigateMenuLeft" TargetType="{x:Type controls:NavigateMenu}">
		<Grid>
			<ListBox ItemsSource="{TemplateBinding ItemsSource}" x:Name="PART_ListBox" Background="Transparent" BorderThickness="0" SelectedItem="{Binding SelectedItem,RelativeSource={RelativeSource AncestorType={x:Type controls:NavigateMenu}}}" SelectedIndex="{Binding SelectedIndex,RelativeSource={RelativeSource AncestorType={x:Type controls:NavigateMenu}}}" ScrollViewer.VerticalScrollBarVisibility="Hidden">
				<ListBox.ItemTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding Content}" TextTrimming="CharacterEllipsis" />
					</DataTemplate>
				</ListBox.ItemTemplate>
				<ListBox.ItemContainerStyle>
					<Style TargetType="ListBoxItem" BasedOn="{x:Null}">
						<Setter Property="VerticalContentAlignment" Value="Center" />
						<Setter Property="Cursor" Value="Hand" />
						<Setter Property="Padding" Value="10,8" />
						<Setter Property="Foreground" Value="{DynamicResource PrimaryTextSolidColorBrush}" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ListBoxItem}">
									<Border x:Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
										<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsSelected" Value="True">
											<Setter Property="Background" Value="{DynamicResource DefaultBackgroundSolidColorBrush}" />
											<Setter Property="Foreground" Value="{DynamicResource PrimaryPressedSolidColorBrush}" />
										</Trigger>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter Property="Foreground" Value="{DynamicResource PrimaryMouseOverSolidColorBrush}" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</ListBox.ItemContainerStyle>
			</ListBox>
			<Rectangle x:Name="PART_RectangleSlider" Height="{TemplateBinding Height}" Fill="{DynamicResource LighterSolidColorBrush}" Width="3" HorizontalAlignment="Right" />
			<Rectangle Width="3" Height="35" Fill="{DynamicResource PrimaryNormalSolidColorBrush}" VerticalAlignment="Top" HorizontalAlignment="Right">
				<Rectangle.RenderTransform>
					<TranslateTransform x:Name="PART_TranslateTransform" />
				</Rectangle.RenderTransform>
			</Rectangle>
		</Grid>
	</ControlTemplate>
	<Style x:Key="NavigateMenuItem" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Padding" Value="10,8" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryTextSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border x:Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Foreground" Value="{DynamicResource PrimaryPressedSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" Value="{DynamicResource PrimaryMouseOverSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="NavigateMenuTop" TargetType="{x:Type controls:NavigateMenu}">
		<Grid>
			<Rectangle x:Name="PART_RectangleSlider" Width="{TemplateBinding Width}" Fill="{DynamicResource LighterSolidColorBrush}" Height="3" VerticalAlignment="Bottom" />
			<Rectangle Width="{TemplateBinding RectangleSelectWidth}" Height="3" Fill="{DynamicResource PrimaryNormalSolidColorBrush}" VerticalAlignment="Bottom" HorizontalAlignment="Left">
				<Rectangle.RenderTransform>
					<TranslateTransform x:Name="PART_TranslateTransform" />
				</Rectangle.RenderTransform>
			</Rectangle>
			<ItemsPresenter />
			<!--<ListBox ItemsSource="{TemplateBinding ItemsSource}" 
                                 x:Name="PART_ListBox"
                                 Background="Transparent" BorderThickness="0"
                                 SelectedItem="{Binding SelectedItem,RelativeSource={RelativeSource AncestorType={x:Type controls:NavigateMenu}}}"
                                 SelectedIndex="{Binding SelectedIndex,RelativeSource={RelativeSource AncestorType={x:Type controls:NavigateMenu}}}"
                                 ScrollViewer.VerticalScrollBarVisibility="Hidden">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Content}" TextTrimming="CharacterEllipsis"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Padding" Value="10,8"/>
                        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextSolidColorBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        Padding="{TemplateBinding Padding}" 
                                        SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryPressedSolidColorBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryMouseOverSolidColorBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>-->
		</Grid>
	</ControlTemplate>
	<Style TargetType="{x:Type controls:NavigateMenu}" BasedOn="{StaticResource ControlBasicStyle}">
		<Style.Triggers>
			<Trigger Property="TabStripPlacement" Value="Left">
				<Setter Property="Template" Value="{StaticResource NavigateMenuLeft}" />
			</Trigger>
			<Trigger Property="TabStripPlacement" Value="Top">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel Orientation="Horizontal" />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Template" Value="{StaticResource NavigateMenuTop}" />
			</Trigger>
			<!--<Trigger Property="LampEffect" Value="OuterGlow">
                <Setter Property="Template" Value="{StaticResource LampEffect_OuterGlow}"/>
            </Trigger>

            <Trigger Property="LampEffect" Value="Streamer">
                <Setter Property="Template" Value="{StaticResource LampEffect_Streamer}"/>
            </Trigger>-->
		</Style.Triggers>
	</Style>
	<Style TargetType="controls:FireControl">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:FireControl">
					<ControlTemplate.Resources>
						<Storyboard x:Key="PART_Fire_Storyboard" RepeatBehavior="Forever" Duration="0:0:0.1">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Container" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)">
								<LinearDoubleKeyFrame Value="-1" KeyTime="0:0:0" />
								<LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.2" />
								<LinearDoubleKeyFrame Value="-1" KeyTime="0:0:0.4" />
								<LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.6" />
								<LinearDoubleKeyFrame Value="-1" KeyTime="0:0:0.8" />
								<LinearDoubleKeyFrame Value="1" KeyTime="0:0:1" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Container" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)">
								<LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.0" />
								<LinearDoubleKeyFrame Value="1.3" KeyTime="0:0:0.2" />
								<LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.4" />
								<LinearDoubleKeyFrame Value="1.3" KeyTime="0:0:0.5" />
								<LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.8" />
								<LinearDoubleKeyFrame Value="1.3" KeyTime="0:0:1" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Viewbox>
						<controls:SmallPanel x:Name="PART_Container" Width="50" Height="50" RenderTransformOrigin="0,1">
							<controls:SmallPanel.RenderTransform>
								<TransformGroup>
									<RotateTransform CenterX="25" CenterY="25" />
									<ScaleTransform />
								</TransformGroup>
							</controls:SmallPanel.RenderTransform>
							<controls:SmallPanel VerticalAlignment="Bottom">
								<Path HorizontalAlignment="Center" VerticalAlignment="Bottom" Stretch="Uniform" Height="50" Fill="OrangeRed" Data="M563.308448 313.43188C495.439988 103.734035 591.338282 0 591.338282 0S276.514483 151.316058 183.199572 559.143951c-39.235011-56.442559-73.469923-87.328305-69.571197-77.222249 42.108942 109.060717-53.057357 157.906279-51.793818 272.879275 1.281557 114.954978 199.722422 246.534159 199.722422 246.53416l0.054055-0.164418a291.39766 291.39766 0 0 0 24.716706 16.349423 384.906268 384.906268 0 0 1-20.761672-26.948732c-21.511687-30.70331-36.61559-63.089087-36.964696-94.303668-0.677941-61.589057 26.252772-104.20927 44.982872-147.2867 16.23906-37.311549 26.345116-74.972205 6.810946-125.592576-3.076637-7.964122 17.63098 9.630821 45.750906 45.111254 54.850185-148.770963 108.878281-277.676668 108.878281-277.676668s1.391919 202.504009 70.028413 332.270091c64.424699 121.801961 60.56201 184.361758 60.56201 184.361757 117.189257-112.026992 156.385979-290.053039 156.385979-290.053039 42.602195 37.568311 67.098175 85.314752 80.884484 133.263899 29.036611 100.932178-30.95782 202.375628-32.295685 212.188885-0.567579 4.083414-1.610392 7.889796-2.488788 11.790774-4.101433 18.417031-11.479957 34.876817-21.640068 49.359086 11.00247-6.993382 21.439614-14.700741 31.489362-22.8473l0.054055 0.164418s182.895512-131.579181 184.159051-246.552178c1.263539-114.954978-93.900507-163.80054-51.793818-272.879275 3.644216-9.446133-24.185163 16.842676-57.724115 66.440504-33.210117-102.432208-54.485313-185.222135-165.46724-283.113712 0 0 20.522929 222.680084-97.434361 383.917509 0.020271 0.047298 41.451271-125.984476-26.435208-335.702591z">
									<Path.Effect>
										<DropShadowEffect BlurRadius="6" Color="OrangeRed" ShadowDepth="0" />
									</Path.Effect>
								</Path>
								<Path HorizontalAlignment="Center" VerticalAlignment="Bottom" Stretch="Uniform" Margin="0,0,3,0" Height="44" Fill="Orange" Data="M563.308448 313.43188C495.439988 103.734035 591.338282 0 591.338282 0S276.514483 151.316058 183.199572 559.143951c-39.235011-56.442559-73.469923-87.328305-69.571197-77.222249 42.108942 109.060717-53.057357 157.906279-51.793818 272.879275 1.281557 114.954978 199.722422 246.534159 199.722422 246.53416l0.054055-0.164418a291.39766 291.39766 0 0 0 24.716706 16.349423 384.906268 384.906268 0 0 1-20.761672-26.948732c-21.511687-30.70331-36.61559-63.089087-36.964696-94.303668-0.677941-61.589057 26.252772-104.20927 44.982872-147.2867 16.23906-37.311549 26.345116-74.972205 6.810946-125.592576-3.076637-7.964122 17.63098 9.630821 45.750906 45.111254 54.850185-148.770963 108.878281-277.676668 108.878281-277.676668s1.391919 202.504009 70.028413 332.270091c64.424699 121.801961 60.56201 184.361758 60.56201 184.361757 117.189257-112.026992 156.385979-290.053039 156.385979-290.053039 42.602195 37.568311 67.098175 85.314752 80.884484 133.263899 29.036611 100.932178-30.95782 202.375628-32.295685 212.188885-0.567579 4.083414-1.610392 7.889796-2.488788 11.790774-4.101433 18.417031-11.479957 34.876817-21.640068 49.359086 11.00247-6.993382 21.439614-14.700741 31.489362-22.8473l0.054055 0.164418s182.895512-131.579181 184.159051-246.552178c1.263539-114.954978-93.900507-163.80054-51.793818-272.879275 3.644216-9.446133-24.185163 16.842676-57.724115 66.440504-33.210117-102.432208-54.485313-185.222135-165.46724-283.113712 0 0 20.522929 222.680084-97.434361 383.917509 0.020271 0.047298 41.451271-125.984476-26.435208-335.702591z">
									<Path.Effect>
										<DropShadowEffect BlurRadius="10" Color="Orange" ShadowDepth="0" />
									</Path.Effect>
								</Path>
								<Path HorizontalAlignment="Center" VerticalAlignment="Bottom" Stretch="Uniform" Margin="0,0,3,0" Height="38" Fill="Gold" Data="M563.308448 313.43188C495.439988 103.734035 591.338282 0 591.338282 0S276.514483 151.316058 183.199572 559.143951c-39.235011-56.442559-73.469923-87.328305-69.571197-77.222249 42.108942 109.060717-53.057357 157.906279-51.793818 272.879275 1.281557 114.954978 199.722422 246.534159 199.722422 246.53416l0.054055-0.164418a291.39766 291.39766 0 0 0 24.716706 16.349423 384.906268 384.906268 0 0 1-20.761672-26.948732c-21.511687-30.70331-36.61559-63.089087-36.964696-94.303668-0.677941-61.589057 26.252772-104.20927 44.982872-147.2867 16.23906-37.311549 26.345116-74.972205 6.810946-125.592576-3.076637-7.964122 17.63098 9.630821 45.750906 45.111254 54.850185-148.770963 108.878281-277.676668 108.878281-277.676668s1.391919 202.504009 70.028413 332.270091c64.424699 121.801961 60.56201 184.361758 60.56201 184.361757 117.189257-112.026992 156.385979-290.053039 156.385979-290.053039 42.602195 37.568311 67.098175 85.314752 80.884484 133.263899 29.036611 100.932178-30.95782 202.375628-32.295685 212.188885-0.567579 4.083414-1.610392 7.889796-2.488788 11.790774-4.101433 18.417031-11.479957 34.876817-21.640068 49.359086 11.00247-6.993382 21.439614-14.700741 31.489362-22.8473l0.054055 0.164418s182.895512-131.579181 184.159051-246.552178c1.263539-114.954978-93.900507-163.80054-51.793818-272.879275 3.644216-9.446133-24.185163 16.842676-57.724115 66.440504-33.210117-102.432208-54.485313-185.222135-165.46724-283.113712 0 0 20.522929 222.680084-97.434361 383.917509 0.020271 0.047298 41.451271-125.984476-26.435208-335.702591z">
									<Path.Effect>
										<DropShadowEffect BlurRadius="10" Color="Gold" ShadowDepth="0" />
									</Path.Effect>
								</Path>
								<Path HorizontalAlignment="Center" VerticalAlignment="Bottom" Stretch="Uniform" Height="32" Margin="0,0,3,0" Fill="LightYellow" Data="M563.308448 313.43188C495.439988 103.734035 591.338282 0 591.338282 0S276.514483 151.316058 183.199572 559.143951c-39.235011-56.442559-73.469923-87.328305-69.571197-77.222249 42.108942 109.060717-53.057357 157.906279-51.793818 272.879275 1.281557 114.954978 199.722422 246.534159 199.722422 246.53416l0.054055-0.164418a291.39766 291.39766 0 0 0 24.716706 16.349423 384.906268 384.906268 0 0 1-20.761672-26.948732c-21.511687-30.70331-36.61559-63.089087-36.964696-94.303668-0.677941-61.589057 26.252772-104.20927 44.982872-147.2867 16.23906-37.311549 26.345116-74.972205 6.810946-125.592576-3.076637-7.964122 17.63098 9.630821 45.750906 45.111254 54.850185-148.770963 108.878281-277.676668 108.878281-277.676668s1.391919 202.504009 70.028413 332.270091c64.424699 121.801961 60.56201 184.361758 60.56201 184.361757 117.189257-112.026992 156.385979-290.053039 156.385979-290.053039 42.602195 37.568311 67.098175 85.314752 80.884484 133.263899 29.036611 100.932178-30.95782 202.375628-32.295685 212.188885-0.567579 4.083414-1.610392 7.889796-2.488788 11.790774-4.101433 18.417031-11.479957 34.876817-21.640068 49.359086 11.00247-6.993382 21.439614-14.700741 31.489362-22.8473l0.054055 0.164418s182.895512-131.579181 184.159051-246.552178c1.263539-114.954978-93.900507-163.80054-51.793818-272.879275 3.644216-9.446133-24.185163 16.842676-57.724115 66.440504-33.210117-102.432208-54.485313-185.222135-165.46724-283.113712 0 0 20.522929 222.680084-97.434361 383.917509 0.020271 0.047298 41.451271-125.984476-26.435208-335.702591z">
									<Path.Effect>
										<DropShadowEffect BlurRadius="10" Color="LightYellow" ShadowDepth="0" />
									</Path.Effect>
								</Path>
							</controls:SmallPanel>
						</controls:SmallPanel>
					</Viewbox>
					<ControlTemplate.Triggers>
						<Trigger Property="IsStart" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource PART_Fire_Storyboard}" x:Name="part_fire_storyboard" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="part_fire_storyboard" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="PageListBoxStyleKey" TargetType="{x:Type ListBox}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="PageListBoxItemStyleKey" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="MinWidth" Value="32" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="helpers:ElementHelper.CornerRadius" Value="3" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="5,0" />
		<Setter Property="Margin" Value="3,0" />
		<Setter Property="Background" Value="{DynamicResource BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BaseSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}">
						<ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" TextElement.Foreground="{TemplateBinding Foreground}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding .}" Value="···">
				<Setter Property="IsEnabled" Value="False" />
				<Setter Property="FontWeight" Value="Bold" />
			</DataTrigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource DefaultBorderBrushSolidColorBrush}" />
				<Setter Property="Background" Value="{DynamicResource DefaultBackgroundSolidColorBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
			</Trigger>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="{DynamicResource PrimaryPressedSolidColorBrush}" />
				<Setter Property="TextElement.Foreground" Value="{DynamicResource WindowForegroundColorBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<ControlTemplate x:Key="LitePagerControlTemplate" TargetType="{x:Type controls:Pagination}">
		<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="10" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="10" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="5" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="5" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<TextBlock VerticalAlignment="Center" Text="{Binding Count,StringFormat=共 {0} 条,RelativeSource={RelativeSource TemplatedParent}}" />
				<TextBox Grid.Column="2" x:Name="PART_CountPerPageTextBox" TextAlignment="Center" VerticalContentAlignment="Center" Width="60" MinWidth="0" input:InputMethod.IsInputMethodEnabled="False" />
				<TextBlock Grid.Column="3" Text=" 条 / 页" VerticalAlignment="Center" />
				<Button Grid.Column="5" Command="{x:Static controls:Pagination.PrevCommand}">
					<Path Width="7" Height="10" Stretch="Fill" Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType=Button}}" Data="{StaticResource PathPrevious}" />
				</Button>
				<TextBox Grid.Column="7" x:Name="PART_JumpPageTextBox" TextAlignment="Center" VerticalContentAlignment="Center" Width="60" MinWidth="0">
					<TextBox.ToolTip>
						<TextBlock>
							<TextBlock.Text>
								<MultiBinding StringFormat="{}{0}/{1}">
									<Binding Path="Current" RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="PageCount" RelativeSource="{RelativeSource TemplatedParent}" />
								</MultiBinding>
							</TextBlock.Text>
						</TextBlock>
					</TextBox.ToolTip>
				</TextBox>
				<Button Grid.Column="9" Command="{x:Static controls:Pagination.NextCommand}">
					<Path Width="7" Height="10" Stretch="Fill" Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType=Button}}" Data="{StaticResource PathNext}" />
				</Button>
			</Grid>
		</Border>
	</ControlTemplate>
	<Style TargetType="{x:Type controls:Pagination}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:Pagination}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBlock Margin="0,0,15,0" VerticalAlignment="Center" Text="{Binding Count,StringFormat=共 {0} 条,RelativeSource={RelativeSource TemplatedParent}}" />
							<StackPanel Grid.Column="1" Orientation="Horizontal" Margin="0,0,15,0">
								<TextBlock Text="每页 " VerticalAlignment="Center" />
								<TextBox x:Name="PART_CountPerPageTextBox" TextAlignment="Center" Width="60" MinWidth="0" VerticalContentAlignment="Center" FontSize="{TemplateBinding FontSize}" input:InputMethod.IsInputMethodEnabled="False" />
								<TextBlock Text=" 条" VerticalAlignment="Center" />
							</StackPanel>
							<Button Grid.Column="2" Command="{x:Static controls:Pagination.PrevCommand}">
								<Path Width="7" Height="10" Stretch="Fill" Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType=Button}}" Data="{StaticResource PathPrevious}" />
							</Button>
							<ListBox x:Name="PART_ListBox" Grid.Column="3" SelectedIndex="0" Margin="5,0" ItemsSource="{TemplateBinding Pages}" Style="{StaticResource PageListBoxStyleKey}" ItemContainerStyle="{StaticResource PageListBoxItemStyleKey}" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden">
								<ListBox.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Rows="1" />
									</ItemsPanelTemplate>
								</ListBox.ItemsPanel>
							</ListBox>
							<Button Grid.Column="4" Command="{x:Static controls:Pagination.NextCommand}">
								<Path Width="7" Height="10" Stretch="Fill" Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType=Button}}" Data="{StaticResource PathNext}" />
							</Button>
							<StackPanel Grid.Column="5" Orientation="Horizontal">
								<TextBlock Text=" 前往 " VerticalAlignment="Center" />
								<TextBox x:Name="PART_JumpPageTextBox" TextAlignment="Center" ContextMenu="{x:Null}" Width="60" VerticalContentAlignment="Center" MinWidth="0" FontSize="{TemplateBinding FontSize}" />
								<TextBlock Text=" 页" VerticalAlignment="Center" />
							</StackPanel>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsLite" Value="true">
				<Setter Property="Template" Value="{StaticResource LitePagerControlTemplate}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type controls:PieControl}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Width" Value="250" />
		<Setter Property="Height" Value="250" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:PieControl}">
					<ItemsControl Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ItemsSource="{TemplateBinding PieSegmentModels}" Background="{TemplateBinding Background}">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<Grid IsItemsHost="True" />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<ed:Arc Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ArcThickness="{Binding ArcThickness,RelativeSource={RelativeSource FindAncestor,AncestorType=controls:PieControl}}" ArcThicknessUnit="Percent" EndAngle="{Binding EndAngle}" StartAngle="{Binding StartAngle}" Stretch="None" ToolTip="{Binding Name}" Stroke="{Binding ColorStroke}" StrokeThickness="2" Fill="{Binding Color}" />
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:PrizeItemControl}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:PrizeItemControl">
					<controls:SmallPanel VerticalAlignment="Top">
						<controls:SmallPanel.RenderTransform>
							<RotateTransform x:Name="PART_RotateTransform" Angle="{TemplateBinding Angle}" CenterX="200" CenterY="200" />
						</controls:SmallPanel.RenderTransform>
						<Path x:Name="PART_Path" Data="{StaticResource PathSector}" Fill="{TemplateBinding BackgroundColor}" VerticalAlignment="Center" />
						<TextBlock Text="{TemplateBinding Title}" RenderTransformOrigin="0.5,0.5" Margin="50,100,0,0" Foreground="{DynamicResource BackgroundSolidColorBrush}" FontSize="16" FontWeight="DemiBold" HorizontalAlignment="Left" VerticalAlignment="Center">
							<TextBlock.RenderTransform>
								<RotateTransform Angle="-70" />
							</TextBlock.RenderTransform>
						</TextBlock>
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:DrawPrize}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Width" Value="400" />
		<Setter Property="Height" Value="400" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:DrawPrize}">
					<controls:SmallPanel>
						<ItemsControl x:Name="PART_ItemsControl" ItemsSource="{TemplateBinding ItemsSource}" AlternationCount="{TemplateBinding AlternationCount}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" RenderTransformOrigin=".5,.5">
							<ItemsControl.RenderTransform>
								<RotateTransform x:Name="PART_ItemsControlAngle" Angle="0" />
							</ItemsControl.RenderTransform>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<controls:PrizeItemControl Angle="{Binding Angle}" BackgroundColor="{Binding Path=(ItemsControl.AlternationIndex),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource drawPrizeIndexToColor}}" Title="{Binding Title}" />
								</DataTemplate>
							</ItemsControl.ItemTemplate>
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<Grid />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
						</ItemsControl>
						<Path Data="M562.8 77.6c-31.4-18.1-70.1-18.1-101.5 0C215.4 219.5 64 481.8 64 765.6c0 36.3 19.4 69.8 50.8 87.9 245.8 141.9 548.7 141.9 794.5 0 31.4-18.1 50.8-51.7 50.8-87.9-0.1-283.8-151.5-546.1-397.3-688z" Stretch="Fill" Fill="#fbb845" Width="40" Height="120" Margin="0,0,0,50" />
						<Border Background="#fbb845" x:Name="PART_Border" Width="100" Height="100" CornerRadius="50" Cursor="Hand">
							<TextBlock Text="GO" Foreground="{DynamicResource BackgroundSolidColorBrush}" FontSize="40" FontWeight="DemiBold" VerticalAlignment="Center" HorizontalAlignment="Center" />
						</Border>
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:RainbowAppleButton}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Padding" Value="10" />
		<Setter Property="FontSize" Value="200" />
		<Setter Property="Content" Value="Apple!" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:RainbowAppleButton}">
					<Border x:Name="border" Padding="{TemplateBinding Padding}" Background="Transparent" SnapsToDevicePixels="true">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="textBlock" Storyboard.TargetProperty="(TextBlock.Foreground).(Brush.RelativeTransform).(RotateTransform.Angle)" To="0" Duration="0:0:0.5">
											<DoubleAnimation.EasingFunction>
												<QuarticEase EasingMode="EaseOut" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="textBlock" Storyboard.TargetProperty="(TextBlock.Foreground).(Brush.RelativeTransform).(RotateTransform.Angle)" To="90" Duration="0:0:0.5">
											<DoubleAnimation.EasingFunction>
												<QuarticEase EasingMode="EaseOut" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard SpeedRatio="3">
										<DoubleAnimation Storyboard.TargetName="textBlock" Storyboard.TargetProperty="(TextBlock.Foreground).(Brush.RelativeTransform).(RotateTransform.Angle)" To="90" Duration="0:0:0.5">
											<DoubleAnimation.EasingFunction>
												<QuarticEase EasingMode="EaseOut" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
										<DoubleAnimation Storyboard.TargetName="G2" Storyboard.TargetProperty="Offset" To="0" />
										<DoubleAnimation Storyboard.TargetName="G3" Storyboard.TargetProperty="Offset" To="0" />
										<DoubleAnimation Storyboard.TargetName="G4" Storyboard.TargetProperty="Offset" To="0" />
										<DoubleAnimation Storyboard.TargetName="G5" Storyboard.TargetProperty="Offset" To="0" />
										<DoubleAnimation Storyboard.TargetName="G6" Storyboard.TargetProperty="Offset" To="0" />
										<DoubleAnimation Storyboard.TargetName="G7" Storyboard.TargetProperty="Offset" To="0" />
										<DoubleAnimation Storyboard.TargetName="G8" Storyboard.TargetProperty="Offset" To="1" />
										<DoubleAnimation Storyboard.TargetName="G9" Storyboard.TargetProperty="Offset" To="1" />
										<DoubleAnimation Storyboard.TargetName="G10" Storyboard.TargetProperty="Offset" To="1" />
										<DoubleAnimation Storyboard.TargetName="G11" Storyboard.TargetProperty="Offset" To="1" />
										<DoubleAnimation Storyboard.TargetName="G12" Storyboard.TargetProperty="Offset" To="1" />
										<DoubleAnimation Storyboard.TargetName="G13" Storyboard.TargetProperty="Offset" To="1" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<TextBlock x:Name="textBlock" Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}">
							<TextBlock.Foreground>
								<LinearGradientBrush x:Name="RainbowBrush" StartPoint="0,0.5" EndPoint="1,.5">
									<LinearGradientBrush.RelativeTransform>
										<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5" />
									</LinearGradientBrush.RelativeTransform>
									<GradientStop x:Name="G1" Offset="0" Color="#65b849" />
									<GradientStop x:Name="G2" Offset=".166" Color="#65b849" />
									<GradientStop x:Name="G3" Offset=".166" Color="#f7b423" />
									<GradientStop x:Name="G4" Offset=".3333" Color="#f7b423" />
									<GradientStop x:Name="G5" Offset="0.3333" Color="#f58122" />
									<GradientStop x:Name="G6" Offset="0.5" Color="#f58122" />
									<GradientStop x:Name="G7" Offset="0.5" Color=" #f8f8f8" />
									<GradientStop x:Name="G8" Offset="0.5" Color=" #f8f8f8" />
									<GradientStop x:Name="G9" Offset="0.50" Color="#de3a3c" />
									<GradientStop x:Name="G10" Offset="0.666" Color="#de3a3c" />
									<GradientStop x:Name="G11" Offset="0.666" Color="#943f96" />
									<GradientStop x:Name="G12" Offset="0.8633" Color="#943f96" />
									<GradientStop x:Name="G13" Offset="0.8633" Color="#009fd9" />
									<GradientStop x:Name="G14" Offset="01" Color="#009fd9" />
								</LinearGradientBrush>
							</TextBlock.Foreground>
						</TextBlock>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:RainbowAppleButtonWithGlow}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Padding" Value="10" />
		<Setter Property="FontSize" Value="200" />
		<Setter Property="Content" Value="Apple!" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:RainbowAppleButtonWithGlow}">
					<Border x:Name="border" Padding="{TemplateBinding Padding}" Background="Transparent" SnapsToDevicePixels="true">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<PointAnimation Storyboard.TargetName="RainbowBrush" Storyboard.TargetProperty="StartPoint" To="0,0.5" Duration="0:0:0.5">
											<PointAnimation.EasingFunction>
												<QuarticEase EasingMode="EaseOut" />
											</PointAnimation.EasingFunction>
										</PointAnimation>
										<PointAnimation Storyboard.TargetName="RainbowBrush" Storyboard.TargetProperty="EndPoint" To="1,0.5" Duration="0:0:0.5">
											<PointAnimation.EasingFunction>
												<QuarticEase EasingMode="EaseOut" />
											</PointAnimation.EasingFunction>
										</PointAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<PointAnimation Storyboard.TargetName="RainbowBrush" Storyboard.TargetProperty="StartPoint" To="0.5,0" Duration="0:0:0.5">
											<PointAnimation.EasingFunction>
												<QuarticEase EasingMode="EaseOut" />
											</PointAnimation.EasingFunction>
										</PointAnimation>
										<PointAnimation Storyboard.TargetName="RainbowBrush" Storyboard.TargetProperty="EndPoint" To=".5,1" Duration="0:0:0.5">
											<PointAnimation.EasingFunction>
												<QuarticEase EasingMode="EaseOut" />
											</PointAnimation.EasingFunction>
										</PointAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard SpeedRatio="3">
										<PointAnimation Storyboard.TargetName="RainbowBrush" Storyboard.TargetProperty="StartPoint" To="0.5,0" />
										<PointAnimation Storyboard.TargetName="RainbowBrush" Storyboard.TargetProperty="EndPoint" To=".5,1" />
										<DoubleAnimation Storyboard.TargetName="G2" Storyboard.TargetProperty="Offset" To="0" />
										<DoubleAnimation Storyboard.TargetName="G3" Storyboard.TargetProperty="Offset" To="0" />
										<DoubleAnimation Storyboard.TargetName="G4" Storyboard.TargetProperty="Offset" To="0" />
										<DoubleAnimation Storyboard.TargetName="G5" Storyboard.TargetProperty="Offset" To="0" />
										<DoubleAnimation Storyboard.TargetName="G6" Storyboard.TargetProperty="Offset" To="0" />
										<DoubleAnimation Storyboard.TargetName="G7" Storyboard.TargetProperty="Offset" To="0" />
										<DoubleAnimation Storyboard.TargetName="G8" Storyboard.TargetProperty="Offset" To="1" />
										<DoubleAnimation Storyboard.TargetName="G9" Storyboard.TargetProperty="Offset" To="1" />
										<DoubleAnimation Storyboard.TargetName="G10" Storyboard.TargetProperty="Offset" To="1" />
										<DoubleAnimation Storyboard.TargetName="G11" Storyboard.TargetProperty="Offset" To="1" />
										<DoubleAnimation Storyboard.TargetName="G12" Storyboard.TargetProperty="Offset" To="1" />
										<DoubleAnimation Storyboard.TargetName="G13" Storyboard.TargetProperty="Offset" To="1" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<controls:SmallPanel>
							<TextBlock Foreground="{Binding ElementName=textBlock, Path=Foreground}" Text="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}">
								<TextBlock.Effect>
									<BlurEffect Radius="40" RenderingBias="Quality" />
								</TextBlock.Effect>
							</TextBlock>
							<TextBlock x:Name="textBlock" Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}">
								<TextBlock.Foreground>
									<LinearGradientBrush x:Name="RainbowBrush" StartPoint="0,0.5" EndPoint="1,.5">
										<GradientStop x:Name="G1" Offset="0" Color="#65b849" />
										<GradientStop x:Name="G2" Offset=".166" Color="#65b849" />
										<GradientStop x:Name="G3" Offset=".166" Color="#f7b423" />
										<GradientStop x:Name="G4" Offset=".3333" Color="#f7b423" />
										<GradientStop x:Name="G5" Offset="0.3333" Color="#f58122" />
										<GradientStop x:Name="G6" Offset="0.5" Color="#f58122" />
										<GradientStop x:Name="G7" Offset="0.5" Color=" #f8f8f8" />
										<GradientStop x:Name="G8" Offset="0.5" Color=" #f8f8f8" />
										<GradientStop x:Name="G9" Offset="0.50" Color="#de3a3c" />
										<GradientStop x:Name="G10" Offset="0.666" Color="#de3a3c" />
										<GradientStop x:Name="G11" Offset="0.666" Color="#943f96" />
										<GradientStop x:Name="G12" Offset="0.8633" Color="#943f96" />
										<GradientStop x:Name="G13" Offset="0.8633" Color="#009fd9" />
										<GradientStop x:Name="G14" Offset="01" Color="#009fd9" />
									</LinearGradientBrush>
								</TextBlock.Foreground>
							</TextBlock>
						</controls:SmallPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:RoundPicker}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:RoundPicker}">
					<Canvas x:Name="PART_Canvas" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="PART_DrawArrow" TargetType="{x:Type Control}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="15" />
			</Grid.ColumnDefinitions>
			<Path Data="{StaticResource PathArrowBranches}" Fill="{TemplateBinding Background}" Height="8" Stretch="Fill" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,-7,0" />
			<Path Data="{StaticResource PathArrow}" Fill="{TemplateBinding Background}" Width="15" Height="15" Stretch="Fill" Grid.Column="1" />
		</Grid>
	</ControlTemplate>
	<Style x:Key="ScreenCutRectangleStyle" TargetType="{x:Type Rectangle}">
		<Setter Property="Fill" Value="{DynamicResource BlackSolidColorBrush}" />
		<Setter Property="Opacity" Value=".3" />
	</Style>
	<Style x:Key="ScreenCutEllipseStyle" TargetType="{x:Type Ellipse}">
		<Setter Property="Width" Value="15" />
		<Setter Property="Height" Value="15" />
		<Setter Property="Fill" Value="{DynamicResource BackgroundSolidColorBrush}" />
		<Setter Property="Stroke" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
		<Setter Property="StrokeThickness" Value="2" />
	</Style>
	<Style TargetType="{x:Type controls:ScreenCut}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="WindowState" Value="Maximized" />
		<Setter Property="WindowStyle" Value="None" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ScreenCut}">
					<AdornerDecorator>
						<Canvas x:Name="PART_Canvas" Width="{Binding Source={x:Static SystemParameters.PrimaryScreenWidth}}" Height="{Binding Source={x:Static SystemParameters.PrimaryScreenHeight}}">
							<Rectangle x:Name="PART_RectangleLeft" Style="{DynamicResource ScreenCutRectangleStyle}" />
							<Rectangle x:Name="PART_RectangleTop" Style="{DynamicResource ScreenCutRectangleStyle}" />
							<Rectangle x:Name="PART_RectangleRight" Style="{DynamicResource ScreenCutRectangleStyle}" />
							<Rectangle x:Name="PART_RectangleBottom" Style="{DynamicResource ScreenCutRectangleStyle}" />
							<Border x:Name="PART_Border" BorderBrush="{DynamicResource PrimaryNormalSolidColorBrush}" BorderThickness="2" Background="Transparent" Cursor="SizeAll" />
							<Border x:Name="PART_EditBar" Visibility="Hidden" Effect="{DynamicResource PopupShadowDepth}" Panel.ZIndex="99" Background="{DynamicResource BackgroundSolidColorBrush}">
								<WrapPanel Margin="10,5" VerticalAlignment="Center">
									<RadioButton x:Name="PART_RadioButtonRectangle" Style="{DynamicResource PathRadioButton}" ToolTip="方框" Margin="4,0">
										<RadioButton.Content>
											<Path Fill="{DynamicResource RegularTextSolidColorBrush}" Width="18" Height="18" Stretch="Fill" Data="{StaticResource PathRectangle}" />
										</RadioButton.Content>
									</RadioButton>
									<RadioButton x:Name="PART_RadioButtonEllipse" Style="{DynamicResource PathRadioButton}" ToolTip="椭圆" Margin="4,0">
										<ToggleButton.Content>
											<Ellipse Width="19" Height="19" StrokeThickness="1.5" SnapsToDevicePixels="True" UseLayoutRounding="True" Stroke="{DynamicResource RegularTextSolidColorBrush}" />
										</ToggleButton.Content>
									</RadioButton>
									<RadioButton x:Name="PART_RadioButtonArrow" Style="{DynamicResource PathRadioButton}" ToolTip="箭头" Margin="4,0">
										<RadioButton.Content>
											<Path Fill="{DynamicResource RegularTextSolidColorBrush}" Width="18" Height="18" Stretch="Fill" StrokeThickness="3" Stroke="Transparent" Data="{StaticResource PathArrowRightTop}" />
										</RadioButton.Content>
									</RadioButton>
									<RadioButton x:Name="PART_RadioButtonInk" Style="{DynamicResource PathRadioButton}" ToolTip="画笔" Margin="4,0">
										<RadioButton.Content>
											<Path Fill="{DynamicResource RegularTextSolidColorBrush}" Width="18" Height="18" Stretch="Fill" Data="{StaticResource PathInk}" />
										</RadioButton.Content>
									</RadioButton>
									<RadioButton x:Name="PART_RadioButtonText" Style="{DynamicResource PathRadioButton}" ToolTip="文字" Margin="4,0">
										<RadioButton.Content>
											<Path Fill="{DynamicResource RegularTextSolidColorBrush}" Width="18" Height="18" Stretch="Fill" Data="{StaticResource PathText}" />
										</RadioButton.Content>
									</RadioButton>
									<Rectangle Stroke="{DynamicResource SecondaryTextSolidColorBrush}" Height="18" Width="1" Margin="4,0" />
									<Button x:Name="PART_ButtonSave" Style="{DynamicResource PathButton}" ToolTip="保存" Margin="4,0">
										<Button.Content>
											<Path Fill="{DynamicResource RegularTextSolidColorBrush}" Width="18" Height="18" Stretch="Fill" Data="{StaticResource PathSave}" />
										</Button.Content>
									</Button>
									<Button x:Name="PART_ButtonCancel" Style="{DynamicResource PathButton}" ToolTip="取消" Margin="4,0">
										<Button.Content>
											<Path Fill="{DynamicResource DrawPrizeDualSolidColorBrush}" Width="14" Height="14" Stretch="Fill" Data="{StaticResource PathCancel}" />
										</Button.Content>
									</Button>
									<Button x:Name="PART_ButtonComplete" Style="{DynamicResource PathButton}" ToolTip="完成" Margin="4,0">
										<Button.Content>
											<Path Fill="{DynamicResource SuccessSolidColorBrush}" Width="20" Height="15" Stretch="Fill" Data="{StaticResource PathComplete}" />
										</Button.Content>
									</Button>
								</WrapPanel>
							</Border>
							<Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" VerticalOffset="13">
								<Border Effect="{DynamicResource PopupShadowDepth}" Background="{DynamicResource BackgroundSolidColorBrush}" Margin="10,30,10,10" CornerRadius="{Binding Path=(helpers:ControlsHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" x:Name="PART_PopupBorder">
									<controls:SmallPanel>
										<Path Data="{StaticResource PathUpperTriangle}" Fill="{DynamicResource BackgroundSolidColorBrush}" Stretch="Uniform" Width="10" VerticalAlignment="Top" Margin="0,-8,0,0" SnapsToDevicePixels="True" UseLayoutRounding="True" />
										<WrapPanel Margin="10" VerticalAlignment="Center" x:Name="PART_WrapPanelColor">
											<RadioButton Style="{DynamicResource ColorRadioButton}" Margin="4,0" Background="Red" IsChecked="True" />
											<RadioButton Style="{DynamicResource ColorRadioButton}" Margin="4,0" Background="DodgerBlue" />
											<RadioButton Style="{DynamicResource ColorRadioButton}" Margin="4,0" Background="LimeGreen" />
											<RadioButton Style="{DynamicResource ColorRadioButton}" Margin="4,0" Background="Yellow" />
										</WrapPanel>
									</controls:SmallPanel>
								</Border>
							</Popup>
						</Canvas>
					</AdornerDecorator>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:SnowCanvas}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Width" Value="672" />
		<Setter Property="Height" Value="376" />
		<Setter Property="Background" Value="#FFAD2B28" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:SnowCanvas}">
					<controls:SmallPanel Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}">
						<Canvas x:Name="PART_Canvas" Height="246" Width="246" Background="#FF0C1935">
							<Canvas.Clip>
								<EllipseGeometry Center="123,123" RadiusX="120" RadiusY="120" />
							</Canvas.Clip>
							<Image Source="{TemplateBinding Icon}" Canvas.Left="25" Canvas.Top="30" />
						</Canvas>
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:Snowflake}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:Snowflake}">
					<Ellipse Fill="White" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:SpotLight}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Background" Value="#222222" />
		<Setter Property="FontSize" Value="60" />
		<Setter Property="FontFamily" Value="Arial Black" />
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="Foreground" Value="{StaticResource RainbowBrush}" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:SpotLight}">
					<controls:SmallPanel x:Name="PART_Canvas" Background="{TemplateBinding Background}">
						<TextBlock x:Name="PART_TextBlockBottom" Text="{TemplateBinding Text}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding DefaultForeground}" />
						<TextBlock x:Name="PART_TextBlockTop" Text="{TemplateBinding Text}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}">
							<TextBlock.Clip>
								<EllipseGeometry x:Name="PART_EllipseGeometry">
									<EllipseGeometry.Transform>
										<TranslateTransform />
									</EllipseGeometry.Transform>
								</EllipseGeometry>
							</TextBlock.Clip>
						</TextBlock>
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DrawerMenuToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="IsChecked" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<controls:SmallPanel Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Opacity" Value="0.8" />
				<Setter Property="Cursor" Value="Hand" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
								<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="DrawerMenuListBox" TargetType="ListBox" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<ScrollViewer>
						<ItemsPresenter Margin="0" />
					</ScrollViewer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DrawerMenuItemButtonStyle" TargetType="Button" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
		<Setter Property="MinHeight" Value="23" />
		<Setter Property="MinWidth" Value="75" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="Border" CornerRadius="0" BorderThickness="0" Background="Transparent" BorderBrush="Transparent">
						<ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RecognizesAccessKey="True" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" />
						</Trigger>
						<Trigger Property="IsDefaulted" Value="true">
							<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource DarkBrush}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedBrush}" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="controls:DrawerMenuItem">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:DrawerMenu}}, Path=MenuItemForeground}" />
		<Setter Property="SelectionIndicatorColor" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:DrawerMenu}}, Path=SelectionIndicatorColor}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:DrawerMenuItem">
					<Button x:Name="PART_Button" Height="44" Command="{TemplateBinding SelectionCommand}" ToolTip="{TemplateBinding Text}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Style="{StaticResource DrawerMenuItemButtonStyle}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="5" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<Grid Grid.ColumnSpan="2">
								<Grid Width="300">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="45" />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>
									<Image Grid.Column="0" Source="{TemplateBinding Icon}" Margin="10,5,5,5" />
									<TextBlock Text="{TemplateBinding Text}" Grid.Column="1" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{StaticResource TitleFontSize}" Foreground="{TemplateBinding Foreground}" TextWrapping="Wrap" />
								</Grid>
							</Grid>
							<controls:SmallPanel x:Name="PART_ItemSelectedIndicator" Grid.Column="0" Background="{TemplateBinding SelectionIndicatorColor}" Visibility="Collapsed" />
						</Grid>
					</Button>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="PART_ItemSelectedIndicator" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger SourceName="PART_Button" Property="IsPressed" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsSelected">
											<DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True" />
										</BooleanAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="controls:DrawerMenu">
		<Setter Property="Width" Value="50" />
		<Setter Property="Visibility" Value="Visible" />
		<Setter Property="IsOpen" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:DrawerMenu">
					<Grid Background="{TemplateBinding Background}">
						<ToggleButton HorizontalAlignment="Left" Background="#333" VerticalAlignment="Top" Height="40" Width="50" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:DrawerMenu}}, Path=IsOpen}" Style="{StaticResource DrawerMenuToggleButton}">
							<Path HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Width="20" Fill="{TemplateBinding MenuIconColor}" Data="{StaticResource PathMenu}" />
						</ToggleButton>
						<ListBox ItemsSource="{TemplateBinding Content}" HorizontalAlignment="Left" Margin="0,40,0,0" VerticalAlignment="Top" Style="{StaticResource DrawerMenuListBox}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectedIndex="0" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsOpen" Value="False">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Width" To="180" Duration="0:0:0.2" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Width" To="50" Duration="0:0:0.2" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
		</Style.Triggers>
	</Style>
	<DataTemplate x:Key="TimeContent">
		<Ellipse Stroke="{StaticResource BorderBrushItem}" Fill="White" VerticalAlignment="Top" StrokeThickness="2" Width="10" Height="10" />
	</DataTemplate>
	<DataTemplate x:Key="TextStar">
		<WrapPanel Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type controls:TimeLineItem}}}">
			<Path Data="{StaticResource PathStar}" Height="15" Width="15" Fill="Gray" Stretch="Fill" />
			<TextBlock Margin="4,0" Text="Star 了" FontSize="12" VerticalAlignment="Center" />
			<TextBlock Text="{Binding Text, RelativeSource={RelativeSource AncestorType={x:Type controls:TimeLineItem}}}" VerticalAlignment="Center" Foreground="#005980" FontSize="12" />
		</WrapPanel>
	</DataTemplate>
	<Style TargetType="{x:Type controls:TimeLineItem}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type controls:TimeLine}}}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type controls:TimeLine}}}" />
		<Setter Property="Padding" Value="15,0,15,0" />
		<Setter Property="MinHeight" Value="50" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type controls:TimeLine}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type controls:TimeLine}}}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="CommonTemplate" Value="{StaticResource TimeContent}" />
		<Setter Property="TextTemplate" Value="{StaticResource TextTime}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:TimeLineItem}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Rectangle x:Name="PART_Rectangle" Grid.RowSpan="2" Width="1" Fill="{TemplateBinding BorderBrush}" />
						<ContentPresenter x:Name="PART_ContentPresenter" ContentTemplate="{TemplateBinding CommonTemplate}" Content="{TemplateBinding Head}" Width="30" Height="30" />
						<ContentPresenter x:Name="PART_ContentPresenterText" ContentTemplate="{TemplateBinding TextTemplate}" Content="{TemplateBinding Text}" Grid.Row="0" Grid.Column="1" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="ItemType" Value="{x:Static controls:ItemTypeEnum.Name}">
							<Setter Property="CommonTemplate" Value="{StaticResource NameContent}" />
							<Setter Property="TextTemplate" Value="{StaticResource TextName}" />
						</Trigger>
						<Trigger Property="ItemType" Value="{x:Static controls:ItemTypeEnum.Star}">
							<Setter Property="CommonTemplate" Value="{x:Null}" />
							<Setter Property="TextTemplate" Value="{StaticResource TextStar}" />
						</Trigger>
						<Trigger Property="IsBottom" Value="true">
							<Setter Property="Visibility" TargetName="PART_Rectangle" Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:TimeLine}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Gray" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:TimeLine}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
						<ScrollViewer VerticalScrollBarVisibility="Auto">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="controls:CropAvatar" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:CropAvatar}">
					<Canvas x:Name="PART_Canvas" ClipToBounds="True">
						<Image x:Name="PART_Image" Cursor="SizeAll" />
						<Path x:Name="PART_Layout" Fill="{DynamicResource BlackSolidColorBrush}" Width="200" Height="200" Opacity=".5">
							<Path.Data>
								<CombinedGeometry GeometryCombineMode="Xor">
									<CombinedGeometry.Geometry1>
										<RectangleGeometry Rect="0,0,200,200" />
									</CombinedGeometry.Geometry1>
									<CombinedGeometry.Geometry2>
										<EllipseGeometry Center="100,100" RadiusX="100" RadiusY="100" />
									</CombinedGeometry.Geometry2>
								</CombinedGeometry>
							</Path.Data>
						</Path>
						<controls:SmallPanel x:Name="PART_Grid" Width="200" Height="200">
							<Button x:Name="PART_ReplaceButton" Style="{StaticResource PathButton}" HorizontalAlignment="Right" VerticalAlignment="Top" Width="40" Height="40" ToolTip="更换图片" Visibility="Collapsed">
								<Button.Content>
									<Path Data="{StaticResource PathReplace}" Fill="{StaticResource PrimaryNormalSolidColorBrush}" Height="15" Width="15" Stretch="Fill" />
								</Button.Content>
							</Button>
							<Button x:Name="PART_AddButton" Style="{StaticResource PathButton}" Width="40" Height="40" ToolTip="选择图片">
								<Button.Content>
									<Path Data="{StaticResource PathAdd}" Fill="{StaticResource PrimaryNormalSolidColorBrush}" Height="20" Width="20" Stretch="Fill" RenderTransformOrigin="0.5,0.5" IsHitTestVisible="False">
										<Path.RenderTransform>
											<RotateTransform Angle="45" />
										</Path.RenderTransform>
									</Path>
								</Button.Content>
							</Button>
						</controls:SmallPanel>
					</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:StarrySky}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Background" Value="{StaticResource StarrySkyRadialGradientBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:StarrySky}">
					<controls:SmallPanel Background="{TemplateBinding Background}">
						<controls:SmallPanel x:Name="PART_GridLineContainer" />
						<Canvas x:Name="PART_CanvasStarContainer" />
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="controls:BubblleControl" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Width" Value="400" />
		<Setter Property="Height" Value="400" />
		<Setter Property="Background" Value="{StaticResource BackgroundSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="{StaticResource SecondaryTextSolidColorBrush}" />
		<Setter Property="BorderBackground" Value="{StaticResource BaseSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:BubblleControl">
					<controls:SmallPanel Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding BorderBackground}" Margin="45" CornerRadius="400" x:Name="PART_Border">
							<Ellipse Fill="{TemplateBinding Background}" Margin="20" />
						</Border>
						<Ellipse Fill="{TemplateBinding EarthBackground}" Width="26" Height="26" RenderTransformOrigin=".5,.5" x:Name="PART_Ellipse" VerticalAlignment="Top" Margin="0,35,0,0">
							<Ellipse.RenderTransform>
								<RotateTransform x:Name="PART_EllipseRotateTransform" />
							</Ellipse.RenderTransform>
							<Ellipse.Triggers>
								<EventTrigger RoutedEvent="Loaded">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Storyboard.TargetProperty="(Ellipse.RenderTransform).(RotateTransform.Angle)" RepeatBehavior="Forever" From="0" To="360" Duration="00:00:13" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
							</Ellipse.Triggers>
						</Ellipse>
						<ItemsControl x:Name="PART_ListBox" ItemsSource="{TemplateBinding ItemsSource}">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<controls:SmallPanel>
										<controls:SmallPanel Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
											<Ellipse Fill="{Binding Bg}" Opacity=".4" />
											<Ellipse Stroke="{Binding Bg}" StrokeThickness=".8" />
										</controls:SmallPanel>
										<TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Padding="10,0">
											<Hyperlink Foreground="{Binding Bg}" Command="{x:Static controls:BubblleControl.ClickCommand}" CommandParameter="{Binding Text}" FontWeight="Normal">
												<TextBlock Text="{Binding Text}" TextAlignment="Center" TextTrimming="CharacterEllipsis" ToolTip="{Binding Text}" />
											</Hyperlink>
										</TextBlock>
									</controls:SmallPanel>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<controls:BubblleCanvas />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
						</ItemsControl>
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:Magnifier}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="IsHitTestVisible" Value="False" />
		<Setter Property="Width" Value="200" />
		<Setter Property="Height" Value="200" />
		<Setter Property="BorderThickness" Value="8" />
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:Magnifier}">
					<Canvas Name="PART_Canvas">
						<Border x:Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Height}" CornerRadius="{TemplateBinding CornerRadius}">
							<Ellipse>
								<Ellipse.Fill>
									<VisualBrush x:Name="PART_VisualBrush" Visual="{Binding ParentTarget,RelativeSource={RelativeSource TemplatedParent}}" ViewboxUnits="Absolute" />
								</Ellipse.Fill>
							</Ellipse>
						</Border>
					</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controls:MagnifierDesktop}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="WindowState" Value="Maximized" />
		<Setter Property="WindowStyle" Value="None" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:MagnifierDesktop}">
					<AdornerDecorator>
						<Border x:Name="PART_Border" controls:Magnifier.Add="{x:Static controls:Magnifier.Default}" />
					</AdornerDecorator>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DatePickerCalendarStyle" TargetType="{x:Type Calendar}" BasedOn="{StaticResource {x:Type Calendar}}" />
	<Style x:Key="DefaultDatePicker" TargetType="{x:Type DatePicker}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="IsTodayHighlighted" Value="True" />
		<Setter Property="SelectedDateFormat" Value="Short" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="MinWidth" Value="140" />
		<Setter Property="MinHeight" Value="{StaticResource MinHeight}" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="CalendarStyle" Value="{DynamicResource DatePickerCalendarStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DatePicker}">
					<Border BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" x:Name="PART_Border" BorderBrush="{DynamicResource BaseSolidColorBrush}" Background="{DynamicResource BackgroundSolidColorBrush}">
						<Grid x:Name="PART_Root" HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<Button x:Name="PART_Button" Foreground="{TemplateBinding Foreground}" Focusable="False" Margin="3,0,3,0" Style="{StaticResource DropDownButtonStyle}" VerticalAlignment="Top" />
							<DatePickerTextBox x:Name="PART_TextBox" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="True" Width="Auto" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="34,2,2,2" Background="Transparent" />
							<Popup x:Name="PART_Popup" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" AllowsTransparency="True" Focusable="False" HorizontalOffset="-50" Placement="Bottom" StaysOpen="False" VerticalOffset="10" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsDropDownOpen" Value="True">
							<Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource DefaultDatePicker}" />
</ResourceDictionary>